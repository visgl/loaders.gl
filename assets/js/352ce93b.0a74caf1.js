"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1007],{13367:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>a,frontMatter:()=>t,metadata:()=>o,toc:()=>l});var i=d(62540),r=d(43023);const t={},s="PCD - Point Cloud Data",o={id:"modules/pcd/formats/pcd",title:"PCD - Point Cloud Data",description:"- @loaders.gl/pcd",source:"@site/../docs/modules/pcd/formats/pcd.md",sourceDirName:"modules/pcd/formats",slug:"/modules/pcd/formats/pcd",permalink:"/docs/modules/pcd/formats/pcd",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/pcd/formats/pcd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Draco3D",permalink:"/docs/modules/draco/formats/draco"},next:{title:"PLY - Polygon File Format",permalink:"/docs/modules/ply/formats/ply"}},c={},l=[{value:"Columns",id:"columns",level:2},{value:"Detailed File Structure",id:"detailed-file-structure",level:2},{value:"Versions",id:"versions",level:2},{value:"PCD 0.7 (PCD_V7)",id:"pcd-07-pcd_v7",level:3},{value:"Example file",id:"example-file",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"pcd---point-cloud-data",children:"PCD - Point Cloud Data"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"/docs/modules/pcd",children:(0,i.jsx)(n.code,{children:"@loaders.gl/pcd"})})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://pcl.readthedocs.io/projects/tutorials/en/latest/pcd_file_format.html",children:"PCD documentation"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Point_Cloud_Library",children:"Wikipedia article"})})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"PCD (Point Cloud Data) is a data format for storing 3D point clouds with some notable characteristics:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Binary storage for fast saving and loading of points (memory mapping possible on some systems)."}),"\n",(0,i.jsx)(n.li,{children:"Supports compressed binary storage for compact file sizes."}),"\n",(0,i.jsx)(n.li,{children:"Supports ASCII storage for easy inspection and editing."}),"\n",(0,i.jsx)(n.li,{children:"Ability to store and process organized point cloud datasets."}),"\n",(0,i.jsx)(n.li,{children:"ASCII header is always human readable, can easily can be inspected and even edited in standard software tools."}),"\n",(0,i.jsx)(n.li,{children:"Supports numeric columns only, no text columns or metadata"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"columns",children:"Columns"}),"\n",(0,i.jsx)(n.p,{children:"PCD files can contain arbitrarily named columns, however some columns have pre-defined semantics:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Column name"}),(0,i.jsx)(n.th,{children:"Format"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"x"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"float32"})}),(0,i.jsx)(n.td,{children:"Spatial coordinate, x dimension"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"y"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"float32"})}),(0,i.jsx)(n.td,{children:"Spatial coordinate, y dimension"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"z"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"float32"})}),(0,i.jsx)(n.td,{children:"Spatial coordinate, z dimension"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"normal_x"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"float32"})}),(0,i.jsx)(n.td,{children:"Normal vector, x component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"normal_y"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"float32"})}),(0,i.jsx)(n.td,{children:"Normal vector, y component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"normal_z"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"float32"})}),(0,i.jsx)(n.td,{children:"Normal vector, z component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"color_r"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"uint8"})}),(0,i.jsx)(n.td,{children:"Color, red component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"color_g"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"uint8"})}),(0,i.jsx)(n.td,{children:"Color, green component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"color_b"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"uint8"})}),(0,i.jsx)(n.td,{children:"Color, blue component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"color_a"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"uint8"})}),(0,i.jsx)(n.td,{children:"Color, alpha component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"rgb"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Color without alpha component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"rgba"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Color with alpha component"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"intensity"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["PCD supports color with a 4-byte ",(0,i.jsx)(n.code,{children:"rgb"})," or ",(0,i.jsx)(n.code,{children:"rgba"})," component; this contains the same information as the group of ",(0,i.jsx)(n.code,{children:"color_r"}),", ",(0,i.jsx)(n.code,{children:"color_g"}),", ",(0,i.jsx)(n.code,{children:"color_b"}),", and ",(0,i.jsx)(n.code,{children:"color_a"})," components."]}),"\n",(0,i.jsx)(n.h2,{id:"detailed-file-structure",children:"Detailed File Structure"}),"\n",(0,i.jsx)(n.p,{children:"The PCD file is divided into two parts - header and data."}),"\n",(0,i.jsx)(n.p,{children:"The header contains the necessary information about the point cloud data that are stored in the file. The header is encoded in ASCI and has a precisely defined format with one named field per line. Note that order of header entries is important!"}),"\n",(0,i.jsx)(n.p,{children:"In version 0.7 the version of the PCD file is at the beginning of the header, followed by the name, size, and type of each dimension of the stored data."}),"\n",(0,i.jsx)(n.p,{children:"The header contains data such as"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Header field"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"VERSION"})}),(0,i.jsxs)(n.td,{children:["PCD version, should be ",(0,i.jsx)(n.code,{children:".7"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"FIELDS"})}),(0,i.jsx)(n.td,{children:"name of each dimension of the stored data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SIZE"})}),(0,i.jsx)(n.td,{children:"size of each dimension of the stored data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"TYPE"})}),(0,i.jsx)(n.td,{children:"type of each dimension of the stored data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"WIDTH"}),", ",(0,i.jsx)(n.code,{children:"HEiGHT"})]}),(0,i.jsx)(n.td,{children:"A number of points (height*width) in the whole cloud information about whether the point cloud dataset is organized or unorganized."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"DATA"})}),(0,i.jsx)(n.td,{children:"The data type specifies in which format the point cloud data are stored (ASCII or binary)."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"While the PCD header is always encoded in ASCII, the point data that follows it can be stored in three different formats:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ASCII"}),"\n",(0,i.jsx)(n.li,{children:"Binary"}),"\n",(0,i.jsx)(n.li,{children:"Compressed binary"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each point can be stored on a separate line (unorganized point-cloud) or they are stored in an image-like organized structure (organized point-cloud)."}),"\n",(0,i.jsx)(n.h2,{id:"versions",children:"Versions"}),"\n",(0,i.jsx)(n.p,{children:"The PCD version is specified with the numbers 0.x (e.g., 0.5, 0.6, etc.) in the header of each file."}),"\n",(0,i.jsxs)(n.p,{children:["PCD was originally released in 2011. PCD was created because existing formats (such as PLY, IFS, VTK, STL, OBJ, X3D) lacked the features, flexibility and speed Required by the ",(0,i.jsx)(n.a,{href:"https://pointclouds.org/documentation/",children:"PCL"})," (Point Cloud Library) project."]}),"\n",(0,i.jsx)(n.h3,{id:"pcd-07-pcd_v7",children:"PCD 0.7 (PCD_V7)"}),"\n",(0,i.jsx)(n.p,{children:"The official version in 2020."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["New header field: ",(0,i.jsx)(n.code,{children:"VIEWPOINT"})," that specifies the orientation of the sensor relative to the dataset."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-file",children:"Example file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# .PCD v.7 - Point Cloud Data file format\nVERSION .7\nFIELDS x y z rgb\nSIZE 4 4 4 4\nTYPE F F F F\nCOUNT 1 1 1 1\nWIDTH 213\nHEIGHT 1\nVIEWPOINT 0 0 0 1 0 0 0\nPOINTS 213\nDATA ascii\n0.93773 0.33763 0 4.2108e+06\n0.90805 0.35641 0 4.2108e+06\n0.81915 0.32 0 4.2108e+06\n0.97192 0.278 0 4.2108e+06\n0.944 0.29474 0 4.2108e+06\n0.98111 0.24247 0 4.2108e+06\n"})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},43023:(e,n,d)=>{d.d(n,{R:()=>s,x:()=>o});var i=d(63696);const r={},t=i.createContext(r);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);