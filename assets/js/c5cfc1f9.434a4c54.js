"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1543],{2847:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var t=r(74848),n=r(28453);const i={},o="GeoJSONWriter",d={id:"modules/json/api-reference/geojson-writer",title:"GeoJSONWriter",description:"Streaming writer for GeoJSON encoded files.",source:"@site/../docs/modules/json/api-reference/geojson-writer.md",sourceDirName:"modules/json/api-reference",slug:"/modules/json/api-reference/geojson-writer",permalink:"/docs/modules/json/api-reference/geojson-writer",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/json/api-reference/geojson-writer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ImageWriter",permalink:"/docs/modules/images/api-reference/image-writer"},next:{title:"CompressedTextureWriter \ud83d\udea7",permalink:"/docs/modules/textures/api-reference/compressed-texture-writer"}},a={},c=[{value:"Usage",id:"usage",level:2},{value:"Streaming and JSON paths",id:"streaming-and-json-paths",level:3},{value:"Data Format",id:"data-format",level:2},{value:"Options",id:"options",level:2},{value:"JSONPaths",id:"jsonpaths",level:2},{value:"Attribution",id:"attribution",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"geojsonwriter",children:"GeoJSONWriter"}),"\n",(0,t.jsx)("p",{class:"badges",children:(0,t.jsx)("img",{src:"https://img.shields.io/badge/From-v4.0-blue.svg?style=flat-square",alt:"From-v4.0"})}),"\n",(0,t.jsx)(s.p,{children:"Streaming writer for GeoJSON encoded files."}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Loader"}),(0,t.jsx)(s.th,{children:"Characteristic"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"File Extension"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:".geojson"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Media Type"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"application/geo+json"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"File Type"}),(0,t.jsx)(s.td,{children:"Text"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"File Format"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://geojson.org",children:"GeoJSON"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Data Format"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/docs/specifications/category-table",children:"Classic Table"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Supported APIs"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"encode"}),", ",(0,t.jsx)(s.code,{children:"encodeSync"}),", ",(0,t.jsx)(s.code,{children:"encode\xd3InBatches"})]})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(s.p,{children:'For simple usage, you can encode a table into a JSON "file" atomically:'}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"import {GeoJSONWriter} from '@loaders.gl/json';\nimport {encode} from '@loaders.gl/core';\n\nconst data = await encode(url, GeoJSONWriter, {json: options});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"streaming-and-json-paths",children:"Streaming and JSON paths"}),"\n",(0,t.jsx)(s.p,{children:'For larger files, GeoJSONWriter supports streaming JSON parsing, in which case it will yield "batches" of rows from one array.'}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"import {GeoJSONWriter} from '@loaders.gl/json';\nimport {encodeInBatches} from '@loaders.gl/core';\n\nconst batches = await encodeInBatches('geojson.json', GeoJSONWriter, {json: {jsonpaths: ['$.features']}});\n\nfor await (const batch of batches) {\n  // batch.data will contain a number of rows\n  for (const feature of batch.data) {\n    switch (feature.geometry.type) {\n      case 'Polygon':\n      ...\n    }\n  }\n}\n"})}),"\n",(0,t.jsxs)(s.p,{children:["To parse a stream of GeoJSON, the user can specify the ",(0,t.jsx)(s.code,{children:"options.json.jsonpaths"})," to stream the ",(0,t.jsx)(s.code,{children:"features"})," array."]}),"\n",(0,t.jsx)(s.p,{children:"If no JSONPath is specified the loader will stream the first array it encounters in the JSON payload."}),"\n",(0,t.jsx)(s.h2,{id:"data-format",children:"Data Format"}),"\n",(0,t.jsx)(s.p,{children:"Encoded batches are array buffers or strings"}),"\n",(0,t.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(s.p,{children:["Supports table category options such as ",(0,t.jsx)(s.code,{children:"batchType"})," and ",(0,t.jsx)(s.code,{children:"batchSize"}),"."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Option"}),(0,t.jsx)(s.th,{children:"From"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Default"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"json.table"})}),(0,t.jsxs)(s.td,{children:["[",(0,t.jsx)(s.img,{src:"https://img.shields.io/badge/v2.0-blue.svg?style=flat-square",alt:"Website shields.io"}),"]"]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"boolean"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsxs)(s.td,{children:["Parses non-streaming JSON as table, i.e. return the first embedded array in the JSON. Always ",(0,t.jsx)(s.code,{children:"true"})," during batched/streaming parsing."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"json.jsonpaths"})}),(0,t.jsxs)(s.td,{children:["[",(0,t.jsx)(s.img,{src:"https://img.shields.io/badge/v2.2-blue.svg?style=flat-square",alt:"Website shields.io"}),"]"]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"string[]"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"[]"})}),(0,t.jsx)(s.td,{children:"A list of JSON paths (see below) indicating the array that can be streamed."})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"jsonpaths",children:"JSONPaths"}),"\n",(0,t.jsx)(s.p,{children:"A minimal subset of the JSONPath syntax is supported, to specify which array in a JSON object should be streamed as batchs."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"$.component1.component2.component3"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["No support for wildcards, brackets etc. Only paths starting with ",(0,t.jsx)(s.code,{children:"$"})," (JSON root) are supported."]}),"\n",(0,t.jsx)(s.li,{children:"Regardless of the paths provided, only arrays will be streamed."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"attribution",children:"Attribution"}),"\n",(0,t.jsxs)(s.p,{children:["This loader is based on a fork of dscape's ",(0,t.jsx)(s.a,{href:"https://github.com/dscape/clarinet",children:(0,t.jsx)(s.code,{children:"clarinet"})})," under BSD 2-clause license."]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>d});var t=r(96540);const n={},i=t.createContext(n);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);