"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[456],{10456:(t,e,n)=>{n.d(e,{LF4:()=>a});const i=64;class s{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=0,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:0,descriptorBlockSize:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],this.keyValue={},this.globalData=null}}class r{constructor(t,e,n,i){this._dataView=void 0,this._littleEndian=void 0,this._offset=void 0,this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_nextInt32(){const t=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint8Array(t){const e=new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+this._offset,t);return this._offset+=t,e}_skip(t){return this._offset+=t,this}_scan(t,e=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}new Uint8Array([0]);const o=[171,75,84,88,32,50,48,187,13,10,26,10];function _(t){return(new TextDecoder).decode(t)}function a(t){const e=new Uint8Array(t.buffer,t.byteOffset,o.length);if(e[0]!==o[0]||e[1]!==o[1]||e[2]!==o[2]||e[3]!==o[3]||e[4]!==o[4]||e[5]!==o[5]||e[6]!==o[6]||e[7]!==o[7]||e[8]!==o[8]||e[9]!==o[9]||e[10]!==o[10]||e[11]!==o[11])throw new Error("Missing KTX 2.0 identifier.");const n=new s,a=17*Uint32Array.BYTES_PER_ELEMENT,f=new r(t,o.length,a,!0);n.vkFormat=f._nextUint32(),n.typeSize=f._nextUint32(),n.pixelWidth=f._nextUint32(),n.pixelHeight=f._nextUint32(),n.pixelDepth=f._nextUint32(),n.layerCount=f._nextUint32(),n.faceCount=f._nextUint32();const l=f._nextUint32();n.supercompressionScheme=f._nextUint32();const U=f._nextUint32(),h=f._nextUint32(),x=f._nextUint32(),c=f._nextUint32(),p=f._nextUint64(),d=f._nextUint64(),u=3*l*8,y=new r(t,o.length+a,u,!0);for(let i=0;i<l;i++)n.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+y._nextUint64(),y._nextUint64()),uncompressedByteLength:y._nextUint64()});const w=new r(t,U,h,!0),b={vendorId:w._skip(4)._nextUint16(),descriptorType:w._nextUint16(),versionNumber:w._nextUint16(),descriptorBlockSize:w._nextUint16(),colorModel:w._nextUint8(),colorPrimaries:w._nextUint8(),transferFunction:w._nextUint8(),flags:w._nextUint8(),texelBlockDimension:[w._nextUint8(),w._nextUint8(),w._nextUint8(),w._nextUint8()],bytesPlane:[w._nextUint8(),w._nextUint8(),w._nextUint8(),w._nextUint8(),w._nextUint8(),w._nextUint8(),w._nextUint8(),w._nextUint8()],samples:[]},g=(b.descriptorBlockSize/4-6)/4;for(let s=0;s<g;s++){const t={bitOffset:w._nextUint16(),bitLength:w._nextUint8(),channelType:w._nextUint8(),samplePosition:[w._nextUint8(),w._nextUint8(),w._nextUint8(),w._nextUint8()],sampleLower:-1/0,sampleUpper:1/0};t.channelType&i?(t.sampleLower=w._nextInt32(),t.sampleUpper=w._nextInt32()):(t.sampleLower=w._nextUint32(),t.sampleUpper=w._nextUint32()),b.samples[s]=t}n.dataFormatDescriptor.length=0,n.dataFormatDescriptor.push(b);const m=new r(t,x,c,!0);for(;m._offset<c;){const t=m._nextUint32(),e=m._scan(t),i=_(e);if(n.keyValue[i]=m._nextUint8Array(t-e.byteLength-1),i.match(/^ktx/i)){const t=_(n.keyValue[i]);n.keyValue[i]=t.substring(0,t.lastIndexOf("\0"))}const s=t%4?4-t%4:0;m._skip(s)}if(d<=0)return n;const k=new r(t,p,d,!0),V=k._nextUint16(),D=k._nextUint16(),E=k._nextUint32(),O=k._nextUint32(),v=k._nextUint32(),A=k._nextUint32(),S=[];for(let i=0;i<l;i++)S.push({imageFlags:k._nextUint32(),rgbSliceByteOffset:k._nextUint32(),rgbSliceByteLength:k._nextUint32(),alphaSliceByteOffset:k._nextUint32(),alphaSliceByteLength:k._nextUint32()});const B=p+k._offset,L=B+E,F=L+O,C=F+v,T=new Uint8Array(t.buffer,t.byteOffset+B,E),I=new Uint8Array(t.buffer,t.byteOffset+L,O),P=new Uint8Array(t.buffer,t.byteOffset+F,v),z=new Uint8Array(t.buffer,t.byteOffset+C,A);return n.globalData={endpointCount:V,selectorCount:D,imageDescs:S,endpointsData:T,selectorsData:I,tablesData:P,extendedData:z},n}}}]);