"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1030],{78026:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>o});var s=n(62540),i=n(43023);const t={},d="ImageWriter",a={id:"modules/images/api-reference/image-writer",title:"ImageWriter",description:"The ImageWriter class can encode an image into ArrayBuffer both under browser and Node.js",source:"@site/../docs/modules/images/api-reference/image-writer.md",sourceDirName:"modules/images/api-reference",slug:"/modules/images/api-reference/image-writer",permalink:"/docs/modules/images/api-reference/image-writer",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/images/api-reference/image-writer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GLBWriter",permalink:"/docs/modules/gltf/api-reference/glb-writer"},next:{title:"GeoJSONWriter",permalink:"/docs/modules/json/api-reference/geojson-writer"}},l={},o=[{value:"Usage",id:"usage",level:2},{value:"Data Format",id:"data-format",level:2},{value:"Options",id:"options",level:2},{value:"Remarks",id:"remarks",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"imagewriter",children:"ImageWriter"})}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"ImageWriter"})," class can encode an image into ",(0,s.jsx)(r.code,{children:"ArrayBuffer"})," both under browser and Node.js"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Loader"}),(0,s.jsx)(r.th,{children:"Characteristic"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"File Extension"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:".png"}),", ",(0,s.jsx)(r.code,{children:".jpg"}),", ",(0,s.jsx)(r.code,{children:".jpeg"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"File Type"}),(0,s.jsx)(r.td,{children:"Binary"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Data Format"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"ImageBitmap"}),", ",(0,s.jsx)(r.code,{children:"Image"}),' or "image data"']})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"File Format"}),(0,s.jsx)(r.td,{children:"JPEG, PNG, ..."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Encoder Type"}),(0,s.jsx)(r.td,{children:"Asynchronous"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Worker Thread"}),(0,s.jsx)(r.td,{children:"No (but may run on separate native thread in browsers)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Streaming"}),(0,s.jsx)(r.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"import '@loaders.gl/polyfill'; // only if using under Node\nimport {ImageWriter} from '@loaders.gl/images';\nimport {encode} from '@loaders.gl/core';\n\nconst image = new Image(...);\nconst arrayBuffer = await encode(image, ImageWriter, {image: {mimeType: 'image/jpeg'}});\nfs.writeFileSync('shiny-new-image.jpg', arrayBuffer);\n"})}),"\n",(0,s.jsx)(r.h2,{id:"data-format",children:"Data Format"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"ImageWriter"})," can encode three different in-memory Image representations into binary image representation (such as JPEG or PNG images) that can then be be saved or uploaded,"]}),"\n",(0,s.jsx)(r.p,{children:"The supported image types are:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"ImageBitmap"}),"- Optimized image class on modern browsers."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"Image"})," - Works on all browsers, less performant."]}),"\n",(0,s.jsxs)(r.li,{children:['"image data object" - an ',(0,s.jsx)(r.code,{children:"ImageData"})," like object that hold the raw decoded bytes of an image. Works in both browsers and Node.js."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Option"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Default"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"image.mimeType"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"string"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"'image/png'"})}),(0,s.jsx)(r.td,{children:"image output format"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"image.jpegQuality"})}),(0,s.jsx)(r.td,{children:"`number"}),(0,s.jsx)(r.td,{children:"null`"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"image/jpeg: 0.92"}),", ",(0,s.jsx)(r.code,{children:"image/webp: 0.80"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{children:["Image quality, between ",(0,s.jsx)(r.code,{children:"0-1"}),". Only applies to ",(0,s.jsx)(r.code,{children:"image/jpeg"})," and ",(0,s.jsx)(r.code,{children:"image/webp"}),"."]}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Supported image types (MIME types) depend on the browser / environment. As a rule, ",(0,s.jsx)(r.code,{children:"image/png"})," and ",(0,s.jsx)(r.code,{children:"image/jpeg"}),' are always supported. (Unfortunately it is not currently clear how to determine what formats are available on any given browser, other than "trial and error").']}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"jpegQuality"})," argument is not supported on all platforms (in which case it is assumed to have reasonable but platform-dependent defaults)."]}),"\n",(0,s.jsxs)(r.li,{children:["The ",(0,s.jsx)(r.code,{children:"ImageWriter"})," currently uses ",(0,s.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob",children:"canvas.toBlob()"})," on browsers, so referring to related documentation might be helpful."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},43023:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>a});var s=n(63696);const i={},t=s.createContext(i);function d(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);