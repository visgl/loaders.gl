"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1073],{91106:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});var n=t(74848),o=t(28453);const d={},i="MVTLoader",s={id:"modules/mvt/api-reference/mvt-loader",title:"MVTLoader",description:"Loader for the Mapbox Vector Tile format for representation of geometry.",source:"@site/../docs/modules/mvt/api-reference/mvt-loader.md",sourceDirName:"modules/mvt/api-reference",slug:"/modules/mvt/api-reference/mvt-loader",permalink:"/docs/modules/mvt/api-reference/mvt-loader",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/mvt/api-reference/mvt-loader.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LASLoader",permalink:"/docs/modules/las/api-reference/las-loader"},next:{title:"TileJSONLoader",permalink:"/docs/modules/mvt/api-reference/tilejson-loader"}},l={},c=[{value:"Usage",id:"usage",level:2},{value:"Outputs",id:"outputs",level:2},{value:"GeoJSON",id:"geojson",level:3},{value:"GeoJSON with local coordinates",id:"geojson-with-local-coordinates",level:3},{value:"Options",id:"options",level:2},{value:"Attribution",id:"attribution",level:2}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"mvtloader",children:"MVTLoader"}),"\n",(0,n.jsxs)(r.p,{children:["Loader for the ",(0,n.jsx)(r.a,{href:"https://docs.mapbox.com/vector-tiles/specification/",children:"Mapbox Vector Tile"})," format for representation of geometry."]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Loader"}),(0,n.jsx)(r.th,{children:"Characteristic"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"File Extension"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:".mvt"}),","]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"File Type"}),(0,n.jsx)(r.td,{children:"Binary"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"File Format"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://docs.mapbox.com/vector-tiles/specification/",children:"Mapbox Vector Tile"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Data Format"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"/docs/specifications/category-gis",children:"Geometry"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Supported APIs"}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"load"}),", ",(0,n.jsx)(r.code,{children:"parse"}),", ",(0,n.jsx)(r.code,{children:"parseSync"})]})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"import {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\n\n// GeoJSON objects containing local coordinates decoded from tile origin to a range of [0 - (bufferSize / tileExtent), 1 + (bufferSize / tileExtent)]\nconst geometryData = await load(url, MVTLoader);\n\n// Array containing GeoJSON Features\nconst loaderOptions = {\n  mvt: {\n    coordinates: 'wgs84',\n    tileIndex: {\n      x: 0,\n      y: 0,\n      z: 0\n    }\n  }\n};\n\nconst geoJSONfeatures = await load(url, MVTLoader, loaderOptions);\n"})}),"\n",(0,n.jsx)(r.h2,{id:"outputs",children:"Outputs"}),"\n",(0,n.jsx)(r.h3,{id:"geojson",children:"GeoJSON"}),"\n",(0,n.jsxs)(r.p,{children:["The parser will return an array of ",(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946",children:"GeoJSON objects"})," with WGS84 coordinates and feature properties from MVT if ",(0,n.jsx)(r.code,{children:"coordinates"})," property is set to ",(0,n.jsx)(r.code,{children:"wgs84"})," and ",(0,n.jsx)(r.code,{children:"tileIndex"})," properties are present."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"import {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\n\nconst geoJSONfeatures = await load(url, MVTLoader, {\n  mvt: {\n    coordinates: 'wgs84',\n    tileIndex: {\n      x: xTileIndex,\n      y: yTileIndex,\n      z: zTileIndex\n    }\n  }\n});\n"})}),"\n",(0,n.jsx)(r.h3,{id:"geojson-with-local-coordinates",children:"GeoJSON with local coordinates"}),"\n",(0,n.jsx)(r.p,{children:"The parser will return an array of GeoJSON objects with local coordinates in a range from 0 to 1 and feature properties from MVT by default."}),"\n",(0,n.jsxs)(r.p,{children:["Even though tile coordinates go from 0 to 1, there can be some negative (or greater than one) coordinates because of buffer cells within MVT to handle geometry clipping. That difference can be as much as ",(0,n.jsx)(r.code,{children:"bufferSize / tileExtent"})," depending on MVT creation parameters."]}),"\n",(0,n.jsx)(r.p,{children:"Note that local coordinates are relative to tile origin, which is in the top left."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"import {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\n\nconst geoJSONfeatures = await load(url, MVTLoader);\n\n/*\n * Default loader options are:\n *\n * {\n *   mvt: {\n *     coordinates: 'local'\n *   }\n * }\n */\n"})}),"\n",(0,n.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Option"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Default"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"mvt.shape"}),(0,n.jsx)(r.td,{children:"`'geojson'"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"binary"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"geojson"}),": returns GeoJSON objects. ",(0,n.jsx)(r.code,{children:"binary"}),": returns binary data."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"mvt.coordinates"}),(0,n.jsx)(r.td,{children:"`'local'"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"local"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"wgs84"}),": returns coordinates in longitude, latitude using the provided tile index. ",(0,n.jsx)(r.code,{children:"local"})," returns local ",(0,n.jsx)(r.code,{children:"0-1"})," coordinates relative to the tile origin."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"mvt.tileIndex"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"{x: number, y: number, z: number}"})}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsxs)(r.td,{children:["When the ",(0,n.jsx)(r.code,{children:"wgs84"})," coordinates option, the index of the tile being loaded (",(0,n.jsx)(r.code,{children:"x"}),", ",(0,n.jsx)(r.code,{children:"y"}),", ",(0,n.jsx)(r.code,{children:"z"}),") must be supplied."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"mvt.layerProperty"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string | null"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"'layerName'"})}),(0,n.jsxs)(r.td,{children:["When non-",(0,n.jsx)(r.code,{children:"null"}),", the layer name of each feature is added to ",(0,n.jsx)(r.code,{children:"feature.properties[layerProperty]"}),". If ",(0,n.jsx)(r.code,{children:"null"}),", a layer name property will not be added."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"mvt.layers"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string[]"})}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsx)(r.td,{children:"If provided, only features belonging to the named layers will be included, otherwise features from all layers are returned."})]})]})]}),"\n",(0,n.jsxs)(r.p,{children:["If you want to know more about how geometries are encoded into MVT tiles, please read ",(0,n.jsx)(r.a,{href:"https://docs.mapbox.com/vector-tiles/specification/#encoding-geometry",children:"this documentation section"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"attribution",children:"Attribution"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"MVTLoader"})," is a fork of ",(0,n.jsx)(r.a,{href:"https://github.com/mapbox/vector-tile-js",children:(0,n.jsx)(r.code,{children:"@mapbox/vector-tile"})})," module under the BSD-3-Clause."]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>s});var n=t(96540);const o={},d=n.createContext(o);function i(e){const r=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(d.Provider,{value:r},e.children)}}}]);