"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2374],{19089:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var n=i(74848),r=i(28453);const a={},s="Schema",c={id:"arrowjs/api-reference/schema",title:"Schema",description:"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +.",source:"@site/../docs/arrowjs/api-reference/schema.md",sourceDirName:"arrowjs/api-reference",slug:"/arrowjs/api-reference/schema",permalink:"/docs/arrowjs/api-reference/schema",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/arrowjs/api-reference/schema.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Row",permalink:"/docs/arrowjs/api-reference/row"},next:{title:"Table",permalink:"/docs/arrowjs/api-reference/table"}},o={},d=[{value:"Accessors",id:"accessors",level:2},{value:"fields : Field[] (readonly)",id:"fields--field-readonly",level:3},{value:"metadata (readonly)",id:"metadata-readonly",level:3},{value:"dictionaries (readonly)",id:"dictionaries-readonly",level:3},{value:"dictionaryFields (readonly)",id:"dictionaryfields-readonly",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor(fields: Field[], metadata?: Object, dictionaries?: Object, dictionaryFields?: Object)",id:"constructorfields-field-metadata-object-dictionaries-object-dictionaryfields-object",level:3},{value:"select(columnNames) : Schema",id:"selectcolumnnames--schema",level:3}];function l(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"schema",children:"Schema"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"This documentation reflects Arrow JS v4.0. Needs to be updated for the new Arrow API in v9.0 +."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Sequence of arrow::Field objects describing the columns of a record batch or table data structure"}),"\n",(0,n.jsx)(t.h2,{id:"accessors",children:"Accessors"}),"\n",(0,n.jsx)(t.h3,{id:"fields--field-readonly",children:"fields : Field[] (readonly)"}),"\n",(0,n.jsx)(t.p,{children:"Return the list of fields (columns) in the schema."}),"\n",(0,n.jsx)(t.h3,{id:"metadata-readonly",children:"metadata (readonly)"}),"\n",(0,n.jsx)(t.p,{children:"The custom key-value metadata, if any. metadata may be null."}),"\n",(0,n.jsx)(t.h3,{id:"dictionaries-readonly",children:"dictionaries (readonly)"}),"\n",(0,n.jsx)(t.p,{children:"TBD - List of dictionaries (each dictionary is associated with a column that is dictionary encoded)."}),"\n",(0,n.jsx)(t.h3,{id:"dictionaryfields-readonly",children:"dictionaryFields (readonly)"}),"\n",(0,n.jsx)(t.p,{children:"TBD - List of fields"}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"constructorfields-field-metadata-object-dictionaries-object-dictionaryfields-object",children:"constructor(fields: Field[], metadata?: Object, dictionaries?: Object, dictionaryFields?: Object)"}),"\n",(0,n.jsx)(t.p,{children:"Creates a new schema instance."}),"\n",(0,n.jsx)(t.h3,{id:"selectcolumnnames--schema",children:"select(columnNames) : Schema"}),"\n",(0,n.jsxs)(t.p,{children:["Returns a new ",(0,n.jsx)(t.code,{children:"Schema"})," with the Fields indicated by the column names."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>c});var n=i(96540);const r={},a=n.createContext(r);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);