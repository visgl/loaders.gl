"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9980],{8409:(e,s,d)=>{d.r(s),d.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>n,metadata:()=>a,toc:()=>h});var r=d(62540),t=d(43023);const n={},l="@loaders.gl/schema",a={id:"modules/schema/README",title:"@loaders.gl/schema",description:"Table",source:"@site/../docs/modules/schema/README.md",sourceDirName:"modules/schema",slug:"/modules/schema/",permalink:"/docs/modules/schema/",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/schema/README.md",tags:[],version:"current",frontMatter:{}},c={},h=[{value:"Schemas",id:"schemas",level:2},{value:"Batches",id:"batches",level:2},{value:"Table APIs",id:"table-apis",level:2},{value:"Determining shape of loaded data",id:"determining-shape-of-loaded-data",level:2},{value:"Controlling the shape of loaded data",id:"controlling-the-shape-of-loaded-data",level:2},{value:"Table Category",id:"table-category",level:3},{value:"GIS Category",id:"gis-category",level:2}];function i(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"loadersglschema",children:"@loaders.gl/schema"})}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:"Table"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"schemas",children:"Schemas"}),"\n",(0,r.jsx)(s.h2,{id:"batches",children:"Batches"}),"\n",(0,r.jsx)(s.h2,{id:"table-apis",children:"Table APIs"}),"\n",(0,r.jsx)(s.p,{children:"The table API is modelled after a subset of the Apache Arrow API:"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Class"}),(0,r.jsx)(s.th,{children:"Arrow Counterpart"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/docs/modules/schema/api-reference/table",children:(0,r.jsx)(s.code,{children:"Table"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Table"})}),(0,r.jsx)(s.td,{children:"Table"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/docs/modules/schema/api-reference/schema",children:(0,r.jsx)(s.code,{children:"Schema"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Schema"})}),(0,r.jsx)(s.td,{children:"Schema"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/docs/modules/schema/api-reference/table-batch",children:(0,r.jsx)(s.code,{children:"Batch"})})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"RecordBatch"})}),(0,r.jsx)(s.td,{children:"Batch"})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"determining-shape-of-loaded-data",children:"Determining shape of loaded data"}),"\n",(0,r.jsxs)(s.p,{children:["loaders.gl favors formats that wrap the data with a ",(0,r.jsx)(s.code,{children:"shape"})," field so that the type of the returned data can be determined at run-time:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"export type NewDataType = {\n  shape: 'new-data-type';\n  data: TypeOfData;\n  schema?: Schema;\n};\n"})}),"\n",(0,r.jsx)(s.p,{children:"However a number of traditional return formats do not include such a wrapper."}),"\n",(0,r.jsx)(s.h2,{id:"controlling-the-shape-of-loaded-data",children:"Controlling the shape of loaded data"}),"\n",(0,r.jsxs)(s.p,{children:["Loaders are encouraged to provide a ",(0,r.jsx)(s.code,{children:"shape"})," option to allow applications to control the return format. Since different loaders offer different selection of shapes, the option is set per loader."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"const tile = await load(url, MVTLoader, {mvt: {shape: 'geojson-table', ...}});\nassert(tile.shape === 'geojson-table');\nprocessTile(tile.data);\n"})}),"\n",(0,r.jsx)(s.h3,{id:"table-category",children:"Table Category"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Shape"}),(0,r.jsx)(s.th,{children:"Category"}),(0,r.jsx)(s.th,{children:"Types / Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"table"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Table"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"array-row-table"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ArrayRowTable"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"object-row-table"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ObjectRowTable"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"columnar-table"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ColumnarTable"})}),(0,r.jsx)(s.td,{})]})]})]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Tables can be"}),"\n",(0,r.jsx)(s.li,{children:"row-oriented, i.e. organized as an array of rows"}),"\n",(0,r.jsx)(s.li,{children:"columnar, containing one array per column"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Rows can contain either"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"an array of values, where the column name is found in the schema."}),"\n",(0,r.jsx)(s.li,{children:"object with key-value pairs, where the key is the column name"}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescripton",children:'{\n  "shape": ,\n  "data":\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"gis-category",children:"GIS Category"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Shape"}),(0,r.jsx)(s.th,{children:"Category"}),(0,r.jsx)(s.th,{children:"Types / Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"geojson"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"GeoJSON"})}),(0,r.jsxs)(s.td,{children:["GeoJSON is a ",(0,r.jsx)(s.code,{children:"features"})," array wrapped at the top level"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"array-row-table"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ArrayRowTable"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"object-row-table"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"ObjectRowTable"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"geojson-table"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"GeojsonTable"})}),(0,r.jsxs)(s.td,{children:["GeoJSON table essentially contains the ",(0,r.jsx)(s.code,{children:"features"})," array from the"]})]})]})]})]})}function o(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}},43023:(e,s,d)=>{d.d(s,{R:()=>l,x:()=>a});var r=d(63696);const t={},n=r.createContext(t);function l(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);