"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[3713],{99118:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});var s=t(74848),n=t(28453);const a={},d="XMLLoader",i={id:"modules/xml/api-reference/xml-loader",title:"XMLLoader",description:"&nbsp;",source:"@site/../docs/modules/xml/api-reference/xml-loader.md",sourceDirName:"modules/xml/api-reference",slug:"/modules/xml/api-reference/xml-loader",permalink:"/docs/modules/xml/api-reference/xml-loader",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/xml/api-reference/xml-loader.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WMSCapabilitiesLoader",permalink:"/docs/modules/wms/api-reference/wms-capabilities-loader"},next:{title:"ZipLoader",permalink:"/docs/modules/zip/api-reference/zip-loader"}},l={},o=[{value:"Usage",id:"usage",level:2},{value:"Data Format",id:"data-format",level:2},{value:"Options",id:"options",level:2},{value:"Attributions",id:"attributions",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"xmlloader",children:"XMLLoader"}),"\n",(0,s.jsxs)("p",{class:"badges",children:[(0,s.jsx)("img",{src:"https://img.shields.io/badge/From-v3.3-blue.svg?style=flat-square",alt:"From-v3.3"}),(0,s.jsx)(r.p,{children:"\xa0"}),(0,s.jsx)("img",{src:"https://img.shields.io/badge/-BETA-teal.svg",alt:"BETA"})]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"XMLLoader"})," parses XML-encoded data."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Loader"}),(0,s.jsx)(r.th,{children:"Characteristic"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"File Extension"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:".xml"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"MIME Type"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"application/xml"}),", ",(0,s.jsx)(r.code,{children:"text/xml"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"File Type"}),(0,s.jsx)(r.td,{children:"Text"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"File Format"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://www.w3.org/TR/xml/",children:"eXtensible Markup Language"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Data Format"}),(0,s.jsx)(r.td,{children:"Free format data structure"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Decoder Type"}),(0,s.jsx)(r.td,{children:"Synchronous"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Worker Thread Support"}),(0,s.jsx)(r.td,{children:"No"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Streaming Support"}),(0,s.jsx)(r.td,{children:"No"})]})]})]}),"\n",(0,s.jsxs)(r.p,{children:["The goal of the ",(0,s.jsx)(r.code,{children:"XMLLoader"})," is to make it easy for JavaScript applications to access XML formatted data.\nIt is not intended to be a tool for advanced manipulation of XML data, and options provided are focused\non making the returned data easier to use in JavaScript applications."]}),"\n",(0,s.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(r.p,{children:"Load XML data into a javascript data structure and preserve the original structure"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"import {XMLLoader} from '@loaders.gl/xml';\nimport {load} from '@loaders.gl/core';\n\nconst data = await load(url, XMLLoader);\n"})}),"\n",(0,s.jsx)(r.p,{children:'Load XML data into a javascript data structure and set options that make the returned data more "JavaScript friendly":'}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-typescript",children:"import {XMLLoader} from '@loaders.gl/xml';\nimport {load} from '@loaders.gl/core';\n\nconst data = await load(url, XMLLoader, {xml: {uncapitalizeKeys: true, removeNSPrefix: true}});\n"})}),"\n",(0,s.jsx)(r.h2,{id:"data-format",children:"Data Format"}),"\n",(0,s.jsx)(r.p,{children:"Unstructured, untyped data in the form a tree of JavaScrip objects representing the hierarchy of tags in the XML file."}),"\n",(0,s.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Option"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Default"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"uncapitalizeKeys"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"boolean"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"false"})}),(0,s.jsxs)(r.td,{children:['XML tags are typically "PascalCase", JavaScript and JSON prefers "camelCase" fields. This setting uncapitalizes all keys in the parsed data (e.g. ',(0,s.jsx)(r.code,{children:"ValueList"})," => ",(0,s.jsx)(r.code,{children:"valueList"}),")."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"removeNSPrefix"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"boolean"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"false"})}),(0,s.jsxs)(r.td,{children:["XML tags sometimes have namespace prefixes. These namespaces are inconvenient in JavaScript field names and can be stripped by setting this option (e.g. ",(0,s.jsx)(r.code,{children:"ogc:Feature"})," -> ",(0,s.jsx)(r.code,{children:"Feature"}),")."]})]})]})]}),"\n",(0,s.jsx)(r.p,{children:"Remarks:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["It is possible to pass options to the underlying parser, currently ",(0,s.jsx)(r.code,{children:"fast-xml-parser"}),", however there are no guarantees that loaders.gl will continue to use this underlying parser or continue to support those options."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"attributions",children:"Attributions"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"XMLLoader"})," is a wrapper around ",(0,s.jsx)(r.a,{href:"https://github.com/NaturalIntelligence/fast-xml-parser",children:(0,s.jsx)(r.code,{children:"fast-xml-parser"})}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>d,x:()=>i});var s=t(96540);const n={},a=s.createContext(n);function d(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);