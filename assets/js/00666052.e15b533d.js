"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9048],{10546:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=t(62540),a=t(43023);const o={},i="Building columns and tables",l={id:"arrowjs/developer-guide/builders",title:"Building columns and tables",description:"Many JavaScript application may only need to be able to load and iterate of the data in existing Apache Arrow files creating outside of JavaScript.",source:"@site/../docs/arrowjs/developer-guide/builders.md",sourceDirName:"arrowjs/developer-guide",slug:"/arrowjs/developer-guide/builders",permalink:"/docs/arrowjs/developer-guide/builders",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/arrowjs/developer-guide/builders.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Working with Tables",permalink:"/docs/arrowjs/developer-guide/tables"},next:{title:"Extracting Data",permalink:"/docs/arrowjs/developer-guide/converting-data"}},s={},d=[];function c(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"building-columns-and-tables",children:"Building columns and tables"})}),"\n",(0,n.jsx)(r.p,{children:"Many JavaScript application may only need to be able to load and iterate of the data in existing Apache Arrow files creating outside of JavaScript."}),"\n",(0,n.jsx)(r.p,{children:"However a JS application may also want to create its own Arrow tables from scratch."}),"\n",(0,n.jsxs)(r.p,{children:["For this situation, Apache Arrow JS provides the ",(0,n.jsx)(r.code,{children:"makeBuilder()"})," function that returns ",(0,n.jsx)(r.code,{children:"Builder"})," instances that can be used to build columns of specific data types."]}),"\n",(0,n.jsx)(r.p,{children:"However, creating arrow-compatible binary data columns for complex, potentially nullable data types can be quite tricky."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"import {Builder, Utf8} from 'apache-arrow';\n\nconst utf8Builder = makeBuilder({\n  type: new Utf8(),\n  nullValues: [null, 'n/a']\n});\n\nutf8Builder.append('hello').append('n/a').append('world').append(null);\n\nconst utf8Vector = utf8Builder.finish().toVector();\n\nconsole.log(utf8Vector.toJSON());\n// > [\"hello\", null, \"world\", null]\n"})}),"\n",(0,n.jsxs)(r.p,{children:["One way to build a table with multiple columns is to create an arrow ",(0,n.jsx)(r.code,{children:"Struct"})," field type using the fields in the table's schema,\nand then create a ",(0,n.jsx)(r.code,{children:"Data"})," object using that ",(0,n.jsx)(r.code,{children:"Field"})," object and the data"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"function buildTable(arrowSchema: arrow.Schema, const data: any[][]) {\n  const arrowBuilders = this.arrowSchema.fields.map((field) => arrow.makeBuilder({type: field.type, [null]));\n\n  // Application data\n  const row = [column0value, column1Value, ...];\n\n  for (let i = 0; i < this.arrowBuilders.length; i++) {\n    arrowBuilders[i].append(row[i]);\n  }\n\n  const arrowDatas = arrowBuilders.map((builder) => builder.flush());\n  const structField = new arrow.Struct(arrowSchema.fields);\n  const arrowStructData = new arrow.Data(structField, 0, length, 0, undefined, arrowDatas);\n  const arrowRecordBatch = new arrow.RecordBatch(arrowSchema, arrowStructData);\n  const arrowTable = new arrow.Table([arrowRecordBatch])\n\n  arrowBuilders.forEach((builder) => builder.finish());\n\n  return arrowTable;\n}\n"})})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},43023:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>l});var n=t(63696);const a={},o=n.createContext(a);function i(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);