"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[7506],{26947:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>a,toc:()=>l});var c=r(62540),t=r(43023);const n={},i="CSWService \ud83d\udea7",a={id:"modules/wms/api-reference/csw-source",title:"CSWService \ud83d\udea7",description:"ogc-logo",source:"@site/../docs/modules/wms/api-reference/csw-source.md",sourceDirName:"modules/wms/api-reference",slug:"/modules/wms/api-reference/csw-source",permalink:"/docs/modules/wms/api-reference/csw-source",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/wms/api-reference/csw-source.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TableTileSource",permalink:"/docs/modules/mvt/api-reference/table-tile-source"},next:{title:"WMSSource",permalink:"/docs/modules/wms/api-reference/wms-source"}},o={},l=[{value:"Usage",id:"usage",level:2},{value:"Methods",id:"methods",level:2},{value:"constructor()",id:"constructor",level:3},{value:"getCapabilities()",id:"getcapabilities",level:3},{value:"getServiceDirectory()",id:"getservicedirectory",level:3}];function d(e){const s={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.header,{children:(0,c.jsx)(s.h1,{id:"cswservice-",children:"CSWService \ud83d\udea7"})}),"\n",(0,c.jsxs)("p",{class:"badges",children:[(0,c.jsx)("img",{src:"https://img.shields.io/badge/From-v3.4-blue.svg?style=flat-square",alt:"From-3.4"}),(0,c.jsx)("img",{src:"https://img.shields.io/badge/-BETA-teal.svg",alt:"BETA"})]}),"\n",(0,c.jsx)(s.p,{children:(0,c.jsx)(s.img,{alt:"ogc-logo",src:r(9215).A+"",width:"119",height:"60"})}),"\n",(0,c.jsxs)(s.p,{children:["The ",(0,c.jsx)(s.code,{children:"CSWService"})," class provides OGC CSW (catalog service for the web) access"]}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsx)(s.li,{children:"Type safe methods to call and parse results (and errors) from a CSW service's endpoints"}),"\n",(0,c.jsxs)(s.li,{children:["In particular, the big ",(0,c.jsx)(s.code,{children:"GetCapabilities"})," metadata is normalized into a fully typed data structure."]}),"\n"]}),"\n",(0,c.jsxs)(s.blockquote,{children:["\n",(0,c.jsxs)(s.p,{children:["The ",(0,c.jsx)(s.code,{children:"CSWService"})," generates URLs with URL parameters intended to be used with HTTP GET requests against a CSW server. The OGC CSW standard also allows CSW services to accept XML payloads with HTTP POST messages, however generation of such XML payloads is not supported by this class."]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,c.jsxs)(s.p,{children:["A ",(0,c.jsx)(s.code,{children:"CSWService"})," instance provides type safe methods that make calls to the service and parse the responses."]}),"\n",(0,c.jsx)(s.p,{children:"Get a normalized array of all the services and resources referenced by this catalog server:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-typescript",children:"const cswService = new CSWService({url: CSW_SERVICE_URL});\nconst serviceDirectory = await cswService.getServiceDirectory({includeUnknown: true});\nconsole.log(serviceDirectory);\n"})}),"\n",(0,c.jsx)(s.p,{children:"Capabilities metadata can be queried:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-typescript",children:"const cswService = new CSWService({url: CSW_SERVICE_URL});\nconst capabilities = await cswService.getCapabilities({});\n// Check capabilities\n"})}),"\n",(0,c.jsxs)(s.p,{children:["Custom fetch options, such as HTTP headers, and loader-specific options can be specified via the\nstandard loaders.gl ",(0,c.jsx)(s.code,{children:"loadOptions"})," argument, which is forwarded to all load and parse operations:"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-typescript",children:"const cswService = new CSWService({\n  url: CSW_SERVICE_URL,\n  loadOptions: {\n    fetch: {\n      headers: {\n        Authentication: 'Bearer abc...'\n      }\n    }\n  }\n});\n\nconst serviceDirectory = await cswService.getServiceDirectory();\n"})}),"\n",(0,c.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,c.jsx)(s.h3,{id:"constructor",children:"constructor()"}),"\n",(0,c.jsxs)(s.p,{children:["Creates a ",(0,c.jsx)(s.code,{children:"CSWService"})," instance"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-typescript",children:"export type CSWServiceProps = {\n  url: string; // Base URL to the service\n  loadOptions?: LoaderOptions; // Passed to loaders used by CSWService methods\n};\n\nconstructor(props: CSWServiceProps)\n"})}),"\n",(0,c.jsx)(s.h3,{id:"getcapabilities",children:"getCapabilities()"}),"\n",(0,c.jsx)(s.p,{children:"Get Capabilities"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-typescript",children:"async getCapabilities(\n  cswParameters?: CSWGetCapabilitiesParameters,\n  vendorParameters?: Record<string, unknown>\n): Promise<CSWCapabilities>\n"})}),"\n",(0,c.jsx)(s.h3,{id:"getservicedirectory",children:"getServiceDirectory()"}),"\n",(0,c.jsx)(s.p,{children:"Get a list of all service exposed by this catalog server."}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-typescript",children:"async getServiceDirectory(\n  options: CSWGetMapParameters,\n  vendorParameters?: Record<string, unknown>\n): Promise<Service[]>\n"})}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-typescript",children:"export type CSWGetMapParameters = {\n  includeUnknown: boolean; // Include services and resources that loaders.gl cannot handle\n};\n"})})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,c.jsx)(s,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},9215:(e,s,r)=>{r.d(s,{A:()=>c});const c=r.p+"assets/images/ogc-logo-60-8ee2c25a50ccc14293453512c707a0c4.png"},43023:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>a});var c=r(63696);const t={},n=c.createContext(t);function i(e){const s=c.useContext(n);return c.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),c.createElement(n.Provider,{value:s},e.children)}}}]);