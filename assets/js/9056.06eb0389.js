"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9056],{25337:(t,i,n)=>{n.d(i,{V:()=>r});var e=n(48264),s=n(80979);class r{id;topology;vertexCount;indices;attributes;userData={};constructor(t){const{attributes:i={},indices:n=null,vertexCount:r=null}=t;this.id=t.id||(0,e.L)("geometry"),this.topology=t.topology,n&&(this.indices=ArrayBuffer.isView(n)?{value:n,size:1}:n),this.attributes={};for(const[e,o]of Object.entries(i)){const t=ArrayBuffer.isView(o)?{value:o}:o;(0,s.v)(ArrayBuffer.isView(t.value),`${this._print(e)}: must be typed array or object with value as typed array`),"POSITION"!==e&&"positions"!==e||t.size||(t.size=3),"indices"===e?((0,s.v)(!this.indices),this.indices=t):this.attributes[e]=t}this.indices&&void 0!==this.indices.isIndexed&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=r||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(t){return`Geometry ${this.id} attribute ${t}`}_setAttributes(t,i){return this}_calculateVertexCount(t,i){if(i)return i.value.length;let n=1/0;for(const e of Object.values(t)){const{value:t,size:i,constant:s}=e;!s&&t&&i>=1&&(n=Math.min(n,t.length/i))}return(0,s.v)(Number.isFinite(n)),n}}},17542:(t,i,n)=>{n.d(i,{_:()=>o});const e="#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\nstruct AmbientLight {\nvec3 color;\n};\nstruct PointLight {\nvec3 color;\nvec3 position;\nvec3 attenuation;\n};\nstruct DirectionalLight {\nvec3 color;\nvec3 direction;\n};\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\nuniform bool lighting_uEnabled;\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\nreturn pointLight.attenuation.x\n+ pointLight.attenuation.y * distance\n+ pointLight.attenuation.z * distance * distance;\n}\n#endif\n",s={lightSources:{}};function r(t={}){const{color:i=[0,0,0],intensity:n=1}=t;return i.map((t=>t*n/255))}const o={name:"lights",vs:e,fs:e,getUniforms:function t(i=s){if("lightSources"in i){const{ambientLight:t,pointLights:n,directionalLights:e}=i.lightSources||{};return t||n&&n.length>0||e&&e.length>0?Object.assign({},function({ambientLight:t,pointLights:i=[],directionalLights:n=[]}){const e={};return e["lighting_uAmbientLight.color"]=t?r(t):[0,0,0],i.forEach(((t,i)=>{e[`lighting_uPointLight[${i}].color`]=r(t),e[`lighting_uPointLight[${i}].position`]=t.position,e[`lighting_uPointLight[${i}].attenuation`]=t.attenuation||[1,0,0]})),e.lighting_uPointLightCount=i.length,n.forEach(((t,i)=>{e[`lighting_uDirectionalLight[${i}].color`]=r(t),e[`lighting_uDirectionalLight[${i}].direction`]=t.direction})),e.lighting_uDirectionalLightCount=n.length,e}({ambientLight:t,pointLights:n,directionalLights:e}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in i){const n={pointLights:[],directionalLights:[]};for(const t of i.lights||[])switch(t.type){case"ambient":n.ambientLight=t;break;case"directional":n.directionalLights?.push(t);break;case"point":n.pointLights?.push(t)}return t({lightSources:n})}return{}},defines:{MAX_LIGHTS:3}}},27586:(t,i,n)=>{n.d(i,{K:()=>h,p:()=>a});var e=n(17542);const s="uniform float lighting_uAmbient;\nuniform float lighting_uDiffuse;\nuniform float lighting_uShininess;\nuniform vec3  lighting_uSpecularColor;\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\nvec3 halfway_direction = normalize(light_direction + view_direction);\nfloat lambertian = dot(light_direction, normal_worldspace);\nfloat specular = 0.0;\nif (lambertian > 0.0) {\nfloat specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\nspecular = pow(specular_angle, lighting_uShininess);\n}\nlambertian = max(lambertian, 0.0);\nreturn (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;\n}\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\nvec3 lightColor = surfaceColor;\nif (lighting_uEnabled) {\nvec3 view_direction = normalize(cameraPosition - position_worldspace);\nlightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;\nfor (int i = 0; i < MAX_LIGHTS; i++) {\nif (i >= lighting_uPointLightCount) {\nbreak;\n}\nPointLight pointLight = lighting_uPointLight[i];\nvec3 light_position_worldspace = pointLight.position;\nvec3 light_direction = normalize(light_position_worldspace - position_worldspace);\nlightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n}\nfor (int i = 0; i < MAX_LIGHTS; i++) {\nif (i >= lighting_uDirectionalLightCount) {\nbreak;\n}\nDirectionalLight directionalLight = lighting_uDirectionalLight[i];\nlightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n}\n}\nreturn lightColor;\n}\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\nvec3 lightColor = vec3(0, 0, 0);\nvec3 surfaceColor = vec3(0, 0, 0);\nif (lighting_uEnabled) {\nvec3 view_direction = normalize(cameraPosition - position_worldspace);\nfor (int i = 0; i < MAX_LIGHTS; i++) {\nif (i >= lighting_uPointLightCount) {\nbreak;\n}\nPointLight pointLight = lighting_uPointLight[i];\nvec3 light_position_worldspace = pointLight.position;\nvec3 light_direction = normalize(light_position_worldspace - position_worldspace);\nlightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n}\nfor (int i = 0; i < MAX_LIGHTS; i++) {\nif (i >= lighting_uDirectionalLightCount) {\nbreak;\n}\nDirectionalLight directionalLight = lighting_uDirectionalLight[i];\nlightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n}\n}\nreturn lightColor;\n}\n",r={};function o(t=r){if(!("material"in t))return{};const{material:i}=t;return i?function(t){const{ambient:i=.35,diffuse:n=.6,shininess:e=32,specularColor:s=[30,30,30]}=t;return{lighting_uAmbient:i,lighting_uDiffuse:n,lighting_uShininess:e,lighting_uSpecularColor:s.map((t=>t/255))}}(i):{lighting_uEnabled:!1}}const h={name:"gouraud-lighting",dependencies:[e._],vs:s,defines:{LIGHTING_VERTEX:1},getUniforms:o},a={name:"phong-lighting",dependencies:[e._],fs:s,defines:{LIGHTING_FRAGMENT:1},getUniforms:o}},35567:(t,i,n)=>{n.d(i,{d:()=>u});var e,s=n(46022),r=n(73731),o=n(68225),h=n(44435),a=n(83588),c=n(82859);!function(t){t[t.COL0ROW0=0]="COL0ROW0",t[t.COL0ROW1=1]="COL0ROW1",t[t.COL0ROW2=2]="COL0ROW2",t[t.COL1ROW0=3]="COL1ROW0",t[t.COL1ROW1=4]="COL1ROW1",t[t.COL1ROW2=5]="COL1ROW2",t[t.COL2ROW0=6]="COL2ROW0",t[t.COL2ROW1=7]="COL2ROW1",t[t.COL2ROW2=8]="COL2ROW2"}(e||(e={}));const l=Object.freeze([1,0,0,0,1,0,0,0,1]);class u extends s.u{static get IDENTITY(){return function(){m||(m=new u,Object.freeze(m));return m}()}static get ZERO(){return function(){g||(g=new u([0,0,0,0,0,0,0,0,0]),Object.freeze(g));return g}()}get ELEMENTS(){return 9}get RANK(){return 3}get INDICES(){return e}constructor(t,...i){super(-0,-0,-0,-0,-0,-0,-0,-0,-0),1===arguments.length&&Array.isArray(t)?this.copy(t):i.length>0?this.copy([t,...i]):this.identity()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this[4]=t[4],this[5]=t[5],this[6]=t[6],this[7]=t[7],this[8]=t[8],this.check()}identity(){return this.copy(l)}fromObject(t){return this.check()}fromQuaternion(t){return(0,h.I0)(this,t),this.check()}set(t,i,n,e,s,r,o,h,a){return this[0]=t,this[1]=i,this[2]=n,this[3]=e,this[4]=s,this[5]=r,this[6]=o,this[7]=h,this[8]=a,this.check()}setRowMajor(t,i,n,e,s,r,o,h,a){return this[0]=t,this[1]=e,this[2]=o,this[3]=i,this[4]=s,this[5]=h,this[6]=n,this[7]=r,this[8]=a,this.check()}determinant(){return(0,h.a4)(this)}transpose(){return(0,h.mg)(this,this),this.check()}invert(){return(0,h.B8)(this,this),this.check()}multiplyLeft(t){return(0,h.lw)(this,t,this),this.check()}multiplyRight(t){return(0,h.lw)(this,this,t),this.check()}rotate(t){return(0,h.e$)(this,this,t),this.check()}scale(t){return Array.isArray(t)?(0,h.hs)(this,this,t):(0,h.hs)(this,this,[t,t]),this.check()}translate(t){return(0,h.Tl)(this,this,t),this.check()}transform(t,i){let n;switch(t.length){case 2:n=(0,a.ei)(i||[-0,-0],t,this);break;case 3:n=(0,c.ei)(i||[-0,-0,-0],t,this);break;case 4:n=(0,o.vE)(i||[-0,-0,-0,-0],t,this);break;default:throw new Error("Illegal vector")}return(0,r.qk)(n,t.length),n}transformVector(t,i){return this.transform(t,i)}transformVector2(t,i){return this.transform(t,i)}transformVector3(t,i){return this.transform(t,i)}}let g,m=null},11633:(t,i,n)=>{n.d(i,{P:()=>I});var e=n(58073),s=n(73731),r=n(82859),o=n(68225),h=n(54272),a=n(54901);let c;class l extends h.M{static get ZERO(){return c||(c=new l(0,0,0,0),Object.freeze(c)),c}constructor(t=0,i=0,n=0,e=0){super(-0,-0,-0,-0),(0,a.cy)(t)&&1===arguments.length?this.copy(t):(a.$W.debug&&((0,s.ws)(t),(0,s.ws)(i),(0,s.ws)(n),(0,s.ws)(e)),this[0]=t,this[1]=i,this[2]=n,this[3]=e)}set(t,i,n,e){return this[0]=t,this[1]=i,this[2]=n,this[3]=e,this.check()}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}fromObject(t){return a.$W.debug&&((0,s.ws)(t.x),(0,s.ws)(t.y),(0,s.ws)(t.z),(0,s.ws)(t.w)),this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this}toObject(t){return t.x=this[0],t.y=this[1],t.z=this[2],t.w=this[3],t}get ELEMENTS(){return 4}get z(){return this[2]}set z(t){this[2]=(0,s.ws)(t)}get w(){return this[3]}set w(t){this[3]=(0,s.ws)(t)}transform(t){return(0,r.Z0)(this,this,t),this.check()}transformByMatrix3(t){return(0,o.vE)(this,this,t),this.check()}transformByMatrix2(t){return(0,o.Cg)(this,this,t),this.check()}transformByQuaternion(t){return(0,r.gL)(this,this,t),this.check()}applyMatrix4(t){return t.transform(this,this),this}}var u=n(50741),g=n(44435),m=n(39426);function d(){const t=new u.tb(4);return u.tb!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}function f(t,i,n){n*=.5;const e=Math.sin(n);return t[0]=e*i[0],t[1]=e*i[1],t[2]=e*i[2],t[3]=Math.cos(n),t}function p(t,i,n){const e=i[0],s=i[1],r=i[2],o=i[3],h=n[0],a=n[1],c=n[2],l=n[3];return t[0]=e*l+o*h+s*c-r*a,t[1]=s*l+o*a+r*h-e*c,t[2]=r*l+o*c+e*a-s*h,t[3]=o*l-e*h-s*a-r*c,t}function w(t,i,n,e){const s=i[0],r=i[1],o=i[2],h=i[3];let a,c,l,g,m,d=n[0],f=n[1],p=n[2],w=n[3];return a=s*d+r*f+o*p+h*w,a<0&&(a=-a,d=-d,f=-f,p=-p,w=-w),1-a>u.p8?(c=Math.acos(a),m=Math.sin(c),l=Math.sin((1-e)*c)/m,g=Math.sin(e*c)/m):(l=1-e,g=e),t[0]=l*s+g*d,t[1]=l*r+g*f,t[2]=l*o+g*p,t[3]=l*h+g*w,t}function _(t,i){const n=i[0]+i[4]+i[8];let e;if(n>0)e=Math.sqrt(n+1),t[3]=.5*e,e=.5/e,t[0]=(i[5]-i[7])*e,t[1]=(i[6]-i[2])*e,t[2]=(i[1]-i[3])*e;else{let n=0;i[4]>i[0]&&(n=1),i[8]>i[3*n+n]&&(n=2);const s=(n+1)%3,r=(n+2)%3;e=Math.sqrt(i[3*n+n]-i[3*s+s]-i[3*r+r]+1),t[n]=.5*e,e=.5/e,t[3]=(i[3*s+r]-i[3*r+s])*e,t[s]=(i[3*s+n]+i[3*n+s])*e,t[r]=(i[3*r+n]+i[3*n+r])*e}return t}m.o8,m.fA,m.C,m.hZ;const b=m.WQ,y=m.hs,L=m.Om,P=m.Cc,M=m.Bw,A=m.m3,C=m.S8;m.t2;const x=function(){const t=r.vt(),i=r.fA(1,0,0),n=r.fA(0,1,0);return function(e,s,o){const h=r.Om(s,o);return h<-.999999?(r.$A(t,i,s),r.Il(t)<1e-6&&r.$A(t,n,s),r.S8(t,t),f(e,t,Math.PI),e):h>.999999?(e[0]=0,e[1]=0,e[2]=0,e[3]=1,e):(r.$A(t,s,o),e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=1+h,C(e,e))}}(),v=(function(){const t=d(),i=d()}(),function(){const t=g.vt()}(),[0,0,0,1]);class I extends e.a{constructor(t=0,i=0,n=0,e=1){super(-0,-0,-0,-0),Array.isArray(t)&&1===arguments.length?this.copy(t):this.set(t,i,n,e)}copy(t){return this[0]=t[0],this[1]=t[1],this[2]=t[2],this[3]=t[3],this.check()}set(t,i,n,e){return this[0]=t,this[1]=i,this[2]=n,this[3]=e,this.check()}fromObject(t){return this[0]=t.x,this[1]=t.y,this[2]=t.z,this[3]=t.w,this.check()}fromMatrix3(t){return _(this,t),this.check()}fromAxisRotation(t,i){return f(this,t,i),this.check()}identity(){var t;return(t=this)[0]=0,t[1]=0,t[2]=0,t[3]=1,this.check()}setAxisAngle(t,i){return this.fromAxisRotation(t,i)}get ELEMENTS(){return 4}get x(){return this[0]}set x(t){this[0]=(0,s.ws)(t)}get y(){return this[1]}set y(t){this[1]=(0,s.ws)(t)}get z(){return this[2]}set z(t){this[2]=(0,s.ws)(t)}get w(){return this[3]}set w(t){this[3]=(0,s.ws)(t)}len(){return M(this)}lengthSquared(){return A(this)}dot(t){return L(this,t)}rotationTo(t,i){return x(this,t,i),this.check()}add(t){return b(this,this,t),this.check()}calculateW(){return function(t,i){const n=i[0],e=i[1],s=i[2];t[0]=n,t[1]=e,t[2]=s,t[3]=Math.sqrt(Math.abs(1-n*n-e*e-s*s))}(this,this),this.check()}conjugate(){var t,i;return i=this,(t=this)[0]=-i[0],t[1]=-i[1],t[2]=-i[2],t[3]=i[3],this.check()}invert(){return function(t,i){const n=i[0],e=i[1],s=i[2],r=i[3],o=n*n+e*e+s*s+r*r,h=o?1/o:0;t[0]=-n*h,t[1]=-e*h,t[2]=-s*h,t[3]=r*h}(this,this),this.check()}lerp(t,i,n){return void 0===n?this.lerp(this,t,i):(P(this,t,i,n),this.check())}multiplyRight(t){return p(this,this,t),this.check()}multiplyLeft(t){return p(this,t,this),this.check()}normalize(){const t=this.len(),i=t>0?1/t:0;return this[0]=this[0]*i,this[1]=this[1]*i,this[2]=this[2]*i,this[3]=this[3]*i,0===t&&(this[3]=1),this.check()}rotateX(t){return function(t,i,n){n*=.5;const e=i[0],s=i[1],r=i[2],o=i[3],h=Math.sin(n),a=Math.cos(n);t[0]=e*a+o*h,t[1]=s*a+r*h,t[2]=r*a-s*h,t[3]=o*a-e*h}(this,this,t),this.check()}rotateY(t){return function(t,i,n){n*=.5;const e=i[0],s=i[1],r=i[2],o=i[3],h=Math.sin(n),a=Math.cos(n);t[0]=e*a-r*h,t[1]=s*a+o*h,t[2]=r*a+e*h,t[3]=o*a-s*h}(this,this,t),this.check()}rotateZ(t){return function(t,i,n){n*=.5;const e=i[0],s=i[1],r=i[2],o=i[3],h=Math.sin(n),a=Math.cos(n);t[0]=e*a+s*h,t[1]=s*a-e*h,t[2]=r*a+o*h,t[3]=o*a-r*h}(this,this,t),this.check()}scale(t){return y(this,this,t),this.check()}slerp(t,i,n){let e,s,r;switch(arguments.length){case 1:({start:e=v,target:s,ratio:r}=t);break;case 2:e=this,s=t,r=i;break;default:e=t,s=i,r=n}return w(this,e,s,r),this.check()}transformVector4(t,i=new l){return(0,m.gL)(i,t,this),(0,s.qk)(i,4)}lengthSq(){return this.lengthSquared()}setFromAxisAngle(t,i){return this.setAxisAngle(t,i)}premultiply(t){return this.multiplyLeft(t)}multiply(t){return this.multiplyRight(t)}}},44435:(t,i,n)=>{n.d(i,{B8:()=>o,I0:()=>g,Tl:()=>c,a4:()=>h,e$:()=>l,hs:()=>u,lw:()=>a,mg:()=>r,vt:()=>s});var e=n(50741);function s(){const t=new e.tb(9);return e.tb!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}function r(t,i){if(t===i){const n=i[1],e=i[2],s=i[5];t[1]=i[3],t[2]=i[6],t[3]=n,t[5]=i[7],t[6]=e,t[7]=s}else t[0]=i[0],t[1]=i[3],t[2]=i[6],t[3]=i[1],t[4]=i[4],t[5]=i[7],t[6]=i[2],t[7]=i[5],t[8]=i[8];return t}function o(t,i){const n=i[0],e=i[1],s=i[2],r=i[3],o=i[4],h=i[5],a=i[6],c=i[7],l=i[8],u=l*o-h*c,g=-l*r+h*a,m=c*r-o*a;let d=n*u+e*g+s*m;return d?(d=1/d,t[0]=u*d,t[1]=(-l*e+s*c)*d,t[2]=(h*e-s*o)*d,t[3]=g*d,t[4]=(l*n-s*a)*d,t[5]=(-h*n+s*r)*d,t[6]=m*d,t[7]=(-c*n+e*a)*d,t[8]=(o*n-e*r)*d,t):null}function h(t){const i=t[0],n=t[1],e=t[2],s=t[3],r=t[4],o=t[5],h=t[6],a=t[7],c=t[8];return i*(c*r-o*a)+n*(-c*s+o*h)+e*(a*s-r*h)}function a(t,i,n){const e=i[0],s=i[1],r=i[2],o=i[3],h=i[4],a=i[5],c=i[6],l=i[7],u=i[8],g=n[0],m=n[1],d=n[2],f=n[3],p=n[4],w=n[5],_=n[6],b=n[7],y=n[8];return t[0]=g*e+m*o+d*c,t[1]=g*s+m*h+d*l,t[2]=g*r+m*a+d*u,t[3]=f*e+p*o+w*c,t[4]=f*s+p*h+w*l,t[5]=f*r+p*a+w*u,t[6]=_*e+b*o+y*c,t[7]=_*s+b*h+y*l,t[8]=_*r+b*a+y*u,t}function c(t,i,n){const e=i[0],s=i[1],r=i[2],o=i[3],h=i[4],a=i[5],c=i[6],l=i[7],u=i[8],g=n[0],m=n[1];return t[0]=e,t[1]=s,t[2]=r,t[3]=o,t[4]=h,t[5]=a,t[6]=g*e+m*o+c,t[7]=g*s+m*h+l,t[8]=g*r+m*a+u,t}function l(t,i,n){const e=i[0],s=i[1],r=i[2],o=i[3],h=i[4],a=i[5],c=i[6],l=i[7],u=i[8],g=Math.sin(n),m=Math.cos(n);return t[0]=m*e+g*o,t[1]=m*s+g*h,t[2]=m*r+g*a,t[3]=m*o-g*e,t[4]=m*h-g*s,t[5]=m*a-g*r,t[6]=c,t[7]=l,t[8]=u,t}function u(t,i,n){const e=n[0],s=n[1];return t[0]=e*i[0],t[1]=e*i[1],t[2]=e*i[2],t[3]=s*i[3],t[4]=s*i[4],t[5]=s*i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t}function g(t,i){const n=i[0],e=i[1],s=i[2],r=i[3],o=n+n,h=e+e,a=s+s,c=n*o,l=e*o,u=e*h,g=s*o,m=s*h,d=s*a,f=r*o,p=r*h,w=r*a;return t[0]=1-u-d,t[3]=l-w,t[6]=g+p,t[1]=l+w,t[4]=1-c-d,t[7]=m-f,t[2]=g-p,t[5]=m+f,t[8]=1-c-u,t}},72734:(t,i,n)=>{n.d(i,{B$:()=>o,IU:()=>s,Ix:()=>e,Pq:()=>r});const e=.1,s=1e-12,r=1e-15,o=1e-20;Math.PI,Math.PI,Math.PI,Math.PI},67733:(t,i,n)=>{n.d(i,{dO:()=>c,ie:()=>m,R2:()=>B,CB:()=>k,Zc:()=>D,ZZ:()=>ot});const e=-1,s=0,r=1;var o=n(87597);const h=new o.P,a=new o.P;class c{constructor(t=[0,0,0],i=[0,0,0],n){n=n||h.copy(t).add(i).scale(.5),this.center=new o.P(n),this.halfDiagonal=new o.P(i).subtract(this.center),this.minimum=new o.P(t),this.maximum=new o.P(i)}clone(){return new c(this.minimum,this.maximum,this.center)}equals(t){return this===t||Boolean(t)&&this.minimum.equals(t.minimum)&&this.maximum.equals(t.maximum)}transform(t){return this.center.transformAsPoint(t),this.halfDiagonal.transform(t),this.minimum.transform(t),this.maximum.transform(t),this}intersectPlane(t){const{halfDiagonal:i}=this,n=a.from(t.normal),o=i.x*Math.abs(n.x)+i.y*Math.abs(n.y)+i.z*Math.abs(n.z),h=this.center.dot(n)+t.distance;return h-o>0?r:h+o<0?e:s}distanceTo(t){return Math.sqrt(this.distanceSquaredTo(t))}distanceSquaredTo(t){const i=h.from(t).subtract(this.center),{halfDiagonal:n}=this;let e,s=0;return e=Math.abs(i.x)-n.x,e>0&&(s+=e*e),e=Math.abs(i.y)-n.y,e>0&&(s+=e*e),e=Math.abs(i.z)-n.z,e>0&&(s+=e*e),s}}var l=n(90218);const u=new o.P,g=new o.P;class m{constructor(t=[0,0,0],i=0){this.radius=-0,this.center=new o.P,this.fromCenterRadius(t,i)}fromCenterRadius(t,i){return this.center.from(t),this.radius=i,this}fromCornerPoints(t,i){return i=u.from(i),this.center=(new o.P).from(t).add(i).scale(.5),this.radius=this.center.distance(i),this}equals(t){return this===t||Boolean(t)&&this.center.equals(t.center)&&this.radius===t.radius}clone(){return new m(this.center,this.radius)}union(t){const i=this.center,n=this.radius,e=t.center,s=t.radius,r=u.copy(e).subtract(i),o=r.magnitude();if(n>=o+s)return this.clone();if(s>=o+n)return t.clone();const h=.5*(n+o+s);return g.copy(r).scale((-n+h)/o).add(i),this.center.copy(g),this.radius=h,this}expand(t){const i=u.from(t).subtract(this.center).magnitude();return i>this.radius&&(this.radius=i),this}transform(t){this.center.transform(t);const i=l.IL(u,t);return this.radius=Math.max(i[0],Math.max(i[1],i[2]))*this.radius,this}distanceSquaredTo(t){const i=this.distanceTo(t);return i*i}distanceTo(t){const i=u.from(t).subtract(this.center);return Math.max(0,i.len()-this.radius)}intersectPlane(t){const i=this.center,n=this.radius,o=t.normal.dot(i)+t.distance;return o<-n?e:o<n?s:r}}var d=n(35567),f=n(11633);const p=new o.P,w=new o.P,_=new o.P,b=new o.P,y=new o.P,L=new o.P,P=new o.P,M=0,A=1,C=2,x=3,v=4,I=5,E=6,O=7,S=8;class k{constructor(t=[0,0,0],i=[0,0,0,0,0,0,0,0,0]){this.center=(new o.P).from(t),this.halfAxes=new d.d(i)}get halfSize(){const t=this.halfAxes.getColumn(0),i=this.halfAxes.getColumn(1),n=this.halfAxes.getColumn(2);return[new o.P(t).len(),new o.P(i).len(),new o.P(n).len()]}get quaternion(){const t=this.halfAxes.getColumn(0),i=this.halfAxes.getColumn(1),n=this.halfAxes.getColumn(2),e=new o.P(t).normalize(),s=new o.P(i).normalize(),r=new o.P(n).normalize();return(new f.P).fromMatrix3(new d.d([...e,...s,...r]))}fromCenterHalfSizeQuaternion(t,i,n){const e=new f.P(n),s=(new d.d).fromQuaternion(e);return s[0]=s[0]*i[0],s[1]=s[1]*i[0],s[2]=s[2]*i[0],s[3]=s[3]*i[1],s[4]=s[4]*i[1],s[5]=s[5]*i[1],s[6]=s[6]*i[2],s[7]=s[7]*i[2],s[8]=s[8]*i[2],this.center=(new o.P).from(t),this.halfAxes=s,this}clone(){return new k(this.center,this.halfAxes)}equals(t){return this===t||Boolean(t)&&this.center.equals(t.center)&&this.halfAxes.equals(t.halfAxes)}getBoundingSphere(t=new m){const i=this.halfAxes,n=i.getColumn(0,_),e=i.getColumn(1,b),s=i.getColumn(2,y),r=p.copy(n).add(e).add(s);return t.center.copy(this.center),t.radius=r.magnitude(),t}intersectPlane(t){const i=this.center,n=t.normal,o=this.halfAxes,h=n.x,a=n.y,c=n.z,l=Math.abs(h*o[M]+a*o[A]+c*o[C])+Math.abs(h*o[x]+a*o[v]+c*o[I])+Math.abs(h*o[E]+a*o[O]+c*o[S]),u=n.dot(i)+t.distance;return u<=-l?e:u>=l?r:s}distanceTo(t){return Math.sqrt(this.distanceSquaredTo(t))}distanceSquaredTo(t){const i=w.from(t).subtract(this.center),n=this.halfAxes,e=n.getColumn(0,_),s=n.getColumn(1,b),r=n.getColumn(2,y),o=e.magnitude(),h=s.magnitude(),a=r.magnitude();e.normalize(),s.normalize(),r.normalize();let c,l=0;return c=Math.abs(i.dot(e))-o,c>0&&(l+=c*c),c=Math.abs(i.dot(s))-h,c>0&&(l+=c*c),c=Math.abs(i.dot(r))-a,c>0&&(l+=c*c),l}computePlaneDistances(t,i,n=[-0,-0]){let e=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY;const r=this.center,o=this.halfAxes,h=o.getColumn(0,_),a=o.getColumn(1,b),c=o.getColumn(2,y),l=L.copy(h).add(a).add(c).add(r),u=P.copy(l).subtract(t);let g=i.dot(u);return e=Math.min(g,e),s=Math.max(g,s),l.copy(r).add(h).add(a).subtract(c),u.copy(l).subtract(t),g=i.dot(u),e=Math.min(g,e),s=Math.max(g,s),l.copy(r).add(h).subtract(a).add(c),u.copy(l).subtract(t),g=i.dot(u),e=Math.min(g,e),s=Math.max(g,s),l.copy(r).add(h).subtract(a).subtract(c),u.copy(l).subtract(t),g=i.dot(u),e=Math.min(g,e),s=Math.max(g,s),r.copy(l).subtract(h).add(a).add(c),u.copy(l).subtract(t),g=i.dot(u),e=Math.min(g,e),s=Math.max(g,s),r.copy(l).subtract(h).add(a).subtract(c),u.copy(l).subtract(t),g=i.dot(u),e=Math.min(g,e),s=Math.max(g,s),r.copy(l).subtract(h).subtract(a).add(c),u.copy(l).subtract(t),g=i.dot(u),e=Math.min(g,e),s=Math.max(g,s),r.copy(l).subtract(h).subtract(a).subtract(c),u.copy(l).subtract(t),g=i.dot(u),e=Math.min(g,e),s=Math.max(g,s),n[0]=e,n[1]=s,n}transform(t){this.center.transformAsPoint(t);const i=this.halfAxes.getColumn(0,_);i.transformAsPoint(t);const n=this.halfAxes.getColumn(1,b);n.transformAsPoint(t);const e=this.halfAxes.getColumn(2,y);return e.transformAsPoint(t),this.halfAxes=new d.d([...i,...n,...e]),this}getTransform(){throw new Error("not implemented")}}var T=n(4990),z=n(54901);const N=new o.P,R=new o.P;class D{constructor(t=[0,0,1],i=0){this.normal=new o.P,this.distance=-0,this.fromNormalDistance(t,i)}fromNormalDistance(t,i){return(0,T.v)(Number.isFinite(i)),this.normal.from(t).normalize(),this.distance=i,this}fromPointNormal(t,i){t=N.from(t),this.normal.from(i).normalize();const n=-this.normal.dot(t);return this.distance=n,this}fromCoefficients(t,i,n,e){return this.normal.set(t,i,n),(0,T.v)((0,z.aI)(this.normal.len(),1)),this.distance=e,this}clone(){return new D(this.normal,this.distance)}equals(t){return(0,z.aI)(this.distance,t.distance)&&(0,z.aI)(this.normal,t.normal)}getPointDistance(t){return this.normal.dot(t)+this.distance}transform(t){const i=R.copy(this.normal).transformAsVector(t).normalize(),n=this.normal.scale(-this.distance).transform(t);return this.fromPointNormal(n,i)}projectPointOntoPlane(t,i=[0,0,0]){const n=N.from(t),e=this.getPointDistance(n),s=R.copy(this.normal).scale(e);return n.subtract(s).to(i)}}const q=[new o.P([1,0,0]),new o.P([0,1,0]),new o.P([0,0,1])],V=new o.P,W=new o.P;class B{constructor(t=[]){this.planes=t}fromBoundingSphere(t){this.planes.length=2*q.length;const i=t.center,n=t.radius;let e=0;for(const s of q){let t=this.planes[e],r=this.planes[e+1];t||(t=this.planes[e]=new D),r||(r=this.planes[e+1]=new D);const o=V.copy(s).scale(-n).add(i);t.fromPointNormal(o,s);const h=V.copy(s).scale(n).add(i),a=W.copy(s).negate();r.fromPointNormal(h,a),e+=2}return this}computeVisibility(t){let i=r;for(const n of this.planes){switch(t.intersectPlane(n)){case e:return e;case s:i=s}}return i}computeVisibilityWithPlaneMask(t,i){if((0,T.v)(Number.isFinite(i),"parentPlaneMask is required."),i===B.MASK_OUTSIDE||i===B.MASK_INSIDE)return i;let n=B.MASK_INSIDE;const r=this.planes;for(let o=0;o<this.planes.length;++o){const h=o<31?1<<o:0;if(o<31&&!(i&h))continue;const a=r[o],c=t.intersectPlane(a);if(c===e)return B.MASK_OUTSIDE;c===s&&(n|=h)}return n}}B.MASK_OUTSIDE=4294967295,B.MASK_INSIDE=0,B.MASK_INDETERMINATE=2147483647;new o.P,new o.P,new o.P,new o.P,new o.P;new o.P,new o.P,new o.P,new o.P,new o.P,new o.P,new o.P,new o.P,new o.P,new o.P,new o.P,new o.P;var G=n(72734);const j=new d.d,X=new d.d,$=new d.d,H=new d.d,U=new d.d;function F(t,i={}){const n=G.B$;let e=0,s=0;const r=X,o=$;r.identity(),o.copy(t);const h=n*function(t){let i=0;for(let n=0;n<9;++n){const e=t[n];i+=e*e}return Math.sqrt(i)}(o);for(;s<10&&Y(o)>h;)Q(o,H),U.copy(H).transpose(),o.multiplyRight(H),o.multiplyLeft(U),r.multiplyRight(H),++e>2&&(++s,e=0);return i.unitary=r.toTarget(i.unitary),i.diagonal=o.toTarget(i.diagonal),i}const K=[1,0,0],Z=[2,2,1];function Y(t){let i=0;for(let n=0;n<3;++n){const e=t[j.getElementIndex(Z[n],K[n])];i+=2*e*e}return Math.sqrt(i)}function Q(t,i){const n=G.Pq;let e=0,s=1;for(let c=0;c<3;++c){const i=Math.abs(t[j.getElementIndex(Z[c],K[c])]);i>e&&(s=c,e=i)}const r=K[s],o=Z[s];let h=1,a=0;if(Math.abs(t[j.getElementIndex(o,r)])>n){const i=(t[j.getElementIndex(o,o)]-t[j.getElementIndex(r,r)])/2/t[j.getElementIndex(o,r)];let n;n=i<0?-1/(-i+Math.sqrt(1+i*i)):1/(i+Math.sqrt(1+i*i)),h=1/Math.sqrt(1+n*n),a=n*h}return d.d.IDENTITY.to(i),i[j.getElementIndex(r,r)]=i[j.getElementIndex(o,o)]=h,i[j.getElementIndex(o,r)]=a,i[j.getElementIndex(r,o)]=-a,i}const J=new o.P,tt=new o.P,it=new o.P,nt=new o.P,et=new o.P,st=new d.d,rt={diagonal:new d.d,unitary:new d.d};function ot(t,i=new k){if(!t||0===t.length)return i.halfAxes=new d.d([0,0,0,0,0,0,0,0,0]),i.center=new o.P,i;const n=t.length,e=new o.P(0,0,0);for(const o of t)e.add(o);const s=1/n;e.multiplyByScalar(s);let r=0,h=0,a=0,c=0,l=0,u=0;for(const o of t){const t=J.copy(o).subtract(e);r+=t.x*t.x,h+=t.x*t.y,a+=t.x*t.z,c+=t.y*t.y,l+=t.y*t.z,u+=t.z*t.z}r*=s,h*=s,a*=s,c*=s,l*=s,u*=s;const g=st;g[0]=r,g[1]=h,g[2]=a,g[3]=h,g[4]=c,g[5]=l,g[6]=a,g[7]=l,g[8]=u;const{unitary:m}=F(g,rt),f=i.halfAxes.copy(m);let p=f.getColumn(0,it),w=f.getColumn(1,nt),_=f.getColumn(2,et),b=-Number.MAX_VALUE,y=-Number.MAX_VALUE,L=-Number.MAX_VALUE,P=Number.MAX_VALUE,M=Number.MAX_VALUE,A=Number.MAX_VALUE;for(const o of t)J.copy(o),b=Math.max(J.dot(p),b),y=Math.max(J.dot(w),y),L=Math.max(J.dot(_),L),P=Math.min(J.dot(p),P),M=Math.min(J.dot(w),M),A=Math.min(J.dot(_),A);p=p.multiplyByScalar(.5*(P+b)),w=w.multiplyByScalar(.5*(M+y)),_=_.multiplyByScalar(.5*(A+L)),i.center.copy(p).add(w).add(_);const C=tt.set(b-P,y-M,L-A).multiplyByScalar(.5),x=new d.d([C[0],0,0,0,C[1],0,0,0,C[2]]);return i.halfAxes.multiplyRight(x),i}}}]);