"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1273],{63483:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var t=n(62540),i=n(43023);const r={},o="fetchFile",l={id:"modules/core/api-reference/fetch-file",title:"fetchFile",description:"The fetchFile() function is an alternative to the built-in",source:"@site/../docs/modules/core/api-reference/fetch-file.md",sourceDirName:"modules/core/api-reference",slug:"/modules/core/api-reference/fetch-file",permalink:"/docs/modules/core/api-reference/fetch-file",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/core/api-reference/fetch-file.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"save",permalink:"/docs/modules/core/api-reference/save"},next:{title:"writeFile",permalink:"/docs/modules/core/api-reference/write-file"}},c={},d=[{value:"Node.js local file system support",id:"nodejs-local-file-system-support",level:2},{value:"Path prefix resolution",id:"path-prefix-resolution",level:2},{value:"Alias resolution",id:"alias-resolution",level:2},{value:"Usage",id:"usage",level:2},{value:"Functions",id:"functions",level:2},{value:"Remarks",id:"remarks",level:2}];function a(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"fetchfile",children:"fetchFile"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"fetchFile()"})," function is an alternative to the built-in\n",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/fetch",children:(0,t.jsx)(s.code,{children:"fetch"})})," function.\n",(0,t.jsx)(s.code,{children:"fetchFile"})," provides additional functionality to support Node.js and testing use cases:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"load from local file system under Node.js"}),"\n",(0,t.jsx)(s.li,{children:"path prefix resolution"}),"\n",(0,t.jsx)(s.li,{children:"alias resolution"}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"fetchFile(url: string | Blob, options?: RequestInit) : Promise<Response>\n"})}),"\n",(0,t.jsx)(s.p,{children:"A wrapper around the platform function with some additions:"}),"\n",(0,t.jsx)(s.p,{children:"Returns:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["A promise that resolves into a fetch ",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Response",children:(0,t.jsx)(s.code,{children:"Response"})})," object","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"headers"}),": ",(0,t.jsx)(s.code,{children:"Headers"})," - A ",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Headers",children:(0,t.jsx)(s.code,{children:"Headers"})})," object."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"arrayBuffer()"}),": Promise.ArrayBuffer",(0,t.jsx)(s.code,{children:"- Loads the file as an"}),"ArrayBuffer`."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"text()"}),": Promise.String` - Loads the file and decodes it into text."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"json()"}),": Promise.String` - Loads the file and decodes it into JSON."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"body"})," : ReadableStream` - A stream that can be used to incrementally read the contents of the file."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["Use of ",(0,t.jsx)(s.code,{children:"fetchFile"})," is optional. loaders.gl ",(0,t.jsx)(s.code,{children:"parse()"})," function can be used with data loaded via any mechanism the application prefers, e.g. directly using ",(0,t.jsx)(s.code,{children:"fetch"}),", ",(0,t.jsx)(s.code,{children:"XMLHttpRequest"})," etc."]})}),"\n",(0,t.jsx)(s.h2,{id:"nodejs-local-file-system-support",children:"Node.js local file system support"}),"\n",(0,t.jsx)("p",{class:"badges",children:(0,t.jsx)("img",{src:"https://img.shields.io/badge/From-v4.0-blue.svg?style=flat-square",alt:"From-v4.0"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"fetchFile()"})," function supports fetching data from the local file system under Node.js."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"fetchFile"})," will delegate any url that starts with ",(0,t.jsx)(s.code,{children:"http://"})," ",(0,t.jsx)(s.code,{children:"https://"})," or ",(0,t.jsx)(s.code,{children:"data://"}),"\nto the built-in ",(0,t.jsx)(s.code,{children:"fetch"})," function. Other URLs will be interpreted as local files."]}),"\n",(0,t.jsx)(s.admonition,{type:"caution",children:(0,t.jsxs)(s.p,{children:["loaders.gl v4.0+ applications no longer need to install the ",(0,t.jsx)(s.code,{children:"@loaders.gl/polyfills"}),"\nmodule to get ",(0,t.jsx)(s.code,{children:"fetch"})," support under Node.js v18+."]})}),"\n",(0,t.jsx)(s.h2,{id:"path-prefix-resolution",children:"Path prefix resolution"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"fetchFile()"})," injects any prefix set by the ",(0,t.jsx)(s.code,{children:"setPathPrefix()"})," API.\nNote that the path prefix mechanism is mainly intended to help small example applications\nto load data from the right place. It is not intended to support general application use cases, so use sparingly."]}),"\n",(0,t.jsx)(s.h2,{id:"alias-resolution",children:"Alias resolution"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"fetchFile()"})," also resolves any aliases set by the ",(0,t.jsx)(s.code,{children:"_addAliases"})," function. This internal\nfunctionality is mainly intended for and used by loaders.gl own test cases, to allow paths\nto test data file to be specified in terms of which loaders.gl module they are located in."]}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(s.p,{children:["Use the ",(0,t.jsx)(s.code,{children:"fetchFile"})," function as follows:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"import {fetchFile} from '@loaders.gl/core';\n\nconst response = await fetchFile(url);\n// or supply any standard `RequestInit` options expected by `fetch`\nconst response = await fetchFile(url, {headers: {}});\n\n// Now use standard browser Response APIs\n\n// Note: headers are case-insensitive\nconst contentLength = response.headers.get('content-length');\nconst mimeType = response.headers.get('content-type');\n\nconst arrayBuffer = await response.arrayBuffer();\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"Response"})," object from ",(0,t.jsx)(s.code,{children:"fetchFile"})," is usually passed to ",(0,t.jsx)(s.code,{children:"parse"})," as follows:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"import {fetchFile, parse} from '@loaders.gl/core';\nimport {OBJLoader} from '@loaders.gl/obj';\n\nconst data = await parse(fetchFile(url), OBJLoader);\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Note that if you don't need the extra features in ",(0,t.jsx)(s.code,{children:"fetchFile"}),", you can just use the browsers built-in ",(0,t.jsx)(s.code,{children:"fetch"})," method."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"import {parse} from '@loaders.gl/core';\nimport {OBJLoader} from '@loaders.gl/obj';\n\nconst data = await parse(fetch(url), OBJLoader);\n"})}),"\n",(0,t.jsx)(s.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(s.h2,{id:"remarks",children:"Remarks"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"fetch"})," is supported in Node.js from v18+."]}),"\n",(0,t.jsxs)(s.li,{children:["For ",(0,t.jsx)(s.code,{children:"string"})," URLs - ",(0,t.jsx)(s.code,{children:"fetchFile"})," will delegate to ",(0,t.jsx)(s.code,{children:"fetch"})," after resolving the URL."]}),"\n",(0,t.jsxs)(s.li,{children:["For ",(0,t.jsx)(s.code,{children:"File"}),"/",(0,t.jsx)(s.code,{children:"Blob"})," - a ",(0,t.jsx)(s.code,{children:"Response"})," object will be returned. Any ",(0,t.jsx)(s.code,{children:"RequestInit"})," options are ignored in this case."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Response.headers"})," (",(0,t.jsx)(s.code,{children:"Content-Length"})," and ",(0,t.jsx)(s.code,{children:"Content-Type"}),") are populated (on a best effort basis for ",(0,t.jsx)(s.code,{children:"File"}),", ",(0,t.jsx)(s.code,{children:"Blob"})," and under Node.js)."]}),"\n",(0,t.jsxs)(s.li,{children:["Supports ",(0,t.jsx)(s.code,{children:"setPathPrefix"}),": If path prefix has been set, it will be appended if ",(0,t.jsx)(s.code,{children:"url"})," is relative (e.g. does not start with a ",(0,t.jsx)(s.code,{children:"/"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:["Supports ",(0,t.jsx)(s.code,{children:"File"})," and ",(0,t.jsx)(s.code,{children:"Blob"}),' objects on the browser (and returns "mock" fetch response objects).']}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},43023:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(63696);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);