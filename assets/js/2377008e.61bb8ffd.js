"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[381],{9970:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>a,frontMatter:()=>t,metadata:()=>l,toc:()=>h});var d=n(74848),s=n(28453);const t={},i="GLBLoader",l={id:"modules/gltf/api-reference/glb-loader",title:"GLBLoader",description:'The GLBLoader parses a GLB binary "envelope" extracting the embedded JSON and binary chunks.',source:"@site/../docs/modules/gltf/api-reference/glb-loader.md",sourceDirName:"modules/gltf/api-reference",slug:"/modules/gltf/api-reference/glb-loader",permalink:"/docs/modules/gltf/api-reference/glb-loader",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/gltf/api-reference/glb-loader.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GLTFLoader",permalink:"/docs/modules/gltf/api-reference/gltf-loader"},next:{title:"I3SLoader",permalink:"/docs/modules/i3s/api-reference/i3s-loader"}},c={},h=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Data Format",id:"data-format",level:2}];function o(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.h1,{id:"glbloader",children:"GLBLoader"}),"\n",(0,d.jsxs)(r.p,{children:["The ",(0,d.jsx)(r.code,{children:"GLBLoader"}),' parses a GLB binary "envelope" extracting the embedded JSON and binary chunks.']}),"\n",(0,d.jsxs)(r.p,{children:["Note: applications that want to parse GLB-formatted glTF files would normally use the ",(0,d.jsx)(r.code,{children:"GLTFLoader"})," instead. The ",(0,d.jsx)(r.code,{children:"GLBLoader"})," can be used to load custom data that combines JSON and binary resources."]}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Loader"}),(0,d.jsx)(r.th,{children:"Characteristic"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"File Extensions"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:".glb"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"File Type"}),(0,d.jsx)(r.td,{children:"Binary"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"File Format"}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.a,{href:"https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#glb-file-format-specification",children:"GLB v2"}),", ",(0,d.jsx)(r.a,{href:"https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF",children:"GLB v1"})," *"]})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Data Format"}),(0,d.jsx)(r.td,{children:"See below"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:"Supported APIs"}),(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"load"}),", ",(0,d.jsx)(r.code,{children:"parse"}),", ",(0,d.jsx)(r.code,{children:"parseSync"})]})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{}),(0,d.jsx)(r.td,{})]})]})]}),"\n",(0,d.jsxs)(r.p,{children:["* From ",(0,d.jsx)(r.a,{href:"http://shields.io",children:(0,d.jsx)(r.img,{src:"https://img.shields.io/badge/v2.3-blue.svg?style=flat-square",alt:"Website shields.io"})}),", the ",(0,d.jsx)(r.code,{children:"GLBLoader"})," can also load GLB v1 formatted files, returning a normalized GLB v2 compatible data structure, but with the ",(0,d.jsx)(r.code,{children:"version"})," field set to ",(0,d.jsx)(r.code,{children:"1"}),"."]}),"\n",(0,d.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-typescript",children:"import {load} from '@loaders.gl/core';\nimport {GLBLoader} from '@loaders.gl/gltf';\nconst gltf = await load(url, GLBLoader);\n"})}),"\n",(0,d.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Option"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Default"}),(0,d.jsx)(r.th,{children:"Description"})]})}),(0,d.jsx)(r.tbody,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsxs)(r.td,{children:[(0,d.jsx)(r.code,{children:"glb.strict"})," (DEPRECATED)"]}),(0,d.jsx)(r.td,{children:"Boolean"}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"false"})}),(0,d.jsx)(r.td,{children:"Whether to support non-standard JSON/BIN chunk type numbers."})]})})]}),"\n",(0,d.jsx)(r.p,{children:"Remarks:"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsx)(r.li,{children:"Parses GLB v2 encoded data."}),"\n",(0,d.jsxs)(r.li,{children:["Parses GLB v1 encoded data (enabling support for the glTF v1 ",(0,d.jsx)(r.code,{children:"KHR_binary_gltf"})," extension). Parsed GLB v1 data is returned in the standard ",(0,d.jsx)(r.code,{children:"GLB"})," format."]}),"\n",(0,d.jsx)(r.li,{children:"Extracts multiple binary chunks if present (this is supported by the GLB specification but is not used in the glTF specification)."}),"\n"]}),"\n",(0,d.jsx)(r.h2,{id:"data-format",children:"Data Format"}),"\n",(0,d.jsx)(r.p,{children:"Returns"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-typescripton",children:'{\n  "header": {\n    "byteLength": number,\n    "byteOffset": number\n  },\n\n  "type": string,\n  "version": number,\n\n  // JSON Chunk\n  "json": any,\n\n  // BIN Chunk\n  "hasBinChunk": boolean,\n  "binChunks": [\n    {\n      "arrayBuffer": ArrayBuffer,\n      "byteOffset": Number,\n      "byteLength": Number\n    }\n  ]\n}\n'})}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Field"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Default"}),(0,d.jsx)(r.th,{children:"Description"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"type"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"String"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"glTF"})}),(0,d.jsx)(r.td,{children:"String containing the first four bytes of the file"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"version"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"Number"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"2"})}),(0,d.jsx)(r.td,{children:"The version number, only version 2 is supported"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"json"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"Object"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"{}"})}),(0,d.jsx)(r.td,{children:"Parsed JSON from the JSON chunk"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"binChunks"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ArrayBuffer"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"null"})}),(0,d.jsx)(r.td,{children:"The binary chunk"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"binChunks[\\*].arrayBuffer"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ArrayBuffer"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"null"})}),(0,d.jsx)(r.td,{children:"The binary chunk"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"binChunks[\\*].byteOffset"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"Number"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"null"})}),(0,d.jsx)(r.td,{children:"offset of BIN (e.g. embedded in larger binary block)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"binChunks[\\*].byteLength"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ArrayBuffer"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"null"})}),(0,d.jsx)(r.td,{children:"length of BIN (e.g. embedded in larger binary block)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"header.byteLength"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"Number"})}),(0,d.jsx)(r.td,{children:"-"}),(0,d.jsx)(r.td,{children:"length of GLB (e.g. embedded in larger binary block)"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"header.byteOffset"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"Number"})}),(0,d.jsx)(r.td,{children:"0"}),(0,d.jsx)(r.td,{children:"offset of GLB (e.g. embedded in larger binary block)"})]})]})]})]})}function a(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var d=n(96540);const s={},t=d.createContext(s);function i(e){const r=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),d.createElement(t.Provider,{value:r},e.children)}}}]);