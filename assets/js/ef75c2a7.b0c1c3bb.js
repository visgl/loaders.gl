"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4437],{87266:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>n,metadata:()=>l,toc:()=>a});var r=s(74848),i=s(28453);const n={},d="KTX2BasisWriter \ud83d\udea7",l={id:"modules/textures/api-reference/ktx2-basis-texture-writer",title:"KTX2BasisWriter \ud83d\udea7",description:"The experimental KTX2BasisUniversalTextureWriter class can encode a decoded image into a KTX2 texture.",source:"@site/../docs/modules/textures/api-reference/ktx2-basis-texture-writer.md",sourceDirName:"modules/textures/api-reference",slug:"/modules/textures/api-reference/ktx2-basis-texture-writer",permalink:"/docs/modules/textures/api-reference/ktx2-basis-texture-writer",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/textures/api-reference/ktx2-basis-texture-writer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CompressedTextureWriter \ud83d\udea7",permalink:"/docs/modules/textures/api-reference/compressed-texture-writer"},next:{title:"WKTWriter",permalink:"/docs/modules/wkt/api-reference/wkt-writer"}},o={},a=[{value:"Usage",id:"usage",level:2},{value:"Data Format",id:"data-format",level:2},{value:"Options",id:"options",level:2},{value:"WASM module",id:"wasm-module",level:2}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"ktx2basiswriter-",children:"KTX2BasisWriter \ud83d\udea7"}),"\n",(0,r.jsxs)("p",{class:"badges",children:[(0,r.jsx)("img",{src:"https://img.shields.io/badge/From-v3.1-blue.svg?style=flat-square",alt:"From-v3.1"}),(0,r.jsx)("img",{src:"https://img.shields.io/badge/Node.js-only-red.svg?style=flat-square",alt:"Node.js-only"})]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["The experimental ",(0,r.jsx)(t.code,{children:"KTX2BasisUniversalTextureWriter"})," class can encode a decoded image into a KTX2 texture."]}),"\n"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Loader"}),(0,r.jsx)(t.th,{children:"Characteristic"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"File Extension"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:".ktx2"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"File Type"}),(0,r.jsx)(t.td,{children:"Binary"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Data Format"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/KhronosGroup/KTX-Specification/blob/main/ktxspec.adoc",children:"https://github.com/KhronosGroup/KTX-Specification/blob/main/ktxspec.adoc"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"File Format"}),(0,r.jsx)(t.td,{children:"KTX2"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Encoder Type"}),(0,r.jsx)(t.td,{children:"Asynchronous"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Worker Thread"}),(0,r.jsx)(t.td,{children:"No (but may run on separate native thread in browsers)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Streaming"}),(0,r.jsx)(t.td,{children:"No"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import '@loaders.gl/polyfill'; // only if using under Node\nimport {load, encode} from '@loaders.gl/core';\nimport {KTX2BasisUniversalTextureWriter} from '@loaders.gl/textures';\n\nconst shannonPNG = 'shannon.png';\n\nconst image = await load(shannonPNG, ImageLoader, {image: {type: 'data'}});\nconst encodedData = await encode(image, KTX2BasisUniversalTextureWriter);\n"})}),"\n",(0,r.jsx)(t.h2,{id:"data-format",children:"Data Format"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/KhronosGroup/KTX-Specification/blob/main/ktxspec.adoc",children:"https://github.com/KhronosGroup/KTX-Specification/blob/main/ktxspec.adoc"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Option"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"useSRGB"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:"If true, the input is assumed to be in sRGB space."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"qualityLevel"}),(0,r.jsx)(t.td,{children:"Number"}),(0,r.jsx)(t.td,{children:"10"}),(0,r.jsx)(t.td,{children:"Sets the ETC1S encoder's quality level, which controls the file size vs. quality tradeoff. Range is [1,255]"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"encodeUASTC"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:"If true, the encoder will output a UASTC texture, otherwise a ETC1S texture."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"mipmaps"}),(0,r.jsx)(t.td,{children:"Boolean"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:"If true mipmaps will be generated from the source images"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"wasm-module",children:"WASM module"}),"\n",(0,r.jsx)(t.p,{children:"The writer applies BinomialLCC basis universal encoder. The libraries are loaded during runtime from URLs:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://unpkg.com/@loaders.gl/textures@$%7BVERSION%7D/dist/libs/basis_encoder.wasm",children:"https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.wasm"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://unpkg.com/@loaders.gl/textures@$%7BVERSION%7D/dist/libs/basis_encoder.js",children:"https://unpkg.com/@loaders.gl/textures@${VERSION}/dist/libs/basis_encoder.js"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>l});var r=s(96540);const i={},n=r.createContext(i);function d(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);