"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[0],{79892:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=r(85893),i=r(11151);const a={},n="GeoParquet",o={id:"modules/parquet/formats/geoparquet",title:"GeoParquet",description:"parquet-logo",source:"@site/../docs/modules/parquet/formats/geoparquet.md",sourceDirName:"modules/parquet/formats",slug:"/modules/parquet/formats/geoparquet",permalink:"/docs/modules/parquet/formats/geoparquet",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/parquet/formats/geoparquet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Parquet",permalink:"/docs/modules/parquet/formats/parquet"},next:{title:"PMTiles",permalink:"/docs/modules/pmtiles/formats/pmtiles"}},l={},d=[{value:"Supported features checklist",id:"supported-features-checklist",level:2},{value:"Data size limitation",id:"data-size-limitation",level:2},{value:"Alternatives",id:"alternatives",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"geoparquet",children:"GeoParquet"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{alt:"parquet-logo",src:r(53852).Z+"",width:"294",height:"60"}),"\n\u2003\n",(0,s.jsx)(t.img,{alt:"apache-logo",src:r(89556).Z+"",width:"148",height:"60"})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"/docs/modules/parquet",children:(0,s.jsx)(t.code,{children:"loaders.gl/parquet"})})})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://geoparquet.org",children:"geoparquet.org"})})}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Geoparquet is a set of conventions for storing geospatial data in Parquet files."}),"\n",(0,s.jsxs)(t.p,{children:["Standardization is happening at ",(0,s.jsx)(t.a,{href:"https://geoparquet.org",children:"geoparquet.org"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"GeoParquet file is a Parquet file that additionally follows these conventions:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Geospatial metadata describing any geospatial columns is stored in the Parquet file's schema metadata (as stringified JSON)."}),"\n",(0,s.jsxs)(t.li,{children:["Geometry columns are ",(0,s.jsx)(t.a,{href:"/docs/modules/wkt/formats/wkb",children:"WKB"})," encoded (additional encodings will likely be added)."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"supported-features-checklist",children:"Supported features checklist"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Supported"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Parse file metadata"}),(0,s.jsx)(t.td,{children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Geometry column encoding: WKB"}),(0,s.jsx)(t.td,{children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Geometry column encoding: single-geometry type encodings based on the GeoArrow specification"}),(0,s.jsx)(t.td,{children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:'"crs" column metadata: transformt CRS to WGS84 with longitude, latitude representation.'}),(0,s.jsx)(t.td,{children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:'"orientation" column metadata: reorder vertices if set "counterclockwise"'}),(0,s.jsx)(t.td,{children:"\u274c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:'"covering" column metadata: per-row bounding boxes'}),(0,s.jsx)(t.td,{children:"\u274c"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"data-size-limitation",children:"Data size limitation"}),"\n",(0,s.jsx)(t.p,{children:"Parquet files might be large in size (multiple gigabytes). The capacity of GeoParquetLoader is limited by the memory limitations of your current platform. As an example a Chrome tab crashes when it reaches a certain platform dependent size."}),"\n",(0,s.jsxs)(t.p,{children:['As "covering" metadata is not supported yet, it is not possible to make an efficient filtering of data. To prevent memory overflow it is possible to use the ',(0,s.jsx)(t.code,{children:"limit"})," loader option that limits number of rows being parsed. In that case the loader will return first ",(0,s.jsx)(t.code,{children:"limit"})," rows, omitting the rest of file."]}),"\n",(0,s.jsx)(t.h2,{id:"alternatives",children:"Alternatives"}),"\n",(0,s.jsx)(t.p,{children:"GeoParquet can be compared to GeoArrow, as both are binary columnar formats with a high degree of similarity."})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},89556:(e,t,r)=>{r.d(t,{Z:()=>s});const s=r.p+"assets/images/apache-logo-3530356552600b45779f409084590362.png"},53852:(e,t,r)=>{r.d(t,{Z:()=>s});const s=r.p+"assets/images/parquet-logo-small-f443bf9b50bc0b9ab21e18d4e0325715.png"},11151:(e,t,r)=>{r.d(t,{Z:()=>o,a:()=>n});var s=r(67294);const i={},a=s.createContext(i);function n(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);