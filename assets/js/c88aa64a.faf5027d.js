"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[7555],{19498:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var i=n(74848),s=n(28453);const t={},d="TerrainLoader",l={id:"modules/terrain/api-reference/terrain-loader",title:"TerrainLoader",description:"The TerrainLoader reconstructs mesh surfaces from height map images, e.g. Mapzen Terrain Tiles, which encodes elevation into R,G,B values.",source:"@site/../docs/modules/terrain/api-reference/terrain-loader.md",sourceDirName:"modules/terrain/api-reference",slug:"/modules/terrain/api-reference/terrain-loader",permalink:"/docs/modules/terrain/api-reference/terrain-loader",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/terrain/api-reference/terrain-loader.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ShapefileLoader",permalink:"/docs/modules/shapefile/api-reference/shapefile-loader"},next:{title:"BasisLoader",permalink:"/docs/modules/textures/api-reference/basis-loader"}},c={},o=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"elevationDecoder",id:"elevationdecoder",level:3},{value:"tesselator",id:"tesselator",level:3}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"terrainloader",children:"TerrainLoader"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"TerrainLoader"})," reconstructs mesh surfaces from height map images, e.g. ",(0,i.jsx)(r.a,{href:"https://github.com/tilezen/joerd/blob/master/docs/formats.md",children:"Mapzen Terrain Tiles"}),", which encodes elevation into R,G,B values."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Loader"}),(0,i.jsx)(r.th,{children:"Characteristic"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"File Extension"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.code,{children:".png"}),", ",(0,i.jsx)(r.code,{children:".pngraw"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"File Type"}),(0,i.jsx)(r.td,{children:"Binary"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"File Format"}),(0,i.jsx)(r.td,{children:"Encoded height map"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Data Format"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/docs/specifications/category-mesh",children:"Mesh"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Supported APIs"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.code,{children:"load"}),", ",(0,i.jsx)(r.code,{children:"parse"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Decoder Type"}),(0,i.jsx)(r.td,{children:"Asynchronous"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Worker Thread Support"}),(0,i.jsx)(r.td,{children:"Yes"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Streaming Support"}),(0,i.jsx)(r.td,{children:"No"})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:"import {ImageLoader} from '@loaders.gl/images';\nimport {TerrainLoader} from '@loaders.gl/terrain';\nimport {load, registerLoaders} from '@loaders.gl/core';\n\nregisterLoaders(ImageLoader);\n\nconst data = await load(url, TerrainLoader, options);\n"})}),"\n",(0,i.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Option"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Default"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"terrain.meshMaxError"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"number"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"10"})}),(0,i.jsx)(r.td,{children:"Mesh error in meters. The output mesh is in higher resolution (more vertices) if the error is smaller."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"terrain.bounds"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"array<number>"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"null"})}),(0,i.jsxs)(r.td,{children:["Bounds of the image to fit x,y coordinates into. In ",(0,i.jsx)(r.code,{children:"[minX, minY, maxX, maxY]"}),". If not supplied, x and y are in pixels relative to the image."]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"terrain.elevationDecoder"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"object"})}),(0,i.jsx)(r.td,{children:"See below"}),(0,i.jsx)(r.td,{children:"See below"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"terrain.tesselator"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"string"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"auto"})}),(0,i.jsx)(r.td,{children:"See below"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"terrain.skirtHeight"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"number"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"null"})}),(0,i.jsx)(r.td,{children:"If set, create the skirt for the tile with particular height in meters"})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"elevationdecoder",children:"elevationDecoder"}),"\n",(0,i.jsx)(r.p,{children:"Parameters used to convert a pixel to elevation in meters.\nAn object containing the following fields:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"rScale"}),": Multiplier of the red channel."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"gScale"}),": Multiplier of the green channel."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"bScale"}),": Multiplier of the blue channel."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"offset"}),": Translation of the sum."]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Each color channel (r, g, and b) is a number between ",(0,i.jsx)(r.code,{children:"[0, 255]"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["For example, the Mapbox terrain service's elevation is ",(0,i.jsx)(r.a,{href:"https://docs.mapbox.com/help/troubleshooting/access-elevation-data/#decode-data",children:"encoded as follows"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"height = -10000 + ((R * 256 * 256 + G * 256 + B) * 0.1)\n"})}),"\n",(0,i.jsxs)(r.p,{children:["The corresponding ",(0,i.jsx)(r.code,{children:"elevationDecoder"})," is:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'{\n  "rScale": 6553.6,\n  "gScale": 25.6,\n  "bScale": 0.1,\n  "offset": -10000\n}\n'})}),"\n",(0,i.jsxs)(r.p,{children:["The default value of ",(0,i.jsx)(r.code,{children:"elevationDecoder"})," decodes a grayscale image:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'{\n  "rScale": 1,\n  "gScale": 0,\n  "gScale": 0,\n  "offset": 0\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"tesselator",children:"tesselator"}),"\n",(0,i.jsx)(r.p,{children:"The choices for tesselator are as follows:"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"auto"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Chooses ",(0,i.jsx)(r.a,{href:"https://github.com/mapbox/martini",children:"Martini"})," if possible (if the image is a square where both height and width are powers of 2), otherwise uses ",(0,i.jsx)(r.a,{href:"https://github.com/mapbox/delatin",children:"Delatin"})," instead, which has no input image limitations."]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"martini"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Uses the ",(0,i.jsx)(r.a,{href:"https://github.com/mapbox/martini",children:"Martini"})," algorithm for constructing a mesh."]}),"\n",(0,i.jsx)(r.li,{children:"Only works on square 2^n+1 x 2^n+1 grids."}),"\n",(0,i.jsx)(r.li,{children:"Generates a hierarchy of meshes (pick arbitrary detail after a single run)"}),"\n",(0,i.jsx)(r.li,{children:"Optimized for meshing speed rather than quality."}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"delatin"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Uses the ",(0,i.jsx)(r.a,{href:"https://github.com/mapbox/delatin",children:"Delatin"})," algorithm for constructing a mesh."]}),"\n",(0,i.jsx)(r.li,{children:"Works on arbitrary raster grids."}),"\n",(0,i.jsx)(r.li,{children:"Generates a single mesh for a particular detail."}),"\n",(0,i.jsx)(r.li,{children:"Optimized for quality (as little triangles as possible for a given error)."}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>l});var i=n(96540);const s={},t=i.createContext(s);function d(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);