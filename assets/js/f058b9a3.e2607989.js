"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1107],{73656:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=n(85893),o=n(11151);const s={},t="encode",c={id:"modules/core/api-reference/encode",title:"encode",description:"Encodes data using the provided writer.",source:"@site/../docs/modules/core/api-reference/encode.md",sourceDirName:"modules/core/api-reference",slug:"/modules/core/api-reference/encode",permalink:"/docs/modules/core/api-reference/encode",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/core/api-reference/encode.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"createDataSource \ud83d\udea7",permalink:"/docs/modules/core/api-reference/create-data-source"},next:{title:"save",permalink:"/docs/modules/core/api-reference/save"}},d={},l=[];function a(e){const r={code:"code",em:"em",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"encode",children:"encode"}),"\n",(0,i.jsxs)(r.p,{children:["Encodes data using the provided ",(0,i.jsx)(r.em,{children:"writer"}),"."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:"encode(fileData: ArrayBuffer | string, writer: Writer, options: WriterOptions, url?: string): Promise<unknown>\n"})}),"\n",(0,i.jsx)(r.p,{children:"Encodes data asynchronously using the provided writer."}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"data"})," - loaded data, either in binary or text format."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"writer"})," - can be a single writer or an array of writers."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"options"})," - optional, options for the writer (see documentation of the specific writer)."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"url"})," - optional, assists in the autoselection of a writer if multiple writers are supplied to ",(0,i.jsx)(r.code,{children:"writer"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"options.log"}),"=",(0,i.jsx)(r.code,{children:"console"})," Any object with methods ",(0,i.jsx)(r.code,{children:"log"}),", ",(0,i.jsx)(r.code,{children:"info"}),", ",(0,i.jsx)(r.code,{children:"warn"})," and ",(0,i.jsx)(r.code,{children:"error"}),". By default set to ",(0,i.jsx)(r.code,{children:"console"}),". Setting log to ",(0,i.jsx)(r.code,{children:"null"})," will turn off logging."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-typescript",children:"encodeSync(fileData: ArrayBuffer | string, writer: Writer, options?: WriterOptions,  rl?: string): unknown\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Encodes data synchronously using the provided writer, if possible. If not, returns ",(0,i.jsx)(r.code,{children:"null"}),", in which case asynchronous loading is required."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"data"})," - loaded data, either in binary or text format."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"writer"})," - can be a single writer or an array of writers."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"options"})," - optional, options for the writer (see documentation of the specific writer)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"url"})," - optional, assists in the autoselection of a writer if multiple writers are supplied to ",(0,i.jsx)(r.code,{children:"writer"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,r,n)=>{n.d(r,{Z:()=>c,a:()=>t});var i=n(67294);const o={},s=i.createContext(o);function t(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);