/*! For license information please see 2437.637e2f74.js.LICENSE.txt */
"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[2437],{79648:(e,t,n)=>{n.d(t,{A:()=>fe});var i=n(25337),o=n(59452),s=n(3459),r=n(9350),a=n(45800),l=n(10688),c=n(84175),u=n(43349);const h={name:"pbr",vs:"uniform mat4 u_MVPMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\nout vec3 pbr_vPosition;\nout vec2 pbr_vUV;\n#ifdef HAS_NORMALS\n# ifdef HAS_TANGENTS\nout mat3 pbr_vTBN;\n# else\nout vec3 pbr_vNormal;\n# endif\n#endif\nvoid pbr_setPositionNormalTangentUV(vec4 position, vec4 normal, vec4 tangent, vec2 uv)\n{\nvec4 pos = u_ModelMatrix * position;\npbr_vPosition = vec3(pos.xyz) / pos.w;\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nvec3 normalW = normalize(vec3(u_NormalMatrix * vec4(normal.xyz, 0.0)));\nvec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(tangent.xyz, 0.0)));\nvec3 bitangentW = cross(normalW, tangentW) * tangent.w;\npbr_vTBN = mat3(tangentW, bitangentW, normalW);\n#else\npbr_vNormal = normalize(vec3(u_ModelMatrix * vec4(normal.xyz, 0.0)));\n#endif\n#endif\n#ifdef HAS_UV\npbr_vUV = uv;\n#else\npbr_vUV = vec2(0.,0.);\n#endif\n}\n",fs:"precision highp float;\nuniform bool pbr_uUnlit;\n#ifdef USE_IBL\nuniform samplerCube u_DiffuseEnvSampler;\nuniform samplerCube u_SpecularEnvSampler;\nuniform sampler2D u_brdfLUT;\nuniform vec2 u_ScaleIBLAmbient;\n#endif\n#ifdef HAS_BASECOLORMAP\nuniform sampler2D u_BaseColorSampler;\n#endif\n#ifdef HAS_NORMALMAP\nuniform sampler2D u_NormalSampler;\nuniform float u_NormalScale;\n#endif\n#ifdef HAS_EMISSIVEMAP\nuniform sampler2D u_EmissiveSampler;\nuniform vec3 u_EmissiveFactor;\n#endif\n#ifdef HAS_METALROUGHNESSMAP\nuniform sampler2D u_MetallicRoughnessSampler;\n#endif\n#ifdef HAS_OCCLUSIONMAP\nuniform sampler2D u_OcclusionSampler;\nuniform float u_OcclusionStrength;\n#endif\n#ifdef ALPHA_CUTOFF\nuniform float u_AlphaCutoff;\n#endif\nuniform vec2 u_MetallicRoughnessValues;\nuniform vec4 u_BaseColorFactor;\nuniform vec3 u_Camera;\n#ifdef PBR_DEBUG\nuniform vec4 u_ScaleDiffBaseMR;\nuniform vec4 u_ScaleFGDSpec;\n#endif\nin vec3 pbr_vPosition;\nin vec2 pbr_vUV;\n#ifdef HAS_NORMALS\n#ifdef HAS_TANGENTS\nin mat3 pbr_vTBN;\n#else\nin vec3 pbr_vNormal;\n#endif\n#endif\nstruct PBRInfo\n{\nfloat NdotL;\nfloat NdotV;\nfloat NdotH;\nfloat LdotH;\nfloat VdotH;\nfloat perceptualRoughness;\nfloat metalness;\nvec3 reflectance0;\nvec3 reflectance90;\nfloat alphaRoughness;\nvec3 diffuseColor;\nvec3 specularColor;\nvec3 n;\nvec3 v;\n};\nconst float M_PI = 3.141592653589793;\nconst float c_MinRoughness = 0.04;\nvec4 SRGBtoLINEAR(vec4 srgbIn)\n{\n#ifdef MANUAL_SRGB\n#ifdef SRGB_FAST_APPROXIMATION\nvec3 linOut = pow(srgbIn.xyz,vec3(2.2));\n#else\nvec3 bLess = step(vec3(0.04045),srgbIn.xyz);\nvec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\n#endif\nreturn vec4(linOut,srgbIn.w);;\n#else\nreturn srgbIn;\n#endif\n}\nvec3 getNormal()\n{\n#ifndef HAS_TANGENTS\nvec3 pos_dx = dFdx(pbr_vPosition);\nvec3 pos_dy = dFdy(pbr_vPosition);\nvec3 tex_dx = dFdx(vec3(pbr_vUV, 0.0));\nvec3 tex_dy = dFdy(vec3(pbr_vUV, 0.0));\nvec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\n#ifdef HAS_NORMALS\nvec3 ng = normalize(pbr_vNormal);\n#else\nvec3 ng = cross(pos_dx, pos_dy);\n#endif\nt = normalize(t - ng * dot(ng, t));\nvec3 b = normalize(cross(ng, t));\nmat3 tbn = mat3(t, b, ng);\n#else\nmat3 tbn = pbr_vTBN;\n#endif\n#ifdef HAS_NORMALMAP\nvec3 n = texture(u_NormalSampler, pbr_vUV).rgb;\nn = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\n#else\nvec3 n = normalize(tbn[2].xyz);\n#endif\nreturn n;\n}\n#ifdef USE_IBL\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\n{\nfloat mipCount = 9.0;\nfloat lod = (pbrInputs.perceptualRoughness * mipCount);\nvec3 brdf = SRGBtoLINEAR(texture(u_brdfLUT,\nvec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\nvec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\n#ifdef USE_TEX_LOD\nvec3 specularLight = SRGBtoLINEAR(textureCubeLod(u_SpecularEnvSampler, reflection, lod)).rgb;\n#else\nvec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\n#endif\nvec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\nvec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\ndiffuse *= u_ScaleIBLAmbient.x;\nspecular *= u_ScaleIBLAmbient.y;\nreturn diffuse + specular;\n}\n#endif\nvec3 diffuse(PBRInfo pbrInputs)\n{\nreturn pbrInputs.diffuseColor / M_PI;\n}\nvec3 specularReflection(PBRInfo pbrInputs)\n{\nreturn pbrInputs.reflectance0 +\n(pbrInputs.reflectance90 - pbrInputs.reflectance0) *\npow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\n}\nfloat geometricOcclusion(PBRInfo pbrInputs)\n{\nfloat NdotL = pbrInputs.NdotL;\nfloat NdotV = pbrInputs.NdotV;\nfloat r = pbrInputs.alphaRoughness;\nfloat attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\nfloat attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\nreturn attenuationL * attenuationV;\n}\nfloat microfacetDistribution(PBRInfo pbrInputs)\n{\nfloat roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\nfloat f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\nreturn roughnessSq / (M_PI * f * f);\n}\nvoid PBRInfo_setAmbientLight(inout PBRInfo pbrInputs) {\npbrInputs.NdotL = 1.0;\npbrInputs.NdotH = 0.0;\npbrInputs.LdotH = 0.0;\npbrInputs.VdotH = 1.0;\n}\nvoid PBRInfo_setDirectionalLight(inout PBRInfo pbrInputs, vec3 lightDirection) {\nvec3 n = pbrInputs.n;\nvec3 v = pbrInputs.v;\nvec3 l = normalize(lightDirection);\nvec3 h = normalize(l+v);\npbrInputs.NdotL = clamp(dot(n, l), 0.001, 1.0);\npbrInputs.NdotH = clamp(dot(n, h), 0.0, 1.0);\npbrInputs.LdotH = clamp(dot(l, h), 0.0, 1.0);\npbrInputs.VdotH = clamp(dot(v, h), 0.0, 1.0);\n}\nvoid PBRInfo_setPointLight(inout PBRInfo pbrInputs, PointLight pointLight) {\nvec3 light_direction = normalize(pointLight.position - pbr_vPosition);\nPBRInfo_setDirectionalLight(pbrInputs, light_direction);\n}\nvec3 calculateFinalColor(PBRInfo pbrInputs, vec3 lightColor) {\nvec3 F = specularReflection(pbrInputs);\nfloat G = geometricOcclusion(pbrInputs);\nfloat D = microfacetDistribution(pbrInputs);\nvec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\nvec3 specContrib = F * G * D / (4.0 * pbrInputs.NdotL * pbrInputs.NdotV);\nreturn pbrInputs.NdotL * lightColor * (diffuseContrib + specContrib);\n}\nvec4 pbr_filterColor(vec4 colorUnused)\n{\n#ifdef HAS_BASECOLORMAP\nvec4 baseColor = SRGBtoLINEAR(texture(u_BaseColorSampler, pbr_vUV)) * u_BaseColorFactor;\n#else\nvec4 baseColor = u_BaseColorFactor;\n#endif\n#ifdef ALPHA_CUTOFF\nif (baseColor.a < u_AlphaCutoff) {\ndiscard;\n}\n#endif\nvec3 color = vec3(0, 0, 0);\nif(pbr_uUnlit){\ncolor.rgb = baseColor.rgb;\n}\nelse{\nfloat perceptualRoughness = u_MetallicRoughnessValues.y;\nfloat metallic = u_MetallicRoughnessValues.x;\n#ifdef HAS_METALROUGHNESSMAP\nvec4 mrSample = texture(u_MetallicRoughnessSampler, pbr_vUV);\nperceptualRoughness = mrSample.g * perceptualRoughness;\nmetallic = mrSample.b * metallic;\n#endif\nperceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\nmetallic = clamp(metallic, 0.0, 1.0);\nfloat alphaRoughness = perceptualRoughness * perceptualRoughness;\nvec3 f0 = vec3(0.04);\nvec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\ndiffuseColor *= 1.0 - metallic;\nvec3 specularColor = mix(f0, baseColor.rgb, metallic);\nfloat reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\nfloat reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\nvec3 specularEnvironmentR0 = specularColor.rgb;\nvec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\nvec3 n = getNormal();\nvec3 v = normalize(u_Camera - pbr_vPosition);\nfloat NdotV = clamp(abs(dot(n, v)), 0.001, 1.0);\nvec3 reflection = -normalize(reflect(v, n));\nPBRInfo pbrInputs = PBRInfo(\n0.0,\nNdotV,\n0.0,\n0.0,\n0.0,\nperceptualRoughness,\nmetallic,\nspecularEnvironmentR0,\nspecularEnvironmentR90,\nalphaRoughness,\ndiffuseColor,\nspecularColor,\nn,\nv\n);\n#ifdef USE_LIGHTS\nPBRInfo_setAmbientLight(pbrInputs);\ncolor += calculateFinalColor(pbrInputs, lighting_uAmbientLight.color);\nfor(int i = 0; i < lighting_uDirectionalLightCount; i++) {\nif (i < lighting_uDirectionalLightCount) {\nPBRInfo_setDirectionalLight(pbrInputs, lighting_uDirectionalLight[i].direction);\ncolor += calculateFinalColor(pbrInputs, lighting_uDirectionalLight[i].color);\n}\n}\nfor(int i = 0; i < lighting_uPointLightCount; i++) {\nif (i < lighting_uPointLightCount) {\nPBRInfo_setPointLight(pbrInputs, lighting_uPointLight[i]);\nfloat attenuation = getPointLightAttenuation(lighting_uPointLight[i], distance(lighting_uPointLight[i].position, pbr_vPosition));\ncolor += calculateFinalColor(pbrInputs, lighting_uPointLight[i].color / attenuation);\n}\n}\n#endif\n#ifdef USE_IBL\ncolor += getIBLContribution(pbrInputs, n, reflection);\n#endif\n#ifdef HAS_OCCLUSIONMAP\nfloat ao = texture(u_OcclusionSampler, pbr_vUV).r;\ncolor = mix(color, color * ao, u_OcclusionStrength);\n#endif\n#ifdef HAS_EMISSIVEMAP\nvec3 emissive = SRGBtoLINEAR(texture(u_EmissiveSampler, pbr_vUV)).rgb * u_EmissiveFactor;\ncolor += emissive;\n#endif\n#ifdef PBR_DEBUG\ncolor = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\ncolor = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\ncolor = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\n#endif\n}\nreturn vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\n}\n",defines:{LIGHTING_FRAGMENT:1},dependencies:[n(17542)._]};var d=n(48264),p=n(80979),f=n(31886),m=n(87597);class g{id;matrix=new f.k;display=!0;position=new m.P;rotation=new m.P;scale=new m.P(1,1,1);userData={};props={};constructor(e={}){const{id:t}=e;this.id=t||(0,d.L)(this.constructor.name),this._setScenegraphNodeProps(e)}getBounds(){return null}destroy(){}delete(){this.destroy()}setProps(e){return this._setScenegraphNodeProps(e),this}toString(){return`{type: ScenegraphNode, id: ${this.id})}`}setPosition(e){return(0,p.v)(3===e.length,"setPosition requires vector argument"),this.position=e,this}setRotation(e){return(0,p.v)(3===e.length,"setRotation requires vector argument"),this.rotation=e,this}setScale(e){return(0,p.v)(3===e.length,"setScale requires vector argument"),this.scale=e,this}setMatrix(e,t=!0){t?this.matrix.copy(e):this.matrix=e}setMatrixComponents(e){const{position:t,rotation:n,scale:i,update:o=!0}=e;return t&&this.setPosition(t),n&&this.setRotation(n),i&&this.setScale(i),o&&this.updateMatrix(),this}updateMatrix(){const e=this.position,t=this.rotation,n=this.scale;return this.matrix.identity(),this.matrix.translate(e),this.matrix.rotateXYZ(t),this.matrix.scale(n),this}update(e={}){const{position:t,rotation:n,scale:i}=e;return t&&this.setPosition(t),n&&this.setRotation(n),i&&this.setScale(i),this.updateMatrix(),this}getCoordinateUniforms(e,t){(0,p.v)(e),t=t||this.matrix;const n=new f.k(e).multiplyRight(t),i=n.invert(),o=i.transpose();return{viewMatrix:e,modelMatrix:t,objectMatrix:t,worldMatrix:n,worldInverseMatrix:i,worldInverseTransposeMatrix:o}}_setScenegraphNodeProps(e){"display"in e&&(this.display=e.display),"position"in e&&this.setPosition(e.position),"rotation"in e&&this.setRotation(e.rotation),"scale"in e&&this.setScale(e.scale),"matrix"in e&&this.setMatrix(e.matrix),Object.assign(this.props,e)}}var v=n(29651);class _ extends g{children;constructor(e={}){e=Array.isArray(e)?{children:e}:e;const{children:t=[]}=e;v.R.assert(t.every((e=>e instanceof g)),"every child must an instance of ScenegraphNode"),super(e),this.children=t}getBounds(){const e=[[1/0,1/0,1/0],[-1/0,-1/0,-1/0]];return this.traverse(((t,{worldMatrix:n})=>{const i=t.getBounds();if(!i)return;const[o,s]=i,r=new m.P(o).add(s).divide([2,2,2]);n.transformAsPoint(r,r);const a=new m.P(s).subtract(o).divide([2,2,2]);n.transformAsVector(a,a);for(let l=0;l<8;l++){const t=new m.P(1&l?-1:1,2&l?-1:1,4&l?-1:1).multiply(a).add(r);for(let n=0;n<3;n++)e[0][n]=Math.min(e[0][n],t[n]),e[1][n]=Math.max(e[1][n],t[n])}})),Number.isFinite(e[0][0])?e:null}destroy(){this.children.forEach((e=>e.destroy())),this.removeAll(),super.destroy()}add(...e){for(const t of e)Array.isArray(t)?this.add(...t):this.children.push(t);return this}remove(e){const t=this.children,n=t.indexOf(e);return n>-1&&t.splice(n,1),this}removeAll(){return this.children=[],this}traverse(e,{worldMatrix:t=new f.k}={}){const n=new f.k(t).multiplyRight(this.matrix);for(const i of this.children)i instanceof _?i.traverse(e,{worldMatrix:n}):e(i,{worldMatrix:n})}}class S extends g{model;bounds=null;managedResources;constructor(e){super(e),this.model=e.model,this.managedResources=e.managedResources||[],this.bounds=e.bounds||null,this.setProps(e)}getBounds(){return this.bounds}destroy(){this.model&&(this.model.destroy(),this.model=null),this.managedResources.forEach((e=>e.destroy())),this.managedResources=[]}draw(e){return this.model.draw(e)}}var y=n(11633);const b={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},M={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array};class x{name;startTime=0;playing=!0;speed=1;channels=[];constructor(e){Object.assign(this,e)}animate(e){if(!this.playing)return;const t=(e/1e3-this.startTime)*this.speed;this.channels.forEach((({sampler:e,target:n,path:i})=>{!function(e,{input:t,interpolation:n,output:i},o,s){const r=t[t.length-1],a=e%r,l=t.findIndex((e=>e>=a)),c=Math.max(0,l-1);if(!Array.isArray(o[s]))switch(s){case"translation":o[s]=[0,0,0];break;case"rotation":o[s]=[0,0,0,1];break;case"scale":o[s]=[1,1,1];break;default:v.R.warn(`Bad animation path ${s}`)()}(0,p.v)(o[s].length===i[c].length);const u=t[c],h=t[l];switch(n){case"STEP":!function(e,t,n){for(let i=0;i<n.length;i++)e[t][i]=n[i]}(o,s,i[c]);break;case"LINEAR":if(h>u){const e=(a-u)/(h-u);!function(e,t,n,i,o){if("rotation"===t){L.slerp({start:n,target:i,ratio:o});for(let n=0;n<L.length;n++)e[t][n]=L[n]}else for(let s=0;s<n.length;s++)e[t][s]=o*i[s]+(1-o)*n[s]}(o,s,i[c],i[l],e)}break;case"CUBICSPLINE":if(h>u){const e=(a-u)/(h-u),t=h-u;!function(e,t,{p0:n,outTangent0:i,inTangent1:o,p1:s,tDiff:r,ratio:a}){for(let l=0;l<e[t].length;l++){const c=i[l]*r,u=o[l]*r;e[t][l]=(2*Math.pow(a,3)-3*Math.pow(a,2)+1)*n[l]+(Math.pow(a,3)-2*Math.pow(a,2)+a)*c+(-2*Math.pow(a,3)+3*Math.pow(a,2))*s[l]+(Math.pow(a,3)-Math.pow(a,2))*u}}(o,s,{p0:i[3*c+1],outTangent0:i[3*c+2],inTangent1:i[3*l+0],p1:i[3*l+1],tDiff:t,ratio:e})}break;default:v.R.warn(`Interpolation ${n} not supported`)()}}(t,e,n,i),function(e,t){t.matrix.identity(),e.translation&&t.matrix.translate(e.translation);if(e.rotation){const n=P.fromQuaternion(e.rotation);t.matrix.multiplyRight(n)}e.scale&&t.matrix.scale(e.scale)}(n,n._node)}))}}class C{animations;constructor(e){this.animations=e.animations.map(((t,n)=>{const i=t.name||`Animation-${n}`,o=t.samplers.map((({input:t,interpolation:n="LINEAR",output:i})=>({input:A(e.accessors[t]),interpolation:n,output:A(e.accessors[i])}))),s=t.channels.map((({sampler:t,target:n})=>({sampler:o[t],target:e.nodes[n.node],path:n.path})));return new x({name:i,channels:s})}))}animate(e){this.setTime(e)}setTime(e){this.animations.forEach((t=>t.animate(e)))}getAnimations(){return this.animations}}function A(e){if(!e._animation){const t=M[e.componentType],n=b[e.type],i=n*e.count,{buffer:o,byteOffset:s}=e.bufferView.data,r=new t(o,s+(e.byteOffset||0),i);if(1===n)e._animation=Array.from(r);else{const t=[];for(let e=0;e<r.length;e+=n)t.push(Array.from(r.slice(e,e+n)));e._animation=t}}return e._animation}const P=new f.k;const L=new y.P;var R,E=n(12530);function w(e,t,n,i){const o={defines:{MANUAL_SRGB:1,SRGB_FAST_APPROXIMATION:1},bindings:{},uniforms:{u_Camera:[0,0,0],u_MetallicRoughnessValues:[1,1]},parameters:{},glParameters:{},generatedTextures:[]};o.defines.USE_TEX_LOD=1;const{imageBasedLightingEnvironment:s}=i;return s&&(o.bindings.u_DiffuseEnvSampler=s.diffuseEnvSampler,o.bindings.u_SpecularEnvSampler=s.specularEnvSampler,o.bindings.u_brdfLUT=s.brdfLutTexture,o.uniforms.u_ScaleIBLAmbient=[1,1]),i?.pbrDebug&&(o.defines.PBR_DEBUG=1,o.uniforms.u_ScaleDiffBaseMR=[0,0,0,0],o.uniforms.u_ScaleFGDSpec=[0,0,0,0]),n.NORMAL&&(o.defines.HAS_NORMALS=1),n.TANGENT&&i?.useTangents&&(o.defines.HAS_TANGENTS=1),n.TEXCOORD_0&&(o.defines.HAS_UV=1),i?.imageBasedLightingEnvironment&&(o.defines.USE_IBL=1),i?.lights&&(o.defines.USE_LIGHTS=1),t&&function(e,t,n){n.uniforms.pbr_uUnlit=Boolean(t.unlit),t.pbrMetallicRoughness&&function(e,t,n){t.baseColorTexture&&N(e,t.baseColorTexture,"u_BaseColorSampler","HAS_BASECOLORMAP",n);n.uniforms.u_BaseColorFactor=t.baseColorFactor||[1,1,1,1],t.metallicRoughnessTexture&&N(e,t.metallicRoughnessTexture,"u_MetallicRoughnessSampler","HAS_METALROUGHNESSMAP",n);const{metallicFactor:i=1,roughnessFactor:o=1}=t;n.uniforms.u_MetallicRoughnessValues=[i,o]}(e,t.pbrMetallicRoughness,n);if(t.normalTexture){N(e,t.normalTexture,"u_NormalSampler","HAS_NORMALMAP",n);const{scale:i=1}=t.normalTexture;n.uniforms.u_NormalScale=i}if(t.occlusionTexture){N(e,t.occlusionTexture,"u_OcclusionSampler","HAS_OCCLUSIONMAP",n);const{strength:i=1}=t.occlusionTexture;n.uniforms.u_OcclusionStrength=i}t.emissiveTexture&&(N(e,t.emissiveTexture,"u_EmissiveSampler","HAS_EMISSIVEMAP",n),n.uniforms.u_EmissiveFactor=t.emissiveFactor||[0,0,0]);switch(t.alphaMode){case"MASK":const{alphaCutoff:e=.5}=t;n.defines.ALPHA_CUTOFF=1,n.uniforms.u_AlphaCutoff=e;break;case"BLEND":v.R.warn("glTF BLEND alphaMode might not work well because it requires mesh sorting")(),n.parameters.blendColorOperation="add",n.parameters.blendColorSrcFactor="src-alpha",n.parameters.blendColorDstFactor="one-minus-src-alpha",n.parameters.blendAlphaOperation="add",n.parameters.blendAlphaSrcFactor="one",n.parameters.blendAlphaDstFactor="one-minus-src-alpha",n.glParameters.blend=!0,n.glParameters.blendEquation=R.FUNC_ADD,n.glParameters.blendFunc=[R.SRC_ALPHA,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA]}}(e,t,o),o}function N(e,t,n,i=null,o){const s=t?.texture?.sampler?.parameters||{},r=t.texture.source.image;let a,l={};r.compressed?(a=r,l={[R.TEXTURE_MIN_FILTER]:r.data.length>1?R.LINEAR_MIPMAP_NEAREST:R.LINEAR}):a={data:r};const c=e.createTexture({id:t.uniformName||t.id,parameters:{...s,...l},pixelStore:{[R.UNPACK_FLIP_Y_WEBGL]:!1},...a});o.bindings[n]=c,i&&(o.defines[i]=1),o.generatedTextures.push(c)}!function(e){e[e.FUNC_ADD=32774]="FUNC_ADD",e[e.ONE=1]="ONE",e[e.SRC_ALPHA=770]="SRC_ALPHA",e[e.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",e[e.TEXTURE_MIN_FILTER=10241]="TEXTURE_MIN_FILTER",e[e.LINEAR=9729]="LINEAR",e[e.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",e[e.UNPACK_FLIP_Y_WEBGL=37440]="UNPACK_FLIP_Y_WEBGL"}(R||(R={}));function I(e,t){return`#version 300 es\n${t}`}const T={modelOptions:{},pbrDebug:!1,imageBasedLightingEnvironment:null,lights:!0,useTangents:!1};class O{device;options;gltf;constructor(e,t={}){this.device=e,this.options={...T,...t}}instantiate(e){this.gltf=e;return(e.scenes||[]).map((e=>this.createScene(e)))}createAnimator(){return Array.isArray(this.gltf.animations)?new C(this.gltf):null}createScene(e){const t=(e.nodes||[]).map((e=>this.createNode(e)));return new _({id:e.name||e.id,children:t})}createNode(e){if(!e._node){const t=(e.children||[]).map((e=>this.createNode(e)));e.mesh&&t.push(this.createMesh(e.mesh));const n=new _({id:e.name||e.id,children:t});if(e.matrix)n.setMatrix(e.matrix);else{if(n.matrix.identity(),e.translation&&n.matrix.translate(e.translation),e.rotation){const t=(new f.k).fromQuaternion(e.rotation);n.matrix.multiplyRight(t)}e.scale&&n.matrix.scale(e.scale)}e._node=n}return e._node}createMesh(e){if(!e._mesh){const t=(e.primitives||[]).map(((t,n)=>this.createPrimitive(t,n,e))),n=new _({id:e.name||e.id,children:t});e._mesh=n}return e._mesh}createPrimitive(e,t,n){const i=e.name||`${n.name||n.id}-primitive-${t}`,o=function(e){switch(e){case B.POINTS:return"point-list";case B.LINES:return"line-list";case B.LINE_STRIP:return"line-strip";case B.LINE_LOOP:return"line-loop-webgl";case B.TRIANGLES:return"triangle-list";case B.TRIANGLE_STRIP:return"triangle-strip";case B.TRIANGLE_FAN:return"triangle-fan-webgl";default:throw new Error(e)}}(e.mode||4),s=e.indices?e.indices.count:this.getVertexCount(e.attributes),r=function(e,t){const{id:n,geometry:i,material:o,vertexCount:s,materialOptions:r,modelOptions:a}=t,l=w(e,o,i.attributes,r);v.R.info(4,"createGLTFModel defines: ",l.defines)();const c={id:n,geometry:i,topology:i.topology,vertexCount:s,modules:[h],vs:I(0,"\n#pragma vscode_glsllint_stage: vert\n#if (__VERSION__ < 300)\n  #define _attr attribute\n#else\n  #define _attr in\n#endif\n\n  // _attr vec4 POSITION;\n  _attr vec4 positions;\n\n  #ifdef HAS_NORMALS\n    // _attr vec4 NORMAL;\n    _attr vec4 normals;\n  #endif\n\n  #ifdef HAS_TANGENTS\n    _attr vec4 TANGENT;\n  #endif\n\n  #ifdef HAS_UV\n    // _attr vec2 TEXCOORD_0;\n    _attr vec2 texCoords;\n  #endif\n\n  void main(void) {\n    vec4 _NORMAL = vec4(0.);\n    vec4 _TANGENT = vec4(0.);\n    vec2 _TEXCOORD_0 = vec2(0.);\n\n    #ifdef HAS_NORMALS\n      _NORMAL = normals;\n    #endif\n\n    #ifdef HAS_TANGENTS\n      _TANGENT = TANGENT;\n    #endif\n\n    #ifdef HAS_UV\n      _TEXCOORD_0 = texCoords;\n    #endif\n\n    pbr_setPositionNormalTangentUV(positions, _NORMAL, _TANGENT, _TEXCOORD_0);\n    gl_Position = u_MVPMatrix * positions;\n  }\n"),fs:I(0,"\n#pragma vscode_glsllint_stage: frag\n#if (__VERSION__ < 300)\n  #define fragmentColor gl_FragColor\n#else\n  out vec4 fragmentColor;\n#endif\n\n  void main(void) {\n    vec3 pos = pbr_vPosition;\n    fragmentColor = pbr_filterColor(vec4(1.0));\n  }\n"),...a,bindings:{...l.bindings,...a.bindings},defines:{...l.defines,...a.defines},parameters:{depthWriteEnabled:!0,depthCompare:"less",depthFormat:"depth24plus",cullMode:"back",...l.parameters,...a.parameters},uniforms:{...l.uniforms,...a.uniforms}},u=new E.K(e,c);return new S({managedResources:[],model:u})}(this.device,{id:i,geometry:this.createGeometry(i,e,o),material:e.material,materialOptions:this.options,modelOptions:this.options.modelOptions,vertexCount:s});return r.bounds=[e.attributes.POSITION.min,e.attributes.POSITION.max],r}getVertexCount(e){throw new Error("getVertexCount not implemented")}createGeometry(e,t,n){const o={};for(const[i,s]of Object.entries(t.attributes)){const{components:e,size:t,value:n}=s;o[i]={size:t??e,value:n}}return new i.V({id:e,topology:n,indices:t.indices.value,attributes:o})}createBuffer(e,t){e.bufferView||(e.bufferView={});const{bufferView:n}=e;return n.lumaBuffers||(n.lumaBuffers={}),n.lumaBuffers[t]||(n.lumaBuffers[t]=this.device.createBuffer({id:`from-${n.id}`,data:n.data||e.value})),n.lumaBuffers[t]}createSampler(e){return e}needsPOT(){return!1}}var B;!function(e){e[e.POINTS=0]="POINTS",e[e.LINES=1]="LINES",e[e.LINE_LOOP=2]="LINE_LOOP",e[e.LINE_STRIP=3]="LINE_STRIP",e[e.TRIANGLES=4]="TRIANGLES",e[e.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",e[e.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(B||(B={}));var z=n(44818),U=n(24714);async function F(e){const t=[];return e.scenes.forEach((e=>{e.traverse((e=>{Object.values(e.model.uniforms).forEach((e=>{!1===e.loaded&&t.push(e)}))}))})),await async function(e){for(;e();)await new Promise((e=>requestAnimationFrame(e)))}((()=>t.some((e=>!e.loaded))))}var D=n(53439);const V=Math.PI/180,H=new Float32Array(16),G=new Float32Array(12);function k(e,t,n){const i=t[0]*V,o=t[1]*V,s=t[2]*V,r=Math.sin(s),a=Math.sin(i),l=Math.sin(o),c=Math.cos(s),u=Math.cos(i),h=Math.cos(o),d=n[0],p=n[1],f=n[2];e[0]=d*h*u,e[1]=d*l*u,e[2]=d*-a,e[3]=p*(-l*c+h*a*r),e[4]=p*(h*c+l*a*r),e[5]=p*u*r,e[6]=f*(l*r+h*a*c),e[7]=f*(-h*r+l*a*c),e[8]=f*u*c}function q(e){return e[0]=e[0],e[1]=e[1],e[2]=e[2],e[3]=e[4],e[4]=e[5],e[5]=e[6],e[6]=e[8],e[7]=e[9],e[8]=e[10],e[9]=e[12],e[10]=e[13],e[11]=e[14],e.subarray(0,12)}const j={size:12,accessor:["getOrientation","getScale","getTranslation","getTransformMatrix"],shaderAttributes:{instanceModelMatrixCol0:{size:3,elementOffset:0},instanceModelMatrixCol1:{size:3,elementOffset:3},instanceModelMatrixCol2:{size:3,elementOffset:6},instanceTranslation:{size:3,elementOffset:9}},update(e,{startRow:t,endRow:n}){const{data:i,getOrientation:o,getScale:s,getTranslation:r,getTransformMatrix:a}=this.props,l=Array.isArray(a),c=l&&16===a.length,u=Array.isArray(s),h=Array.isArray(o),d=Array.isArray(r),p=c||!l&&Boolean(a(i[0]));e.constant=p?c:h&&u&&d;const f=e.value;if(e.constant){let t;if(p)H.set(a),t=q(H);else{t=G;k(t,o,s),t.set(r,9)}e.value=new Float32Array(t)}else{let l=t*e.size;const{iterable:m,objectInfo:g}=(0,D.X)(i,t,n);for(const e of m){let t;if(g.index++,p)H.set(c?a:a(e,g)),t=q(H);else{t=G;k(t,h?o:o(e,g),u?s:s(e,g)),t.set(d?r:r(e,g),9)}f[l++]=t[0],f[l++]=t[1],f[l++]=t[2],f[l++]=t[3],f[l++]=t[4],f[l++]=t[5],f[l++]=t[6],f[l++]=t[7],f[l++]=t[8],f[l++]=t[9],f[l++]=t[10],f[l++]=t[11]}}}};function K(e,t){return t===r.rf.CARTESIAN||t===r.rf.METER_OFFSETS||t===r.rf.DEFAULT&&!e.isGeospatial}const X=[255,255,255,255],Z={scenegraph:{type:"object",value:null,async:!0},getScene:e=>e&&e.scenes?"object"==typeof e.scene?e.scene:e.scenes[e.scene||0]:e,getAnimator:e=>e&&e.animator,_animations:null,sizeScale:{type:"number",value:1,min:0},sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:X},_lighting:"flat",_imageBasedLightingEnvironment:void 0,getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]},loaders:[z.B]};class W extends l.A{getShaders(){const e=[c.A,u.A];return"pbr"===this.props._lighting&&e.push(h),super.getShaders({vs:"#version 300 es\n#define SHADER_NAME scenegraph-layer-vertex-shader\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nin vec3 instanceTranslation;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform mat4 sceneModelMatrix;\nuniform bool composeModelMatrix;\nin vec3 positions;\n#ifdef HAS_UV\nin vec2 texCoords;\n#endif\n#ifdef MODULE_PBR\n#ifdef HAS_NORMALS\nin vec3 normals;\n#endif\n#endif\nout vec4 vColor;\n#ifndef MODULE_PBR\n#ifdef HAS_UV\nout vec2 vTEXCOORD_0;\n#endif\n#endif\nvoid main(void) {\n#if defined(HAS_UV) && !defined(MODULE_PBR)\nvTEXCOORD_0 = texCoords;\ngeometry.uv = texCoords;\n#endif\ngeometry.worldPosition = instancePositions;\ngeometry.pickingColor = instancePickingColors;\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvec3 normal = vec3(0.0, 0.0, 1.0);\n#ifdef MODULE_PBR\n#ifdef HAS_NORMALS\nnormal = instanceModelMatrix * (sceneModelMatrix * vec4(normals, 0.0)).xyz;\n#endif\n#endif\nfloat originalSize = project_size_to_pixel(sizeScale);\nfloat clampedSize = clamp(originalSize, sizeMinPixels, sizeMaxPixels);\nvec3 pos = (instanceModelMatrix * (sceneModelMatrix * vec4(positions, 1.0)).xyz) * sizeScale * (clampedSize / originalSize) + instanceTranslation;\nif(composeModelMatrix) {\nDECKGL_FILTER_SIZE(pos, geometry);\ngeometry.normal = project_normal(normal);\ngeometry.worldPosition += pos;\ngl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n}\nelse {\npos = project_size(pos);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, geometry.position);\ngeometry.normal = project_normal(normal);\n}\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n#ifdef MODULE_PBR\npbr_vPosition = geometry.position.xyz;\n#ifdef HAS_NORMALS\npbr_vNormal = geometry.normal;\n#endif\n#ifdef HAS_UV\npbr_vUV = texCoords;\n#else\npbr_vUV = vec2(0., 0.);\n#endif\ngeometry.uv = pbr_vUV;\n#endif\nvColor = instanceColors;\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME scenegraph-layer-fragment-shader\nuniform float opacity;\nin vec4 vColor;\nout vec4 fragColor;\n#ifndef MODULE_PBR\n#if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\nin vec2 vTEXCOORD_0;\nuniform sampler2D u_BaseColorSampler;\n#endif\n#endif\nvoid main(void) {\n#ifdef MODULE_PBR\nfragColor = vColor * pbr_filterColor(vec4(0));\ngeometry.uv = pbr_vUV;\n#else\n#if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\nfragColor = vColor * texture(u_BaseColorSampler, vTEXCOORD_0);\ngeometry.uv = vTEXCOORD_0;\n#else\nfragColor = vColor;\n#endif\n#endif\nfragColor.a *= opacity;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:e})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),accessor:"getPosition",transition:!0},instanceColors:{type:"unorm8",size:this.props.colorFormat.length,accessor:"getColor",defaultValue:X,transition:!0},instanceModelMatrix:j})}updateState(e){super.updateState(e);const{props:t,oldProps:n}=e;t.scenegraph!==n.scenegraph?this._updateScenegraph():t._animations!==n._animations&&this._applyAnimationsProp(this.state.animator,t._animations)}finalizeState(e){super.finalizeState(e),this.state.scenegraph?.destroy()}get isLoaded(){return Boolean(this.state?.scenegraph&&super.isLoaded)}_updateScenegraph(){const e=this.props,{device:t}=this.context;let n=null;if(e.scenegraph instanceof g)n={scenes:[e.scenegraph]};else if(e.scenegraph&&"object"==typeof e.scenegraph){const i=e.scenegraph,o=i.json?(0,U.R)(i):i,s=function(e,t,n){const i=new O(e,n);return{scenes:i.instantiate(t),animator:i.createAnimator()}}(t,o,this._getModelOptions());n={gltf:o,...s},F(s).then((()=>{this.setNeedsRedraw()})).catch((e=>{this.raiseError(e,"loading glTF")}))}const i={layer:this,device:this.context.device},o=e.getScene(n,i),r=e.getAnimator(n,i);if(o instanceof _){this.state.scenegraph?.destroy(),this._applyAnimationsProp(r,e._animations);const t=[];o.traverse((e=>{e instanceof S&&t.push(e.model)})),this.setState({scenegraph:o,animator:r,models:t}),this.getAttributeManager().invalidateAll()}else null!==o&&s.A.warn("invalid scenegraph:",o)()}_applyAnimationsProp(e,t){if(!e||!t)return;const n=e.getAnimations();Object.keys(t).sort().forEach((e=>{const i=t[e];if("*"===e)n.forEach((e=>{Object.assign(e,i)}));else if(Number.isFinite(Number(e))){const t=Number(e);t>=0&&t<n.length?Object.assign(n[t],i):s.A.warn(`animation ${e} not found`)()}else{const t=n.find((({name:t})=>t===e));t?Object.assign(t,i):s.A.warn(`animation ${e} not found`)()}}))}_getModelOptions(){const{_imageBasedLightingEnvironment:e}=this.props;let t;return e&&(t="function"==typeof e?e({gl:this.context.gl,layer:this}):e),{imageBasedLightingEnvironment:t,modelOptions:{id:this.props.id,isInstanced:!0,bufferLayout:this.getAttributeManager().getBufferLayouts(),...this.getShaders()},useTangents:!1}}draw({context:e}){if(!this.state.scenegraph)return;this.props._animations&&this.state.animator&&(this.state.animator.animate(e.timeline.getTime()),this.setNeedsRedraw());const{viewport:t,renderPass:n}=this.context,{sizeScale:i,sizeMinPixels:o,sizeMaxPixels:s,opacity:r,coordinateSystem:a}=this.props,l=this.getNumInstances();this.state.scenegraph.traverse(((e,{worldMatrix:c})=>{if(e instanceof S){const{model:u}=e;u.setInstanceCount(l),u.setUniforms({sizeScale:i,opacity:r,sizeMinPixels:o,sizeMaxPixels:s,composeModelMatrix:K(t,a),sceneModelMatrix:c,u_Camera:u.uniforms.project_uCameraPosition}),u.draw(n)}}))}}W.defaultProps=Z,W.layerName="ScenegraphLayer";const $=W;var Y=n(27586),Q=n(80698);var J=n(35644);function ee(e){const t=e.positions||e.POSITION;s.A.assert(t,'no "postions" or "POSITION" attribute in mesh');const n=t.value.length/t.size;let i=e.COLOR_0||e.colors;i||(i={size:3,value:new Float32Array(3*n).fill(1)});let o=e.NORMAL||e.normals;o||(o={size:3,value:new Float32Array(3*n).fill(0)});let r=e.TEXCOORD_0||e.texCoords;return r||(r={size:2,value:new Float32Array(2*n).fill(0)}),{positions:t,colors:i,normals:o,texCoords:r}}function te(e){return e instanceof i.V?(e.attributes=ee(e.attributes),e):e.attributes?new i.V({...e,topology:"triangle-list",attributes:ee(e.attributes)}):new i.V({topology:"triangle-list",attributes:ee(e)})}const ne={mesh:{type:"object",value:null,async:!0},texture:{type:"image",value:null,async:!0},sizeScale:{type:"number",value:1,min:0},_instanced:!0,wireframe:!1,material:!0,getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:[0,0,0,255]},getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]},textureParameters:{type:"object",ignore:!0,value:null}};class ie extends l.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\nuniform float sizeScale;\nuniform bool composeModelMatrix;\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nin vec3 instanceTranslation;\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = texCoords;\ngeometry.pickingColor = instancePickingColors;\nvTexCoord = texCoords;\ncameraPosition = project_uCameraPosition;\nvColor = vec4(colors * instanceColors.rgb, instanceColors.a);\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvec3 pos = (instanceModelMatrix * positions) * sizeScale + instanceTranslation;\nif (composeModelMatrix) {\nDECKGL_FILTER_SIZE(pos, geometry);\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\ngeometry.worldPosition += pos;\ngl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\ngeometry.position = position_commonspace;\n}\nelse {\npos = project_size(pos);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\ngeometry.position = position_commonspace;\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\n}\ngeometry.normal = normals_commonspace;\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\nprecision highp float;\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = vTexCoord;\nvec3 normal;\nif (flatShading) {\nnormal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n} else {\nnormal = normals_commonspace;\n}\nvec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\nDECKGL_FILTER_COLOR(color, geometry);\nvec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\nfragColor = vec4(lightColor, color.a * opacity);\n}\n",modules:[c.A,Y.p,u.A]})}getBounds(){if(this.props._instanced)return super.getBounds();let e=this.state.positionBounds;if(e)return e;const{mesh:t}=this.props;if(!t)return null;if(e=t.header?.boundingBox,!e){const{attributes:n}=te(t);n.POSITION=n.POSITION||n.positions,e=(0,J.l)(n)}return this.state.positionBounds=e,e}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{transition:!0,type:"float64",fp64:this.use64bitPositions(),size:3,accessor:"getPosition"},instanceColors:{type:"unorm8",transition:!0,size:this.props.colorFormat.length,accessor:"getColor",defaultValue:[0,0,0,255]},instanceModelMatrix:j}),this.setState({emptyTexture:this.context.device.createTexture({data:new Uint8Array(4),width:1,height:1})})}updateState(e){super.updateState(e);const{props:t,oldProps:n,changeFlags:i}=e;if(t.mesh!==n.mesh||i.extensionsChanged){if(this.state.positionBounds=null,this.state.model?.destroy(),t.mesh){this.state.model=this.getModel(t.mesh);const e=t.mesh.attributes||t.mesh;this.setState({hasNormals:Boolean(e.NORMAL||e.normals)})}this.getAttributeManager().invalidateAll()}t.texture!==n.texture&&t.texture instanceof Q.g&&this.setTexture(t.texture),this.state.model&&this.state.model.setTopology(this.props.wireframe?"line-strip":"triangle-list")}finalizeState(e){super.finalizeState(e),this.state.emptyTexture.delete()}draw({uniforms:e}){const{model:t}=this.state;if(!t)return;const{viewport:n,renderPass:i}=this.context,{sizeScale:o,coordinateSystem:s,_instanced:r}=this.props;t.setUniforms(e),t.setUniforms({sizeScale:o,composeModelMatrix:!r||K(n,s),flatShading:!this.state.hasNormals}),t.draw(i)}get isLoaded(){return Boolean(this.state?.model&&super.isLoaded)}getModel(e){const t=new E.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:te(e),isInstanced:!0}),{texture:n}=this.props,{emptyTexture:i}=this.state;return t.setBindings({sampler:n||i}),t.setUniforms({hasTexture:Boolean(n)}),t}setTexture(e){const{emptyTexture:t,model:n}=this.state;n&&(n.setBindings({sampler:e||t}),n.setUniforms({hasTexture:Boolean(e)}))}}ie.defaultProps=ne,ie.layerName="SimpleMeshLayer";const oe=ie;class se extends oe{getShaders(){const e=super.getShaders();return e.modules.push(h),{...e,vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\nuniform float sizeScale;\nuniform bool composeModelMatrix;\nuniform bool pickFeatureIds;\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec4 uvRegions;\nin vec3 featureIdsPickingColors;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\nvec2 applyUVRegion(vec2 uv) {\n#ifdef HAS_UV_REGIONS\nreturn fract(uv) * (uvRegions.zw - uvRegions.xy) + uvRegions.xy;\n#else\nreturn uv;\n#endif\n}\nvoid main(void) {\nvec2 uv = applyUVRegion(texCoords);\ngeometry.uv = uv;\nif (pickFeatureIds) {\ngeometry.pickingColor = featureIdsPickingColors;\n} else {\ngeometry.pickingColor = instancePickingColors;\n}\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvTexCoord = uv;\ncameraPosition = project_uCameraPosition;\nvColor = vec4(colors * instanceColors.rgb, instanceColors.a);\nvec3 pos = (instanceModelMatrix * positions) * sizeScale;\nvec3 projectedPosition = project_position(positions);\nposition_commonspace = vec4(projectedPosition, 1.0);\ngl_Position = project_common_position_to_clipspace(position_commonspace);\ngeometry.position = position_commonspace;\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\ngeometry.normal = normals_commonspace;\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n#ifdef MODULE_PBR\npbr_vPosition = geometry.position.xyz;\n#ifdef HAS_NORMALS\npbr_vNormal = geometry.normal;\n#endif\n#ifdef HAS_UV\npbr_vUV = uv;\n#else\npbr_vUV = vec2(0., 0.);\n#endif\ngeometry.uv = pbr_vUV;\n#endif\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\nprecision highp float;\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\n#ifdef MODULE_PBR\nfragColor = vColor * pbr_filterColor(vec4(0));\ngeometry.uv = pbr_vUV;\nfragColor.a *= opacity;\n#else\ngeometry.uv = vTexCoord;\nvec3 normal;\nif (flatShading) {\nnormal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n} else {\nnormal = normals_commonspace;\n}\nvec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\nvec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\nfragColor = vec4(lightColor, color.a * opacity);\n#endif\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"}}initializeState(){const{featureIds:e}=this.props;super.initializeState();const t=this.getAttributeManager();e&&t.add({featureIdsPickingColors:{type:"uint8",size:3,noAlloc:!0,update:this.calculateFeatureIdsPickingColors}})}updateState(e){super.updateState(e);const{props:t,oldProps:n}=e;t.pbrMaterial!==n.pbrMaterial&&this.updatePbrMaterialUniforms(t.pbrMaterial)}draw(e){const{featureIds:t}=this.props;this.state.model&&(this.state.model.setUniforms({u_Camera:this.state.model.uniforms.project_uCameraPosition,pickFeatureIds:Boolean(t)}),super.draw(e))}getModel(e){const{id:t,pbrMaterial:n}=this.props,i=this.parseMaterial(n,e);this.setState({parsedPBRMaterial:i});const o=this.getShaders();!function(e){const t=e.positions||e.POSITION,n=t.value.length/t.size;e.COLOR_0||e.colors||(e.colors={size:4,value:new Uint8Array(4*n).fill(255),normalized:!0})}(e.attributes);return new E.K(this.context.device,{...this.getShaders(),id:t,geometry:e,bufferLayout:this.getAttributeManager().getBufferLayouts(),defines:{...o.defines,...i?.defines,HAS_UV_REGIONS:e.attributes.uvRegions?1:0},parameters:i?.parameters,isInstanced:!0})}updatePbrMaterialUniforms(e){const{model:t}=this.state;if(t){const{mesh:n}=this.props,i=this.parseMaterial(e,n);this.setState({parsedPBRMaterial:i}),t.setBindings(i.bindings),t.setUniforms(i.uniforms)}}parseMaterial(e,t){const n=Boolean(e.pbrMetallicRoughness&&e.pbrMetallicRoughness.baseColorTexture);return w(this.context.device,{unlit:n,...e},{NORMAL:t.attributes.normals,TEXCOORD_0:t.attributes.texCoords},{pbrDebug:!1,lights:!0,useTangents:!1})}calculateFeatureIdsPickingColors(e){const t=this.props.featureIds,n=new Uint8ClampedArray(t.length*e.size),i=[];for(let o=0;o<t.length;o++)this.encodePickingColor(t[o],i),n[3*o]=i[0],n[3*o+1]=i[1],n[3*o+2]=i[2];e.value=n}finalizeState(e){super.finalizeState(e),this.state.parsedPBRMaterial?.generatedTextures.forEach((e=>e.destroy())),this.setState({parsedPBRMaterial:null})}}se.layerName="MeshLayer",se.defaultProps={pbrMaterial:{type:"object",value:null},featureIds:{type:"array",value:null,optional:!0}};const re=se;var ae=n(85930),le=n(40830),ce=n(68118),ue=n(38950);const he=[0],de={getPointColor:{type:"accessor",value:[0,0,0,255]},pointSize:1,data:"",loader:ue.i,onTilesetLoad:{type:"function",value:e=>{}},onTileLoad:{type:"function",value:e=>{}},onTileUnload:{type:"function",value:e=>{}},onTileError:{type:"function",value:(e,t,n)=>{}},_getMeshColor:{type:"function",value:e=>[255,255,255]}};class pe extends o.A{initializeState(){"onTileLoadFail"in this.props&&s.A.removed("onTileLoadFail","onTileError")(),this.state={layerMap:{},tileset3d:null,activeViewports:{},lastUpdatedViewports:null}}get isLoaded(){return Boolean(this.state?.tileset3d?.isLoaded()&&super.isLoaded)}shouldUpdateState({changeFlags:e}){return e.somethingChanged}updateState({props:e,oldProps:t,changeFlags:n}){if(e.data&&e.data!==t.data&&this._loadTileset(e.data),n.viewportChanged){const{activeViewports:e}=this.state;Object.keys(e).length&&(this._updateTileset(e),this.state.lastUpdatedViewports=e,this.state.activeViewports={})}if(n.propsChanged){const{layerMap:e}=this.state;for(const t in e)e[t].needsUpdate=!0}}activateViewport(e){const{activeViewports:t,lastUpdatedViewports:n}=this.state;this.internalState.viewport=e,t[e.id]=e;const i=n?.[e.id];i&&e.equals(i)||(this.setChangeFlags({viewportChanged:!0}),this.setNeedsUpdate())}getPickingInfo({info:e,sourceLayer:t}){const n=t&&t.props.tile;return e.picked&&(e.object=n),e.sourceTile=n,e}filterSubLayer({layer:e,viewport:t}){const{tile:n}=e.props,{id:i}=t;return n.selected&&n.viewportIds.includes(i)}_updateAutoHighlight(e){const t=e.sourceTile,n=this.state.layerMap[t?.id];n&&n.layer&&n.layer.updateAutoHighlight(e)}async _loadTileset(e){const{loadOptions:t={}}=this.props,n=this.props.loader||this.props.loaders,i=Array.isArray(n)?n[0]:n,o={loadOptions:{...t}};let s=e;if(i.preload){const n=await i.preload(e,t);n.url&&(s=n.url),n.headers&&(o.loadOptions.fetch={...o.loadOptions.fetch,headers:n.headers}),Object.assign(o,n)}const r=await(0,ae.H)(s,i,o.loadOptions),a=new le.Q(r,{onTileLoad:this._onTileLoad.bind(this),onTileUnload:this._onTileUnload.bind(this),onTileError:this.props.onTileError,...o});this.setState({tileset3d:a,layerMap:{}}),this._updateTileset(this.state.activeViewports),this.props.onTilesetLoad(a)}_onTileLoad(e){const{lastUpdatedViewports:t}=this.state;this.props.onTileLoad(e),this._updateTileset(t),this.setNeedsUpdate()}_onTileUnload(e){delete this.state.layerMap[e.id],this.props.onTileUnload(e)}_updateTileset(e){if(!e)return;const{tileset3d:t}=this.state,{timeline:n}=this.context,i=Object.keys(e).length;n&&i&&t&&t.selectTiles(Object.values(e)).then((e=>{this.state.frameNumber!==e&&this.setState({frameNumber:e})}))}_getSubLayer(e,t){if(!e.content)return null;switch(e.type){case ce.WH.POINTCLOUD:return this._makePointCloudLayer(e,t);case ce.WH.SCENEGRAPH:return this._make3DModelLayer(e);case ce.WH.MESH:return this._makeSimpleMeshLayer(e,t);default:throw new Error(`Tile3DLayer: Failed to render layer of type ${e.content.type}`)}}_makePointCloudLayer(e,t){const{attributes:n,pointCount:i,constantRGBA:o,cartographicOrigin:s,modelMatrix:l}=e.content,{positions:c,normals:u,colors:h}=n;if(!c)return null;const d=t&&t.props.data||{header:{vertexCount:i},attributes:{POSITION:c,NORMAL:u,COLOR_0:h}},{pointSize:p,getPointColor:f}=this.props;return new(this.getSubLayerClass("pointcloud",a.A))({pointSize:p},this.getSubLayerProps({id:"pointcloud"}),{id:`${this.id}-pointcloud-${e.id}`,tile:e,data:d,coordinateSystem:r.rf.METER_OFFSETS,coordinateOrigin:s,modelMatrix:l,getColor:o||f,_offset:0})}_make3DModelLayer(e){const{gltf:t,instances:n,cartographicOrigin:i,modelMatrix:o}=e.content;return new(this.getSubLayerClass("scenegraph",$))({_lighting:"pbr"},this.getSubLayerProps({id:"scenegraph"}),{id:`${this.id}-scenegraph-${e.id}`,tile:e,data:n||he,scenegraph:t,coordinateSystem:r.rf.METER_OFFSETS,coordinateOrigin:i,modelMatrix:o,getTransformMatrix:e=>e.modelMatrix,getPosition:[0,0,0],_offset:0})}_makeSimpleMeshLayer(e,t){const n=e.content,{attributes:o,indices:s,modelMatrix:a,cartographicOrigin:l,coordinateSystem:c=r.rf.METER_OFFSETS,material:u,featureIds:h}=n,{_getMeshColor:d}=this.props,p=t&&t.props.mesh||new i.V({topology:"triangle-list",attributes:me(o),indices:s});return new(this.getSubLayerClass("mesh",re))(this.getSubLayerProps({id:"mesh"}),{id:`${this.id}-mesh-${e.id}`,tile:e,mesh:p,data:he,getColor:d(e),pbrMaterial:u,modelMatrix:a,coordinateOrigin:l,coordinateSystem:c,featureIds:h,_offset:0})}renderLayers(){const{tileset3d:e,layerMap:t}=this.state;return e?e.tiles.map((e=>{const n=t[e.id]=t[e.id]||{tile:e};let{layer:i}=n;return e.selected&&(i?n.needsUpdate&&(i=this._getSubLayer(e,i),n.needsUpdate=!1):i=this._getSubLayer(e)),n.layer=i,i})).filter(Boolean):null}}pe.defaultProps=de,pe.layerName="Tile3DLayer";const fe=pe;function me(e){const t={};return t.positions={...e.positions,value:new Float32Array(e.positions.value)},e.normals&&(t.normals=e.normals),e.texCoords&&(t.texCoords=e.texCoords),e.colors&&(t.colors=e.colors),e.uvRegions&&(t.uvRegions=e.uvRegions),t}},45800:(e,t,n)=>{n.d(t,{A:()=>f});var i=n(10688),o=n(84175),s=n(27586),r=n(43349),a=n(9350),l=n(12530),c=n(25337);const u=[0,0,0,255],h=[0,0,1],d={sizeUnits:"pixels",pointSize:{type:"number",min:0,value:10},getPosition:{type:"accessor",value:e=>e.position},getNormal:{type:"accessor",value:h},getColor:{type:"accessor",value:u},material:!0,radiusPixels:{deprecatedFor:"pointSize"}};class p extends i.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME point-cloud-layer-vertex-shader\nin vec3 positions;\nin vec3 instanceNormals;\nin vec4 instanceColors;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec3 instancePickingColors;\nuniform float opacity;\nuniform float radiusPixels;\nuniform int sizeUnits;\nout vec4 vColor;\nout vec2 unitPosition;\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.normal = project_normal(instanceNormals);\nunitPosition = positions.xy;\ngeometry.uv = unitPosition;\ngeometry.pickingColor = instancePickingColors;\nvec3 offset = vec3(positions.xy * project_size_to_pixel(radiusPixels, sizeUnits), 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\nvec3 lightColor = lighting_getLightColor(instanceColors.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, instanceColors.a * opacity);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME point-cloud-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 unitPosition;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = unitPosition;\nfloat distToCenter = length(unitPosition);\nif (distToCenter > 1.0) {\ndiscard;\n}\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[o.A,s.K,r.A]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceNormals:{size:3,transition:!0,accessor:"getNormal",defaultValue:h},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:u}})}updateState(e){const{changeFlags:t,props:n}=e;super.updateState(e),t.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll()),t.dataChanged&&function(e){const{header:t,attributes:n}=e;if(t&&n&&(e.length=t.vertexCount,n.POSITION&&(n.instancePositions=n.POSITION),n.NORMAL&&(n.instanceNormals=n.NORMAL),n.COLOR_0)){const{size:e,value:t}=n.COLOR_0;n.instanceColors={size:e,type:"unorm8",value:t}}}(n.data)}draw({uniforms:e}){const{pointSize:t,sizeUnits:n}=this.props,i=this.state.model;i.setUniforms(e),i.setUniforms({sizeUnits:a.p5[n],radiusPixels:t}),i.draw(this.context.renderPass)}_getModel(){const e=[];for(let t=0;t<3;t++){const n=t/3*Math.PI*2;e.push(2*Math.cos(n),2*Math.sin(n),0)}return new l.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new c.V({topology:"triangle-list",attributes:{positions:new Float32Array(e)}}),isInstanced:!0})}}p.layerName="PointCloudLayer",p.defaultProps=d;const f=p},77422:(e,t,n)=>{n.d(t,{I:()=>l});var i=n(54272),o=n(54901),s=n(73731),r=n(83588),a=n(68225);class l extends i.M{constructor(e=0,t=0){super(2),(0,o.cy)(e)&&1===arguments.length?this.copy(e):(o.$W.debug&&((0,s.ws)(e),(0,s.ws)(t)),this[0]=e,this[1]=t)}set(e,t){return this[0]=e,this[1]=t,this.check()}copy(e){return this[0]=e[0],this[1]=e[1],this.check()}fromObject(e){return o.$W.debug&&((0,s.ws)(e.x),(0,s.ws)(e.y)),this[0]=e.x,this[1]=e.y,this.check()}toObject(e){return e.x=this[0],e.y=this[1],e}get ELEMENTS(){return 2}horizontalAngle(){return Math.atan2(this.y,this.x)}verticalAngle(){return Math.atan2(this.x,this.y)}transform(e){return this.transformAsPoint(e)}transformAsPoint(e){return(0,r.Z0)(this,this,e),this.check()}transformAsVector(e){return(0,a.B$)(this,this,e),this.check()}transformByMatrix3(e){return(0,r.ei)(this,this,e),this.check()}transformByMatrix2x3(e){return(0,r.l0)(this,this,e),this.check()}transformByMatrix2(e){return(0,r.ZF)(this,this,e),this.check()}}},4912:(e,t,n)=>{n.d(t,{C:()=>I});var i=n(87597),o=n(72734),s=n(4990),r=n(82859),a=n(31886),l=n(54901);const c=6378137,u=6378137,h=6356752.314245179;Math.max(c,u,h);function d(e){return e}new i.P;function p(e,t=[],n=d){return"longitude"in e?(t[0]=n(e.longitude),t[1]=n(e.latitude),t[2]=e.height):"x"in e?(t[0]=n(e.x),t[1]=n(e.y),t[2]=e.z):(t[0]=n(e[0]),t[1]=n(e[1]),t[2]=e[2]),t}function f(e,t,n=d){return"longitude"in t?(t.longitude=n(e[0]),t.latitude=n(e[1]),t.height=e[2]):"x"in t?(t.x=n(e[0]),t.y=n(e[1]),t.z=e[2]):(t[0]=n(e[0]),t[1]=n(e[1]),t[2]=e[2]),t}const m=new i.P,g={up:{south:"east",north:"west",west:"south",east:"north"},down:{south:"west",north:"east",west:"north",east:"south"},south:{up:"west",down:"east",west:"down",east:"up"},north:{up:"east",down:"west",west:"up",east:"down"},west:{up:"north",down:"south",north:"down",south:"up"},east:{up:"south",down:"north",north:"up",south:"down"}},v={north:[-1,0,0],east:[0,1,0],up:[0,0,1],south:[1,0,0],west:[0,-1,0],down:[0,0,-1]},_={east:new i.P,north:new i.P,up:new i.P,west:new i.P,south:new i.P,down:new i.P},S=new i.P,y=new i.P,b=new i.P;function M(e,t,n,i,o,r){const a=g[t]&&g[t][n];let c,u,h;(0,s.v)(a&&(!i||i===a));const d=m.copy(o);if((0,l.aI)(d.x,0,1e-14)&&(0,l.aI)(d.y,0,1e-14)){const e=Math.sign(d.z);c=S.fromArray(v[t]),"east"!==t&&"west"!==t&&c.scale(e),u=y.fromArray(v[n]),"east"!==n&&"west"!==n&&u.scale(e),h=b.fromArray(v[i]),"east"!==i&&"west"!==i&&h.scale(e)}else{const{up:o,east:s,north:r}=_;s.set(-d.y,d.x,0).normalize(),e.geodeticSurfaceNormal(d,o),r.copy(o).cross(s);const{down:a,west:l,south:p}=_;a.copy(o).scale(-1),l.copy(s).scale(-1),p.copy(r).scale(-1),c=_[t],u=_[n],h=_[i]}return r[0]=c.x,r[1]=c.y,r[2]=c.z,r[3]=0,r[4]=u.x,r[5]=u.y,r[6]=u.z,r[7]=0,r[8]=h.x,r[9]=h.y,r[10]=h.z,r[11]=0,r[12]=d.x,r[13]=d.y,r[14]=d.z,r[15]=1,r}const x=new i.P,C=new i.P,A=new i.P;const P=new i.P,L=new i.P,R=new i.P,E=new i.P,w=new i.P,N=new i.P;class I{constructor(e=0,t=0,n=0){this.centerToleranceSquared=o.Ix,(0,s.v)(e>=0),(0,s.v)(t>=0),(0,s.v)(n>=0),this.radii=new i.P(e,t,n),this.radiiSquared=new i.P(e*e,t*t,n*n),this.radiiToTheFourth=new i.P(e*e*e*e,t*t*t*t,n*n*n*n),this.oneOverRadii=new i.P(0===e?0:1/e,0===t?0:1/t,0===n?0:1/n),this.oneOverRadiiSquared=new i.P(0===e?0:1/(e*e),0===t?0:1/(t*t),0===n?0:1/(n*n)),this.minimumRadius=Math.min(e,t,n),this.maximumRadius=Math.max(e,t,n),0!==this.radiiSquared.z&&(this.squaredXOverSquaredZ=this.radiiSquared.x/this.radiiSquared.z),Object.freeze(this)}equals(e){return this===e||Boolean(e&&this.radii.equals(e.radii))}toString(){return this.radii.toString()}cartographicToCartesian(e,t=[0,0,0]){const n=L,i=R,[,,o]=e;this.geodeticSurfaceNormalCartographic(e,n),i.copy(this.radiiSquared).scale(n);const s=Math.sqrt(n.dot(i));return i.scale(1/s),n.scale(o),i.add(n),i.to(t)}cartesianToCartographic(e,t=[0,0,0]){N.from(e);const n=this.scaleToGeodeticSurface(N,E);if(!n)return;const i=this.geodeticSurfaceNormal(n,L),o=w;o.copy(N).subtract(n);const s=Math.atan2(i.y,i.x),a=Math.asin(i.z),c=Math.sign(r.Om(o,N))*r.Bw(o);return f([s,a,c],t,l.$W._cartographicRadians?d:l.xW)}eastNorthUpToFixedFrame(e,t=new a.k){return M(this,"east","north","up",e,t)}localFrameToFixedFrame(e,t,n,i,o=new a.k){return M(this,e,t,n,i,o)}geocentricSurfaceNormal(e,t=[0,0,0]){return P.from(e).normalize().to(t)}geodeticSurfaceNormalCartographic(e,t=[0,0,0]){const n=function(e,t=[]){return p(e,t,l.$W._cartographicRadians?d:l.eh)}(e),i=n[0],o=n[1],s=Math.cos(o);return P.set(s*Math.cos(i),s*Math.sin(i),Math.sin(o)).normalize(),P.to(t)}geodeticSurfaceNormal(e,t=[0,0,0]){return P.from(e).scale(this.oneOverRadiiSquared).normalize().to(t)}scaleToGeodeticSurface(e,t){return function(e,t,n=[]){const{oneOverRadii:i,oneOverRadiiSquared:s,centerToleranceSquared:r}=t;x.from(e);const a=x.x,l=x.y,c=x.z,u=i.x,h=i.y,d=i.z,p=a*a*u*u,f=l*l*h*h,m=c*c*d*d,g=p+f+m,v=Math.sqrt(1/g);if(!Number.isFinite(v))return;const _=C;if(_.copy(e).scale(v),g<r)return _.to(n);const S=s.x,y=s.y,b=s.z,M=A;M.set(_.x*S*2,_.y*y*2,_.z*b*2);let P,L,R,E,w=(1-v)*x.len()/(.5*M.len()),N=0;do{w-=N,P=1/(1+w*S),L=1/(1+w*y),R=1/(1+w*b);const e=P*P,t=L*L,n=R*R;E=p*e+f*t+m*n-1,N=E/(-2*(p*(e*P)*S+f*(t*L)*y+m*(n*R)*b))}while(Math.abs(E)>o.IU);return x.scale([P,L,R]).to(n)}(e,this,t)}scaleToGeocentricSurface(e,t=[0,0,0]){E.from(e);const n=E.x,i=E.y,o=E.z,s=this.oneOverRadiiSquared,r=1/Math.sqrt(n*n*s.x+i*i*s.y+o*o*s.z);return E.multiplyScalar(r).to(t)}transformPositionToScaledSpace(e,t=[0,0,0]){return E.from(e).scale(this.oneOverRadii).to(t)}transformPositionFromScaledSpace(e,t=[0,0,0]){return E.from(e).scale(this.radii).to(t)}getSurfaceNormalIntersectionWithZAxis(e,t=0,n=[0,0,0]){(0,s.v)((0,l.aI)(this.radii.x,this.radii.y,o.Pq)),(0,s.v)(this.radii.z>0),E.from(e);const i=E.z*(1-this.squaredXOverSquaredZ);if(!(Math.abs(i)>=this.radii.z-t))return E.set(0,0,i).to(n)}}I.WGS84=new I(c,u,h)},48831:(e,t,n)=>{n.d(t,{Ay:()=>o});var i=n(35593);globalThis.probe={};const o=new i.t({id:"@probe.gl/log"})},37976:(e,t,n)=>{n.d(t,{A:()=>R});var i=null;try{i=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(E){}function o(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}function r(e){var t=Math.clz32(e&-e);return e?31-t:t}o.prototype.__isLong__,Object.defineProperty(o.prototype,"__isLong__",{value:!0}),o.isLong=s;var a={},l={};function c(e,t){var n,i,o;return t?(o=0<=(e>>>=0)&&e<256)&&(i=l[e])?i:(n=h(e,0,!0),o&&(l[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(i=a[e])?i:(n=h(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function u(e,t){if(isNaN(e))return t?y:S;if(t){if(e<0)return y;if(e>=g)return A}else{if(e<=-v)return P;if(e+1>=v)return C}return e<0?u(-e,t).neg():h(e%m|0,e/m|0,t)}function h(e,t,n){return new o(e,t,n)}o.fromInt=c,o.fromNumber=u,o.fromBits=h;var d=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("number"==typeof t?(n=t,t=!1):t=!!t,"NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return t?y:S;if((n=n||10)<2||36<n)throw RangeError("radix");var i;if((i=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===i)return p(e.substring(1),t,n).neg();for(var o=u(d(n,8)),s=S,r=0;r<e.length;r+=8){var a=Math.min(8,e.length-r),l=parseInt(e.substring(r,r+a),n);if(a<8){var c=u(d(n,a));s=s.mul(c).add(u(l))}else s=(s=s.mul(o)).add(u(l))}return s.unsigned=t,s}function f(e,t){return"number"==typeof e?u(e,t):"string"==typeof e?p(e,t):h(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}o.fromString=p,o.fromValue=f;var m=4294967296,g=m*m,v=g/2,_=c(1<<24),S=c(0);o.ZERO=S;var y=c(0,!0);o.UZERO=y;var b=c(1);o.ONE=b;var M=c(1,!0);o.UONE=M;var x=c(-1);o.NEG_ONE=x;var C=h(-1,2147483647,!1);o.MAX_VALUE=C;var A=h(-1,-1,!0);o.MAX_UNSIGNED_VALUE=A;var P=h(0,-2147483648,!1);o.MIN_VALUE=P;var L=o.prototype;L.toInt=function(){return this.unsigned?this.low>>>0:this.low},L.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},L.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(P)){var t=u(e),n=this.div(t),i=n.mul(t).sub(this);return n.toString(e)+i.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var o=u(d(e,6),this.unsigned),s=this,r="";;){var a=s.div(o),l=(s.sub(a.mul(o)).toInt()>>>0).toString(e);if((s=a).isZero())return l+r;for(;l.length<6;)l="0"+l;r=""+l+r}},L.getHighBits=function(){return this.high},L.getHighBitsUnsigned=function(){return this.high>>>0},L.getLowBits=function(){return this.low},L.getLowBitsUnsigned=function(){return this.low>>>0},L.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},L.isZero=function(){return 0===this.high&&0===this.low},L.eqz=L.isZero,L.isNegative=function(){return!this.unsigned&&this.high<0},L.isPositive=function(){return this.unsigned||this.high>=0},L.isOdd=function(){return!(1&~this.low)},L.isEven=function(){return!(1&this.low)},L.equals=function(e){return s(e)||(e=f(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},L.eq=L.equals,L.notEquals=function(e){return!this.eq(e)},L.neq=L.notEquals,L.ne=L.notEquals,L.lessThan=function(e){return this.comp(e)<0},L.lt=L.lessThan,L.lessThanOrEqual=function(e){return this.comp(e)<=0},L.lte=L.lessThanOrEqual,L.le=L.lessThanOrEqual,L.greaterThan=function(e){return this.comp(e)>0},L.gt=L.greaterThan,L.greaterThanOrEqual=function(e){return this.comp(e)>=0},L.gte=L.greaterThanOrEqual,L.ge=L.greaterThanOrEqual,L.compare=function(e){if(s(e)||(e=f(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},L.comp=L.compare,L.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(b)},L.neg=L.negate,L.add=function(e){s(e)||(e=f(e));var t=this.high>>>16,n=65535&this.high,i=this.low>>>16,o=65535&this.low,r=e.high>>>16,a=65535&e.high,l=e.low>>>16,c=0,u=0,d=0,p=0;return d+=(p+=o+(65535&e.low))>>>16,u+=(d+=i+l)>>>16,c+=(u+=n+a)>>>16,c+=t+r,h((d&=65535)<<16|(p&=65535),(c&=65535)<<16|(u&=65535),this.unsigned)},L.subtract=function(e){return s(e)||(e=f(e)),this.add(e.neg())},L.sub=L.subtract,L.multiply=function(e){if(this.isZero())return this;if(s(e)||(e=f(e)),i)return h(i.mul(this.low,this.high,e.low,e.high),i.get_high(),this.unsigned);if(e.isZero())return this.unsigned?y:S;if(this.eq(P))return e.isOdd()?P:S;if(e.eq(P))return this.isOdd()?P:S;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(_)&&e.lt(_))return u(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,o=this.low>>>16,r=65535&this.low,a=e.high>>>16,l=65535&e.high,c=e.low>>>16,d=65535&e.low,p=0,m=0,g=0,v=0;return g+=(v+=r*d)>>>16,m+=(g+=o*d)>>>16,g&=65535,m+=(g+=r*c)>>>16,p+=(m+=n*d)>>>16,m&=65535,p+=(m+=o*c)>>>16,m&=65535,p+=(m+=r*l)>>>16,p+=t*d+n*c+o*l+r*a,h((g&=65535)<<16|(v&=65535),(p&=65535)<<16|(m&=65535),this.unsigned)},L.mul=L.multiply,L.divide=function(e){if(s(e)||(e=f(e)),e.isZero())throw Error("division by zero");var t,n,o;if(i)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?h((this.unsigned?i.div_u:i.div_s)(this.low,this.high,e.low,e.high),i.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:S;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return M;o=y}else{if(this.eq(P))return e.eq(b)||e.eq(x)?P:e.eq(P)?b:(t=this.shr(1).div(e).shl(1)).eq(S)?e.isNegative()?b:x:(n=this.sub(e.mul(t)),o=t.add(n.div(e)));if(e.eq(P))return this.unsigned?y:S;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=S}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var r=Math.ceil(Math.log(t)/Math.LN2),a=r<=48?1:d(2,r-48),l=u(t),c=l.mul(e);c.isNegative()||c.gt(n);)c=(l=u(t-=a,this.unsigned)).mul(e);l.isZero()&&(l=b),o=o.add(l),n=n.sub(c)}return o},L.div=L.divide,L.modulo=function(e){return s(e)||(e=f(e)),i?h((this.unsigned?i.rem_u:i.rem_s)(this.low,this.high,e.low,e.high),i.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},L.mod=L.modulo,L.rem=L.modulo,L.not=function(){return h(~this.low,~this.high,this.unsigned)},L.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32},L.clz=L.countLeadingZeros,L.countTrailingZeros=function(){return this.low?r(this.low):r(this.high)+32},L.ctz=L.countTrailingZeros,L.and=function(e){return s(e)||(e=f(e)),h(this.low&e.low,this.high&e.high,this.unsigned)},L.or=function(e){return s(e)||(e=f(e)),h(this.low|e.low,this.high|e.high,this.unsigned)},L.xor=function(e){return s(e)||(e=f(e)),h(this.low^e.low,this.high^e.high,this.unsigned)},L.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?h(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):h(0,this.low<<e-32,this.unsigned)},L.shl=L.shiftLeft,L.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?h(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):h(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},L.shr=L.shiftRight,L.shiftRightUnsigned=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?h(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):h(32===e?this.high:this.high>>>e-32,0,this.unsigned)},L.shru=L.shiftRightUnsigned,L.shr_u=L.shiftRightUnsigned,L.rotateLeft=function(e){var t;return s(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?h(this.high,this.low,this.unsigned):e<32?(t=32-e,h(this.low<<e|this.high>>>t,this.high<<e|this.low>>>t,this.unsigned)):(t=32-(e-=32),h(this.high<<e|this.low>>>t,this.low<<e|this.high>>>t,this.unsigned))},L.rotl=L.rotateLeft,L.rotateRight=function(e){var t;return s(e)&&(e=e.toInt()),0==(e&=63)?this:32===e?h(this.high,this.low,this.unsigned):e<32?(t=32-e,h(this.high<<t|this.low>>>e,this.low<<t|this.high>>>e,this.unsigned)):(t=32-(e-=32),h(this.low<<t|this.high>>>e,this.high<<t|this.low>>>e,this.unsigned))},L.rotr=L.rotateRight,L.toSigned=function(){return this.unsigned?h(this.low,this.high,!1):this},L.toUnsigned=function(){return this.unsigned?this:h(this.low,this.high,!0)},L.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},L.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},L.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},o.fromBytes=function(e,t,n){return n?o.fromBytesLE(e,t):o.fromBytesBE(e,t)},o.fromBytesLE=function(e,t){return new o(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},o.fromBytesBE=function(e,t){return new o(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const R=o}}]);