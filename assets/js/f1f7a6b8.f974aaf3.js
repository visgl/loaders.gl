"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8130],{64740:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var n=t(62540),r=t(43023);const s={},d="GIFBuilder \ud83d\udea7",o={id:"modules/video/api-reference/gif-builder",title:"GIFBuilder \ud83d\udea7",description:"This GIFBuilder is experimental and may change significantly in minor releases and ev en patch releases. Pin down your loaders.gl version if you wish to use it.",source:"@site/../docs/modules/video/api-reference/gif-builder.md",sourceDirName:"modules/video/api-reference",slug:"/modules/video/api-reference/gif-builder",permalink:"/docs/modules/video/api-reference/gif-builder",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/loaders.gl/tree/master/website/../docs/modules/video/api-reference/gif-builder.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/modules/video/"},next:{title:"Overview",permalink:"/docs/modules/wkt/"}},l={},a=[{value:"Usage",id:"usage",level:2},{value:"Methods",id:"methods",level:2},{value:"constructor(options: object)",id:"constructoroptions-object",level:3},{value:"add(file: Image | string | object)",id:"addfile-image--string--object",level:3},{value:"build(): string",id:"build-string",level:3},{value:"Options",id:"options",level:2},{value:"Experimental Options",id:"experimental-options",level:3},{value:"Remarks",id:"remarks",level:2},{value:"Attribution",id:"attribution",level:2}];function c(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"gifbuilder-",children:"GIFBuilder \ud83d\udea7"})}),"\n",(0,n.jsx)("p",{class:"badges",children:(0,n.jsx)("img",{src:"https://img.shields.io/badge/From-v2.2-blue.svg?style=flat-square",alt:"From-v2.2"})}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["This ",(0,n.jsx)(i.code,{children:"GIFBuilder"})," is experimental and may change significantly in minor releases and ev en patch releases. Pin down your loaders.gl version if you wish to use it."]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"GIFBuilder"})," class creates a base64 encoded GIF image from either:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"a series of images"}),"\n",(0,n.jsx)(i.li,{children:"a series of image URLs"}),"\n",(0,n.jsx)(i.li,{children:"a video URL"}),"\n",(0,n.jsx)(i.li,{children:"or by capturing the webcam."}),"\n"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"GIFBuilder"})," only works in the browser, and many features are experimental."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(i.p,{children:"Build a GIF from images"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-typescript",children:"import {load} from '@loaders.gl/core';\nimport {ImageLoader} from '@loaders.gl/images';\nimport {GIFBuilder} from '@loaders.gl/video';\n\nconst gifBuilder = new GIFBuilder({source: 'images', width: 400, height: 400});\ngifBuilder.add(\n  await load('http://i.imgur.com/2OO33vX.jpg', ImageLoader, {images: {type: 'image'}})\n);\ngifBuilder.add(\n  await load('http://i.imgur.com/qOwVaSN.png', ImageLoader, {images: {type: 'image'}})\n);\ngifBuilder.add(\n  await load('http://i.imgur.com/Vo5mFZJ.gif', ImageLoader, {images: {type: 'image'}})\n);\ngifBuilder.build();\n"})}),"\n",(0,n.jsx)(i.p,{children:"Build a GIF from image URLs (Experimental)"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-typescript",children:"import {GIFBuilder} from '@loaders.gl/video';\n\nconst gifBuilder = new GIFBuilder({source: 'images', width: 400, height: 400});\ngifBuilder.add('http://i.imgur.com/2OO33vX.jpg');\ngifBuilder.add('http://i.imgur.com/qOwVaSN.png');\ngifBuilder.add('http://i.imgur.com/Vo5mFZJ.gif');\ngifBuilder.build();\n"})}),"\n",(0,n.jsx)(i.p,{children:"Build a GIF from image URLs, with frame-specific Text (Experimental)"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-typescript",children:"import {GIFBuilder} from '@loaders.gl/video';\n\nconst gifBuilder = new GIFBuilder({source: 'images', width: 400, height: 400});\ngifBuilder.add({src: 'http://i.imgur.com/2OO33vX.jpg', text: 'First image text'});\ngifBuilder.add({src: 'http://i.imgur.com/qOwVaSN.png', text: 'Second image text'});\ngifBuilder.add({src: 'http://i.imgur.com/Vo5mFZJ.gif', text: 'This image text'});\ngifBuilder.build();\n"})}),"\n",(0,n.jsx)(i.p,{children:"Build a GIF from the webcam (Experimental)"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-typescript",children:"import {GIFBuilder} from '@loaders.gl/video';\nconst gifBuilder = new GIFBuilder({source: webcam, width: 400, height: 400});\ngifBuilder.build();\n"})}),"\n",(0,n.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(i.h3,{id:"constructoroptions-object",children:"constructor(options: object)"}),"\n",(0,n.jsxs)(i.p,{children:["Creates a new ",(0,n.jsx)(i.code,{children:"GIFBuilder"})," instance."]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"options"})," See the Options section below."]}),"\n",(0,n.jsx)(i.h3,{id:"addfile-image--string--object",children:"add(file: Image | string | object)"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"images"})," -- ",(0,n.jsx)(i.code,{children:"Image"})," objects can be added.(Note: ",(0,n.jsx)(i.code,{children:"ImageBitmap"})," is not currently supported)."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"Experimentally, tha following types can currently be added (may be removed in upcoming release)"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"string URLs for images"})," If this option is used, then a GIF will be created using these images e.g. ,.'",(0,n.jsx)(i.a,{href:"http://i.imgur.com/2OO33vX.jpg",children:"http://i.imgur.com/2OO33vX.jpg"}),"', '",(0,n.jsx)(i.a,{href:"http://i.imgur.com/qOwVaSN.png",children:"http://i.imgur.com/qOwVaSN.png"}),"', '",(0,n.jsx)(i.a,{href:"http://i.imgur.com/Vo5mFZJ.gif",children:"http://i.imgur.com/Vo5mFZJ.gif"}),"'"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"a video"})," a GIF will be created using the first supplied video that is supported by the current browser's video codecs. E.g. 'example.mp4', 'example.ogv'."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsx)(i.p,{children:"Also note that a mix of types is not supported. All added elements must be of the same type (images, image URLs, video URLs)."}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"build-string",children:"build(): string"}),"\n",(0,n.jsx)(i.p,{children:"The build method will actually build the GIF. It returns a base 64 encoded GIF."}),"\n",(0,n.jsxs)(i.p,{children:["Note: After calling ",(0,n.jsx)(i.code,{children:"build()"})," this builder instance is not intended to be used further. Create new ",(0,n.jsx)(i.code,{children:"GLTBuilder"})," instances to build additional GIFs."]}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsxs)(i.p,{children:["| Option           | Type     | Default                                                        | Description                                                                          |\n| ---------------- | -------- | -------------------------------------------------------------- | ------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------- |\n| ",(0,n.jsx)(i.code,{children:"source"}),"         | ",(0,n.jsx)(i.code,{children:"string"})," | ",(0,n.jsx)(i.code,{children:"'images'"}),"                                                     | Either ",(0,n.jsx)(i.code,{children:"'images'"}),", ",(0,n.jsx)(i.code,{children:"'video'"})," or ",(0,n.jsx)(i.code,{children:"'webcam'"}),"                                           |\n| ",(0,n.jsx)(i.code,{children:"width"}),"          | ",(0,n.jsx)(i.code,{children:"number"})," | ",(0,n.jsx)(i.code,{children:"200"}),"                                                          | Desired width of the generated GIF image                                             |\n| ",(0,n.jsx)(i.code,{children:"height"}),"         | ",(0,n.jsx)(i.code,{children:"number"})," | ",(0,n.jsx)(i.code,{children:"200"}),"                                                          | Desired height of the generated GIF image                                            |\n| ",(0,n.jsx)(i.code,{children:"crossOrigin"}),"    | ",(0,n.jsx)(i.code,{children:"string"})," | CORS attribute for requesting image or video URLs. 'Anonymous' | 'Anonymous', 'use-credentials', or '' (to not set).                                  |\n| QUALITY SETTINGS |          |                                                                |\n| ",(0,n.jsx)(i.code,{children:"sampleInterval"})," |          | ",(0,n.jsx)(i.code,{children:"10"}),"                                                           | pixels to skip when creating the palette. Default is 10. Less is better, but slower. |\n| ",(0,n.jsx)(i.code,{children:"numWorkers"}),"     |          | ",(0,n.jsx)(i.code,{children:"2"}),"                                                            |                                                                                      | how many web workers to use to process the animated GIF frames. Default is 2.                                                                     |\n| ",(0,n.jsx)(i.code,{children:"interval"}),"       |          | ",(0,n.jsx)(i.code,{children:"0.1"}),"                                                          | The amount of time (in seconds) to wait between each frame capture                   |\n| ",(0,n.jsx)(i.code,{children:"offset"}),"         |          | ",(0,n.jsx)(i.code,{children:"null"}),"                                                         |                                                                                      | The amount of time (in seconds) to start capturing the GIF (only for HTML5 videos)                                                                |\n| ",(0,n.jsx)(i.code,{children:"numFrames"}),"      |          | ",(0,n.jsx)(i.code,{children:"10"}),"                                                           |                                                                                      | The number of frames to use to create the animated GIF. Each frame is captured every 100 milliseconds of a video and every ms for existing images |\n| ",(0,n.jsx)(i.code,{children:"frameDuration"}),"  |          | ",(0,n.jsx)(i.code,{children:"1"}),"                                                            |                                                                                      | The amount of time (10 = 1s) to stay on each frame                                                                                                |"]}),"\n",(0,n.jsx)(i.p,{children:"Notes:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"By adjusting the sample interval, you can either produce extremely high-quality images slowly, or produce good images in reasonable times. With a sampleInterval of 1, the entire image is used in the learning phase, while with an interval of 10, a pseudo-random subset of 1/10 of the pixels are used in the learning phase. A sampling factor of 10 gives a substantial speed-up, with a small quality penalty."}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"experimental-options",children:"Experimental Options"}),"\n",(0,n.jsxs)(i.p,{children:["These options are forwarded directly to the underlying ",(0,n.jsx)(i.a,{href:"https://github.com/yahoo/gifshot",children:(0,n.jsx)(i.code,{children:"gifshot"})})," module. They are not officially supported by loaders.gl, but can still be useful. In case things are unclear it is recommended to search the documentation and issues in that module."]}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Option"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Default"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"when the current image is completed"}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"CSS FILTER OPTIONS"}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"filter"})}),(0,n.jsx)(i.td,{children:"`'', // CSS filter that will be applied to the image (eg. blur(5px))"}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"WATERMARK OPTIONS"}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"waterMark"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"null"})}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{children:"If an image is given here, it will be stamped on top of the GIF frames"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"waterMarkHeight"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"null"})}),(0,n.jsx)(i.td,{children:",// Height of the waterMark"}),(0,n.jsx)(i.td,{})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"waterMarkWidth"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"null"})}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{children:"Height of the waterMark"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"waterMarkXCoordinate"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"1"})}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{children:"The X (horizontal) Coordinate of the watermark image"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"waterMarkYCoordinate"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"1"})}),(0,n.jsx)(i.td,{}),(0,n.jsx)(i.td,{children:"The Y (vertical) Coordinate of the watermark image"})]})]})]}),"\n",(0,n.jsxs)(i.p,{children:["| TEXT OPTIONS\n| ",(0,n.jsx)(i.code,{children:"text"})," | ",(0,n.jsx)(i.code,{children:"'', // The text that covers the animated GIF | |"}),"showFrameText",(0,n.jsx)(i.code,{children:"|"}),"true | If frame-specific text is supplied with the image array, you can force the |frame-specific text to not be displayed by making this option 'false'.\n| ",(0,n.jsx)(i.code,{children:"fontWeight"})," | ",(0,n.jsx)(i.code,{children:"'normal' | The font weight of the text that covers the animated GIF | |"}),"fontSize",(0,n.jsx)(i.code,{children:"|"}),"'16px' | The font size of the text that covers the animated GIF |\n| ",(0,n.jsx)(i.code,{children:"minFontSize"})," | ",(0,n.jsx)(i.code,{children:"'10px' | The minimum font size of the text that covers the animated GIF (Note"})," | ",(0,n.jsx)(i.code,{children:"This |option is only applied if the text being applied is cut off) |"}),"resizeFont",(0,n.jsx)(i.code,{children:"|"}),"false | Whether or not the animated GIF text will be resized to fit within the GIF |container\n| ",(0,n.jsx)(i.code,{children:"fontFamily"})," | ",(0,n.jsx)(i.code,{children:"'sans-serif' | The font family of the text that covers the animated GIF | |"}),"fontColor",(0,n.jsx)(i.code,{children:"|"}),"'#ffffff' | The font color of the text that covers the animated GIF |\n| ",(0,n.jsx)(i.code,{children:"textAlign"})," | ",(0,n.jsx)(i.code,{children:"'center' | The horizontal text alignment of the text that covers the animated GIF | |"}),"textBaseline",(0,n.jsx)(i.code,{children:"|"}),"'bottom' | The vertical text alignment of the text that covers the animated GIF |\n| ",(0,n.jsx)(i.code,{children:"textXCoordinate"})," | ",(0,n.jsx)(i.code,{children:"null | The X (horizontal) Coordinate of the text that covers the animated GIF (only |use this if the default textAlign and textBaseline options don't work for you) |"}),"textYCoordinate",(0,n.jsx)(i.code,{children:"|"}),"null | The Y (vertical) Coordinate of the text that covers the animated GIF (only |use this if the default textAlign and textBaseline options don't work for you)"]}),"\n",(0,n.jsx)(i.h2,{id:"remarks",children:"Remarks"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Make sure these image resources are CORS enabled to prevent any cross-origin JavaScript errors"}),"\n",(0,n.jsx)(i.li,{children:"You may also pass a NodeList of existing image elements on the page"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"attribution",children:"Attribution"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"GIFBuilder"})," is based on Yahoo's awesome ",(0,n.jsx)(i.a,{href:"https://github.com/yahoo/gifshot",children:(0,n.jsx)(i.code,{children:"gifshot"})})," module, and is MIT licensed."]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},43023:(e,i,t)=>{t.d(i,{R:()=>d,x:()=>o});var n=t(63696);const r={},s=n.createContext(r);function d(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);